// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/orders/v1/orders.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/orders/v1/orders.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace orders {
namespace v1 {

inline constexpr OrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        venue_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_{nullptr},
        quantity_{nullptr},
        limit_price_{nullptr},
        stop_price_{nullptr},
        created_at_{nullptr},
        meta_{nullptr},
        side_{static_cast< ::ampy::common::v1::Side >(0)},
        order_type_{static_cast< ::ampy::common::v1::OrderType >(0)},
        tif_{static_cast< ::ampy::common::v1::TimeInForce >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderRequest::OrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRequestDefaultTypeInternal() {}
  union {
    OrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRequestDefaultTypeInternal _OrderRequest_default_instance_;

inline constexpr OrderRequestBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : orders_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderRequestBatch::OrderRequestBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderRequestBatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderRequestBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRequestBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRequestBatchDefaultTypeInternal() {}
  union {
    OrderRequestBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRequestBatchDefaultTypeInternal _OrderRequestBatch_default_instance_;
}  // namespace v1
}  // namespace orders
}  // namespace ampy
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ampy_2forders_2fv1_2forders_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2forders_2fv1_2forders_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2forders_2fv1_2forders_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.client_order_id_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.security_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.side_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.order_type_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.tif_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.limit_price_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.stop_price_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.venue_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.strategy_tag_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.created_at_),
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequest, _impl_.meta_),
        0,
        1,
        4,
        10,
        11,
        12,
        5,
        6,
        7,
        2,
        3,
        8,
        9,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::orders::v1::OrderRequestBatch, _impl_.orders_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::orders::v1::OrderRequest)},
        {29, sizeof(::ampy::orders::v1::OrderRequestBatch)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::orders::v1::_OrderRequest_default_instance_._instance,
    &::ampy::orders::v1::_OrderRequestBatch_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2forders_2fv1_2forders_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033ampy/orders/v1/orders.proto\022\016ampy.orde"
    "rs.v1\032\037google/protobuf/timestamp.proto\032\033"
    "ampy/common/v1/common.proto\"\345\004\n\014OrderReq"
    "uest\022\035\n\naccount_id\030\001 \001(\tR\taccountId\022&\n\017c"
    "lient_order_id\030\002 \001(\tR\rclientOrderId\0226\n\010s"
    "ecurity\030\003 \001(\0132\032.ampy.common.v1.SecurityI"
    "dR\010security\022(\n\004side\030\004 \001(\0162\024.ampy.common."
    "v1.SideR\004side\0228\n\norder_type\030\005 \001(\0162\031.ampy"
    ".common.v1.OrderTypeR\torderType\022-\n\003tif\030\006"
    " \001(\0162\033.ampy.common.v1.TimeInForceR\003tif\0223"
    "\n\010quantity\030\007 \001(\0132\027.ampy.common.v1.Decima"
    "lR\010quantity\0228\n\013limit_price\030\010 \001(\0132\027.ampy."
    "common.v1.DecimalR\nlimitPrice\0226\n\nstop_pr"
    "ice\030\t \001(\0132\027.ampy.common.v1.DecimalR\tstop"
    "Price\022\024\n\005venue\030\n \001(\tR\005venue\022!\n\014strategy_"
    "tag\030\013 \001(\tR\013strategyTag\0229\n\ncreated_at\030\014 \001"
    "(\0132\032.google.protobuf.TimestampR\tcreatedA"
    "t\022(\n\004meta\030\r \001(\0132\024.ampy.common.v1.MetaR\004m"
    "eta\"I\n\021OrderRequestBatch\0224\n\006orders\030\001 \003(\013"
    "2\034.ampy.orders.v1.OrderRequestR\006ordersB\275"
    "\001\n\022com.ampy.orders.v1B\013OrdersProtoP\001Z@gi"
    "thub.com/yeonholee50/ampy-proto/gen/go/a"
    "mpy/orders/v1;ordersv1\242\002\003AOX\252\002\016Ampy.Orde"
    "rs.V1\312\002\016Ampy\\Orders\\V1\342\002\032Ampy\\Orders\\V1\\"
    "GPBMetadata\352\002\020Ampy::Orders::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ampy_2forders_2fv1_2forders_2eproto_deps[2] = {
        &::descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ampy_2forders_2fv1_2forders_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2forders_2fv1_2forders_2eproto = {
    false,
    false,
    998,
    descriptor_table_protodef_ampy_2forders_2fv1_2forders_2eproto,
    "ampy/orders/v1/orders.proto",
    &descriptor_table_ampy_2forders_2fv1_2forders_2eproto_once,
    descriptor_table_ampy_2forders_2fv1_2forders_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_ampy_2forders_2fv1_2forders_2eproto::offsets,
    file_level_enum_descriptors_ampy_2forders_2fv1_2forders_2eproto,
    file_level_service_descriptors_ampy_2forders_2fv1_2forders_2eproto,
};
namespace ampy {
namespace orders {
namespace v1 {
// ===================================================================

class OrderRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._has_bits_);
};

void OrderRequest::clear_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ != nullptr) _impl_.security_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
void OrderRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
void OrderRequest::clear_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_price_ != nullptr) _impl_.limit_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
void OrderRequest::clear_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stop_price_ != nullptr) _impl_.stop_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
void OrderRequest::clear_created_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_at_ != nullptr) _impl_.created_at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100U;
}
void OrderRequest::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200U;
}
OrderRequest::OrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.orders.v1.OrderRequest)
}
PROTOBUF_NDEBUG_INLINE OrderRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::orders::v1::OrderRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_),
        client_order_id_(arena, from.client_order_id_),
        venue_(arena, from.venue_),
        strategy_tag_(arena, from.strategy_tag_) {}

OrderRequest::OrderRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.security_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_)
                : nullptr;
  _impl_.quantity_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_)
                : nullptr;
  _impl_.limit_price_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_)
                : nullptr;
  _impl_.stop_price_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_)
                : nullptr;
  _impl_.created_at_ = ((cached_has_bits & 0x00000100U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_at_)
                : nullptr;
  _impl_.meta_ = ((cached_has_bits & 0x00000200U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, side_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, side_),
           offsetof(Impl_, tif_) -
               offsetof(Impl_, side_) +
               sizeof(Impl_::tif_));

  // @@protoc_insertion_point(copy_constructor:ampy.orders.v1.OrderRequest)
}
PROTOBUF_NDEBUG_INLINE OrderRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_id_(arena),
        client_order_id_(arena),
        venue_(arena),
        strategy_tag_(arena) {}

inline void OrderRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, security_),
           0,
           offsetof(Impl_, tif_) -
               offsetof(Impl_, security_) +
               sizeof(Impl_::tif_));
}
OrderRequest::~OrderRequest() {
  // @@protoc_insertion_point(destructor:ampy.orders.v1.OrderRequest)
  SharedDtor(*this);
}
inline void OrderRequest::SharedDtor(MessageLite& self) {
  OrderRequest& this_ = static_cast<OrderRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  this_._impl_.client_order_id_.Destroy();
  this_._impl_.venue_.Destroy();
  this_._impl_.strategy_tag_.Destroy();
  delete this_._impl_.security_;
  delete this_._impl_.quantity_;
  delete this_._impl_.limit_price_;
  delete this_._impl_.stop_price_;
  delete this_._impl_.created_at_;
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderRequest(arena);
}
constexpr auto OrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderRequest),
                                            alignof(OrderRequest));
}
constexpr auto OrderRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderRequest>(), &OrderRequest::ByteSizeLong,
              &OrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._cached_size_),
          false,
      },
      &OrderRequest::kDescriptorMethods,
      &descriptor_table_ampy_2forders_2fv1_2forders_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderRequest_class_data_ =
        OrderRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderRequest_class_data_.tc_table);
  return OrderRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 6, 86, 2>
OrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::orders::v1::OrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string account_id = 1 [json_name = "accountId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.account_id_)}},
    // string client_order_id = 2 [json_name = "clientOrderId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.client_order_id_)}},
    // .ampy.common.v1.SecurityId security = 3 [json_name = "security"];
    {::_pbi::TcParser::FastMtS1,
     {26, 4, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.security_)}},
    // .ampy.common.v1.Side side = 4 [json_name = "side"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRequest, _impl_.side_), 10>(),
     {32, 10, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.side_)}},
    // .ampy.common.v1.OrderType order_type = 5 [json_name = "orderType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRequest, _impl_.order_type_), 11>(),
     {40, 11, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.order_type_)}},
    // .ampy.common.v1.TimeInForce tif = 6 [json_name = "tif"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRequest, _impl_.tif_), 12>(),
     {48, 12, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.tif_)}},
    // .ampy.common.v1.Decimal quantity = 7 [json_name = "quantity"];
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 1, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.quantity_)}},
    // .ampy.common.v1.Decimal limit_price = 8 [json_name = "limitPrice"];
    {::_pbi::TcParser::FastMtS1,
     {66, 6, 2, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.limit_price_)}},
    // .ampy.common.v1.Decimal stop_price = 9 [json_name = "stopPrice"];
    {::_pbi::TcParser::FastMtS1,
     {74, 7, 3, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.stop_price_)}},
    // string venue = 10 [json_name = "venue"];
    {::_pbi::TcParser::FastUS1,
     {82, 2, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.venue_)}},
    // string strategy_tag = 11 [json_name = "strategyTag"];
    {::_pbi::TcParser::FastUS1,
     {90, 3, 0, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.strategy_tag_)}},
    // .google.protobuf.Timestamp created_at = 12 [json_name = "createdAt"];
    {::_pbi::TcParser::FastMtS1,
     {98, 8, 4, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.created_at_)}},
    // .ampy.common.v1.Meta meta = 13 [json_name = "meta"];
    {::_pbi::TcParser::FastMtS1,
     {106, 9, 5, PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.meta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [json_name = "accountId"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.account_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string client_order_id = 2 [json_name = "clientOrderId"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.client_order_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ampy.common.v1.SecurityId security = 3 [json_name = "security"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.security_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Side side = 4 [json_name = "side"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.side_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .ampy.common.v1.OrderType order_type = 5 [json_name = "orderType"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.order_type_), _Internal::kHasBitsOffset + 11, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .ampy.common.v1.TimeInForce tif = 6 [json_name = "tif"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.tif_), _Internal::kHasBitsOffset + 12, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .ampy.common.v1.Decimal quantity = 7 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.quantity_), _Internal::kHasBitsOffset + 5, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Decimal limit_price = 8 [json_name = "limitPrice"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.limit_price_), _Internal::kHasBitsOffset + 6, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Decimal stop_price = 9 [json_name = "stopPrice"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.stop_price_), _Internal::kHasBitsOffset + 7, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string venue = 10 [json_name = "venue"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.venue_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strategy_tag = 11 [json_name = "strategyTag"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.strategy_tag_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp created_at = 12 [json_name = "createdAt"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.created_at_), _Internal::kHasBitsOffset + 8, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Meta meta = 13 [json_name = "meta"];
    {PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.meta_), _Internal::kHasBitsOffset + 9, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::common::v1::SecurityId>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Meta>()},
  }},
  {{
    "\33\12\17\0\0\0\0\0\0\0\5\14\0\0\0\0"
    "ampy.orders.v1.OrderRequest"
    "account_id"
    "client_order_id"
    "venue"
    "strategy_tag"
  }},
};
PROTOBUF_NOINLINE void OrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.orders.v1.OrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.client_order_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.venue_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.strategy_tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.security_ != nullptr);
      _impl_.security_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.limit_price_ != nullptr);
      _impl_.limit_price_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.stop_price_ != nullptr);
      _impl_.stop_price_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000300U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(_impl_.created_at_ != nullptr);
      _impl_.created_at_->Clear();
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  if ((cached_has_bits & 0x00001c00U) != 0) {
    ::memset(&_impl_.side_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.tif_) -
        reinterpret_cast<char*>(&_impl_.side_)) + sizeof(_impl_.tif_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderRequest& this_ = static_cast<const OrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.orders.v1.OrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1 [json_name = "accountId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.orders.v1.OrderRequest.account_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string client_order_id = 2 [json_name = "clientOrderId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_client_order_id().empty()) {
      const ::std::string& _s = this_._internal_client_order_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.orders.v1.OrderRequest.client_order_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ampy.common.v1.SecurityId security = 3 [json_name = "security"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.security_, this_._impl_.security_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Side side = 4 [json_name = "side"];
  if ((cached_has_bits & 0x00000400U) != 0) {
    if (this_._internal_side() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_side(), target);
    }
  }

  // .ampy.common.v1.OrderType order_type = 5 [json_name = "orderType"];
  if ((cached_has_bits & 0x00000800U) != 0) {
    if (this_._internal_order_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_order_type(), target);
    }
  }

  // .ampy.common.v1.TimeInForce tif = 6 [json_name = "tif"];
  if ((cached_has_bits & 0x00001000U) != 0) {
    if (this_._internal_tif() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_tif(), target);
    }
  }

  // .ampy.common.v1.Decimal quantity = 7 [json_name = "quantity"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Decimal limit_price = 8 [json_name = "limitPrice"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.limit_price_, this_._impl_.limit_price_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Decimal stop_price = 9 [json_name = "stopPrice"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.stop_price_, this_._impl_.stop_price_->GetCachedSize(), target,
        stream);
  }

  // string venue = 10 [json_name = "venue"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    if (!this_._internal_venue().empty()) {
      const ::std::string& _s = this_._internal_venue();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.orders.v1.OrderRequest.venue");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // string strategy_tag = 11 [json_name = "strategyTag"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    if (!this_._internal_strategy_tag().empty()) {
      const ::std::string& _s = this_._internal_strategy_tag();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.orders.v1.OrderRequest.strategy_tag");
      target = stream->WriteStringMaybeAliased(11, _s, target);
    }
  }

  // .google.protobuf.Timestamp created_at = 12 [json_name = "createdAt"];
  if ((cached_has_bits & 0x00000100U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.created_at_, this_._impl_.created_at_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Meta meta = 13 [json_name = "meta"];
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.orders.v1.OrderRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderRequest::ByteSizeLong(const MessageLite& base) {
  const OrderRequest& this_ = static_cast<const OrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderRequest::ByteSizeLong() const {
  const OrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.orders.v1.OrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string account_id = 1 [json_name = "accountId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string client_order_id = 2 [json_name = "clientOrderId"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_client_order_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_client_order_id());
      }
    }
    // string venue = 10 [json_name = "venue"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_venue().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_venue());
      }
    }
    // string strategy_tag = 11 [json_name = "strategyTag"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_strategy_tag().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_strategy_tag());
      }
    }
    // .ampy.common.v1.SecurityId security = 3 [json_name = "security"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.security_);
    }
    // .ampy.common.v1.Decimal quantity = 7 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
    }
    // .ampy.common.v1.Decimal limit_price = 8 [json_name = "limitPrice"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_price_);
    }
    // .ampy.common.v1.Decimal stop_price = 9 [json_name = "stopPrice"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stop_price_);
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    // .google.protobuf.Timestamp created_at = 12 [json_name = "createdAt"];
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_at_);
    }
    // .ampy.common.v1.Meta meta = 13 [json_name = "meta"];
    if ((cached_has_bits & 0x00000200U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
    }
    // .ampy.common.v1.Side side = 4 [json_name = "side"];
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (this_._internal_side() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_side());
      }
    }
    // .ampy.common.v1.OrderType order_type = 5 [json_name = "orderType"];
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (this_._internal_order_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_order_type());
      }
    }
    // .ampy.common.v1.TimeInForce tif = 6 [json_name = "tif"];
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (this_._internal_tif() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_tif());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderRequest*>(&to_msg);
  auto& from = static_cast<const OrderRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.orders.v1.OrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_client_order_id().empty()) {
        _this->_internal_set_client_order_id(from._internal_client_order_id());
      } else {
        if (_this->_impl_.client_order_id_.IsDefault()) {
          _this->_internal_set_client_order_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_venue().empty()) {
        _this->_internal_set_venue(from._internal_venue());
      } else {
        if (_this->_impl_.venue_.IsDefault()) {
          _this->_internal_set_venue("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_strategy_tag().empty()) {
        _this->_internal_set_strategy_tag(from._internal_strategy_tag());
      } else {
        if (_this->_impl_.strategy_tag_.IsDefault()) {
          _this->_internal_set_strategy_tag("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.security_ != nullptr);
      if (_this->_impl_.security_ == nullptr) {
        _this->_impl_.security_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_);
      } else {
        _this->_impl_.security_->MergeFrom(*from._impl_.security_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.limit_price_ != nullptr);
      if (_this->_impl_.limit_price_ == nullptr) {
        _this->_impl_.limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_);
      } else {
        _this->_impl_.limit_price_->MergeFrom(*from._impl_.limit_price_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.stop_price_ != nullptr);
      if (_this->_impl_.stop_price_ == nullptr) {
        _this->_impl_.stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_);
      } else {
        _this->_impl_.stop_price_->MergeFrom(*from._impl_.stop_price_);
      }
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      ABSL_DCHECK(from._impl_.created_at_ != nullptr);
      if (_this->_impl_.created_at_ == nullptr) {
        _this->_impl_.created_at_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_at_);
      } else {
        _this->_impl_.created_at_->MergeFrom(*from._impl_.created_at_);
      }
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      ABSL_DCHECK(from._impl_.meta_ != nullptr);
      if (_this->_impl_.meta_ == nullptr) {
        _this->_impl_.meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_);
      } else {
        _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
      }
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      if (from._internal_side() != 0) {
        _this->_impl_.side_ = from._impl_.side_;
      }
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      if (from._internal_order_type() != 0) {
        _this->_impl_.order_type_ = from._impl_.order_type_;
      }
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      if (from._internal_tif() != 0) {
        _this->_impl_.tif_ = from._impl_.tif_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRequest::CopyFrom(const OrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.orders.v1.OrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderRequest::InternalSwap(OrderRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_order_id_, &other->_impl_.client_order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.venue_, &other->_impl_.venue_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strategy_tag_, &other->_impl_.strategy_tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.tif_)
      + sizeof(OrderRequest::_impl_.tif_)
      - PROTOBUF_FIELD_OFFSET(OrderRequest, _impl_.security_)>(
          reinterpret_cast<char*>(&_impl_.security_),
          reinterpret_cast<char*>(&other->_impl_.security_));
}

::google::protobuf::Metadata OrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderRequestBatch::_Internal {
 public:
};

OrderRequestBatch::OrderRequestBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRequestBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.orders.v1.OrderRequestBatch)
}
PROTOBUF_NDEBUG_INLINE OrderRequestBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::orders::v1::OrderRequestBatch& from_msg)
      : orders_{visibility, arena, from.orders_},
        _cached_size_{0} {}

OrderRequestBatch::OrderRequestBatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderRequestBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRequestBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderRequestBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.orders.v1.OrderRequestBatch)
}
PROTOBUF_NDEBUG_INLINE OrderRequestBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : orders_{visibility, arena},
        _cached_size_{0} {}

inline void OrderRequestBatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrderRequestBatch::~OrderRequestBatch() {
  // @@protoc_insertion_point(destructor:ampy.orders.v1.OrderRequestBatch)
  SharedDtor(*this);
}
inline void OrderRequestBatch::SharedDtor(MessageLite& self) {
  OrderRequestBatch& this_ = static_cast<OrderRequestBatch&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderRequestBatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderRequestBatch(arena);
}
constexpr auto OrderRequestBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderRequestBatch, _impl_.orders_) +
          decltype(OrderRequestBatch::_impl_.orders_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(OrderRequestBatch), alignof(OrderRequestBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderRequestBatch::PlacementNew_,
                                 sizeof(OrderRequestBatch),
                                 alignof(OrderRequestBatch));
  }
}
constexpr auto OrderRequestBatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderRequestBatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderRequestBatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderRequestBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderRequestBatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderRequestBatch>(), &OrderRequestBatch::ByteSizeLong,
              &OrderRequestBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderRequestBatch, _impl_._cached_size_),
          false,
      },
      &OrderRequestBatch::kDescriptorMethods,
      &descriptor_table_ampy_2forders_2fv1_2forders_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderRequestBatch_class_data_ =
        OrderRequestBatch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderRequestBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderRequestBatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderRequestBatch_class_data_.tc_table);
  return OrderRequestBatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
OrderRequestBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderRequestBatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::orders::v1::OrderRequestBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ampy.orders.v1.OrderRequest orders = 1 [json_name = "orders"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRequestBatch, _impl_.orders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ampy.orders.v1.OrderRequest orders = 1 [json_name = "orders"];
    {PROTOBUF_FIELD_OFFSET(OrderRequestBatch, _impl_.orders_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::orders::v1::OrderRequest>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OrderRequestBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.orders.v1.OrderRequestBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orders_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderRequestBatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderRequestBatch& this_ = static_cast<const OrderRequestBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderRequestBatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderRequestBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.orders.v1.OrderRequestBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ampy.orders.v1.OrderRequest orders = 1 [json_name = "orders"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_orders_size());
       i < n; i++) {
    const auto& repfield = this_._internal_orders().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.orders.v1.OrderRequestBatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderRequestBatch::ByteSizeLong(const MessageLite& base) {
  const OrderRequestBatch& this_ = static_cast<const OrderRequestBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderRequestBatch::ByteSizeLong() const {
  const OrderRequestBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.orders.v1.OrderRequestBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.orders.v1.OrderRequest orders = 1 [json_name = "orders"];
    {
      total_size += 1UL * this_._internal_orders_size();
      for (const auto& msg : this_._internal_orders()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderRequestBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderRequestBatch*>(&to_msg);
  auto& from = static_cast<const OrderRequestBatch&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.orders.v1.OrderRequestBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_orders()->MergeFrom(
      from._internal_orders());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRequestBatch::CopyFrom(const OrderRequestBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.orders.v1.OrderRequestBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderRequestBatch::InternalSwap(OrderRequestBatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orders_.InternalSwap(&other->_impl_.orders_);
}

::google::protobuf::Metadata OrderRequestBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace orders
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2forders_2fv1_2forders_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
