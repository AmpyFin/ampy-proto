// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/bars/v1/bars.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2fbars_2fv1_2fbars_2eproto_2epb_2eh
#define ampy_2fbars_2fv1_2fbars_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "ampy/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2fbars_2fv1_2fbars_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2fbars_2fv1_2fbars_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2fbars_2fv1_2fbars_2eproto;
}  // extern "C"
namespace ampy {
namespace bars {
namespace v1 {
class Bar;
struct BarDefaultTypeInternal;
extern BarDefaultTypeInternal _Bar_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Bar_class_data_;
class BarBatch;
struct BarBatchDefaultTypeInternal;
extern BarBatchDefaultTypeInternal _BarBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BarBatch_class_data_;
}  // namespace v1
}  // namespace bars
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace bars {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Bar final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.bars.v1.Bar) */ {
 public:
  inline Bar() : Bar(nullptr) {}
  ~Bar() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Bar* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Bar));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Bar(::google::protobuf::internal::ConstantInitialized);

  inline Bar(const Bar& from) : Bar(nullptr, from) {}
  inline Bar(Bar&& from) noexcept
      : Bar(nullptr, ::std::move(from)) {}
  inline Bar& operator=(const Bar& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bar& operator=(Bar&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bar& default_instance() {
    return *reinterpret_cast<const Bar*>(
        &_Bar_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Bar& a, Bar& b) { a.Swap(&b); }
  inline void Swap(Bar* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bar* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bar* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Bar>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bar& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Bar& from) { Bar::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Bar* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.bars.v1.Bar"; }

 protected:
  explicit Bar(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Bar(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Bar& from);
  Bar(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Bar&& from) noexcept
      : Bar(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdjustmentPolicyIdFieldNumber = 12,
    kSecurityFieldNumber = 1,
    kStartFieldNumber = 2,
    kEndFieldNumber = 3,
    kOpenFieldNumber = 4,
    kHighFieldNumber = 5,
    kLowFieldNumber = 6,
    kCloseFieldNumber = 7,
    kVwapFieldNumber = 8,
    kEventTimeFieldNumber = 13,
    kIngestTimeFieldNumber = 14,
    kAsOfFieldNumber = 15,
    kMetaFieldNumber = 16,
    kVolumeFieldNumber = 9,
    kTradeCountFieldNumber = 10,
    kAdjustedFieldNumber = 11,
  };
  // string adjustment_policy_id = 12 [json_name = "adjustmentPolicyId"];
  void clear_adjustment_policy_id() ;
  const ::std::string& adjustment_policy_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_adjustment_policy_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_adjustment_policy_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_adjustment_policy_id();
  void set_allocated_adjustment_policy_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_adjustment_policy_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_adjustment_policy_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_adjustment_policy_id();

  public:
  // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
  bool has_security() const;
  void clear_security() ;
  const ::ampy::common::v1::SecurityId& security() const;
  [[nodiscard]] ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE release_security();
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL mutable_security();
  void set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE unsafe_arena_release_security();

  private:
  const ::ampy::common::v1::SecurityId& _internal_security() const;
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL _internal_mutable_security();

  public:
  // .google.protobuf.Timestamp start = 2 [json_name = "start"];
  bool has_start() const;
  void clear_start() ;
  const ::google::protobuf::Timestamp& start() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_start();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_start();
  void set_allocated_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_start();

  private:
  const ::google::protobuf::Timestamp& _internal_start() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_start();

  public:
  // .google.protobuf.Timestamp end = 3 [json_name = "end"];
  bool has_end() const;
  void clear_end() ;
  const ::google::protobuf::Timestamp& end() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_end();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_end();
  void set_allocated_end(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_end(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_end();

  private:
  const ::google::protobuf::Timestamp& _internal_end() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_end();

  public:
  // .ampy.common.v1.Decimal open = 4 [json_name = "open"];
  bool has_open() const;
  void clear_open() ;
  const ::ampy::common::v1::Decimal& open() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_open();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_open();
  void set_allocated_open(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_open(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_open();

  private:
  const ::ampy::common::v1::Decimal& _internal_open() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_open();

  public:
  // .ampy.common.v1.Decimal high = 5 [json_name = "high"];
  bool has_high() const;
  void clear_high() ;
  const ::ampy::common::v1::Decimal& high() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_high();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_high();
  void set_allocated_high(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_high(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_high();

  private:
  const ::ampy::common::v1::Decimal& _internal_high() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_high();

  public:
  // .ampy.common.v1.Decimal low = 6 [json_name = "low"];
  bool has_low() const;
  void clear_low() ;
  const ::ampy::common::v1::Decimal& low() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_low();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_low();
  void set_allocated_low(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_low(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_low();

  private:
  const ::ampy::common::v1::Decimal& _internal_low() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_low();

  public:
  // .ampy.common.v1.Decimal close = 7 [json_name = "close"];
  bool has_close() const;
  void clear_close() ;
  const ::ampy::common::v1::Decimal& close() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_close();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_close();
  void set_allocated_close(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_close(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_close();

  private:
  const ::ampy::common::v1::Decimal& _internal_close() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_close();

  public:
  // .ampy.common.v1.Decimal vwap = 8 [json_name = "vwap"];
  bool has_vwap() const;
  void clear_vwap() ;
  const ::ampy::common::v1::Decimal& vwap() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_vwap();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_vwap();
  void set_allocated_vwap(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vwap(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_vwap();

  private:
  const ::ampy::common::v1::Decimal& _internal_vwap() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_vwap();

  public:
  // .google.protobuf.Timestamp event_time = 13 [json_name = "eventTime"];
  bool has_event_time() const;
  void clear_event_time() ;
  const ::google::protobuf::Timestamp& event_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_event_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_event_time();
  void set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_event_time();

  private:
  const ::google::protobuf::Timestamp& _internal_event_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_event_time();

  public:
  // .google.protobuf.Timestamp ingest_time = 14 [json_name = "ingestTime"];
  bool has_ingest_time() const;
  void clear_ingest_time() ;
  const ::google::protobuf::Timestamp& ingest_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_ingest_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_ingest_time();
  void set_allocated_ingest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ingest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_ingest_time();

  private:
  const ::google::protobuf::Timestamp& _internal_ingest_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_ingest_time();

  public:
  // .google.protobuf.Timestamp as_of = 15 [json_name = "asOf"];
  bool has_as_of() const;
  void clear_as_of() ;
  const ::google::protobuf::Timestamp& as_of() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_as_of();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_as_of();
  void set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_as_of();

  private:
  const ::google::protobuf::Timestamp& _internal_as_of() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_as_of();

  public:
  // .ampy.common.v1.Meta meta = 16 [json_name = "meta"];
  bool has_meta() const;
  void clear_meta() ;
  const ::ampy::common::v1::Meta& meta() const;
  [[nodiscard]] ::ampy::common::v1::Meta* PROTOBUF_NULLABLE release_meta();
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL mutable_meta();
  void set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta();

  private:
  const ::ampy::common::v1::Meta& _internal_meta() const;
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL _internal_mutable_meta();

  public:
  // int64 volume = 9 [json_name = "volume"];
  void clear_volume() ;
  ::int64_t volume() const;
  void set_volume(::int64_t value);

  private:
  ::int64_t _internal_volume() const;
  void _internal_set_volume(::int64_t value);

  public:
  // int64 trade_count = 10 [json_name = "tradeCount"];
  void clear_trade_count() ;
  ::int64_t trade_count() const;
  void set_trade_count(::int64_t value);

  private:
  ::int64_t _internal_trade_count() const;
  void _internal_set_trade_count(::int64_t value);

  public:
  // bool adjusted = 11 [json_name = "adjusted"];
  void clear_adjusted() ;
  bool adjusted() const;
  void set_adjusted(bool value);

  private:
  bool _internal_adjusted() const;
  void _internal_set_adjusted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ampy.bars.v1.Bar)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16,
                                   12, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Bar& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr adjustment_policy_id_;
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE security_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE start_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE end_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE open_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE high_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE low_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE close_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE vwap_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE event_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE ingest_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE as_of_;
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE meta_;
    ::int64_t volume_;
    ::int64_t trade_count_;
    bool adjusted_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fbars_2fv1_2fbars_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Bar_class_data_;
// -------------------------------------------------------------------

class BarBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.bars.v1.BarBatch) */ {
 public:
  inline BarBatch() : BarBatch(nullptr) {}
  ~BarBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BarBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BarBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarBatch(::google::protobuf::internal::ConstantInitialized);

  inline BarBatch(const BarBatch& from) : BarBatch(nullptr, from) {}
  inline BarBatch(BarBatch&& from) noexcept
      : BarBatch(nullptr, ::std::move(from)) {}
  inline BarBatch& operator=(const BarBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarBatch& operator=(BarBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarBatch& default_instance() {
    return *reinterpret_cast<const BarBatch*>(
        &_BarBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BarBatch& a, BarBatch& b) { a.Swap(&b); }
  inline void Swap(BarBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BarBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BarBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BarBatch& from) { BarBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BarBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.bars.v1.BarBatch"; }

 protected:
  explicit BarBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BarBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BarBatch& from);
  BarBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BarBatch&& from) noexcept
      : BarBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBarsFieldNumber = 1,
  };
  // repeated .ampy.bars.v1.Bar bars = 1 [json_name = "bars"];
  int bars_size() const;
  private:
  int _internal_bars_size() const;

  public:
  void clear_bars() ;
  ::ampy::bars::v1::Bar* PROTOBUF_NONNULL mutable_bars(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>* PROTOBUF_NONNULL mutable_bars();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>& _internal_bars() const;
  ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>* PROTOBUF_NONNULL _internal_mutable_bars();
  public:
  const ::ampy::bars::v1::Bar& bars(int index) const;
  ::ampy::bars::v1::Bar* PROTOBUF_NONNULL add_bars();
  const ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>& bars() const;
  // @@protoc_insertion_point(class_scope:ampy.bars.v1.BarBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BarBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ampy::bars::v1::Bar > bars_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fbars_2fv1_2fbars_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BarBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Bar

// .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
inline bool Bar::has_security() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.security_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::SecurityId& Bar::_internal_security() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::SecurityId* p = _impl_.security_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::SecurityId&>(::ampy::common::v1::_SecurityId_default_instance_);
}
inline const ::ampy::common::v1::SecurityId& Bar::security() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.security)
  return _internal_security();
}
inline void Bar::unsafe_arena_set_allocated_security(
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }
  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.security)
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE Bar::release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::SecurityId* released = _impl_.security_;
  _impl_.security_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE Bar::unsafe_arena_release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.security)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::SecurityId* temp = _impl_.security_;
  _impl_.security_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL Bar::_internal_mutable_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::SecurityId>(GetArena());
    _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(p);
  }
  return _impl_.security_;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL Bar::mutable_security()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::ampy::common::v1::SecurityId* _msg = _internal_mutable_security();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.security)
  return _msg;
}
inline void Bar::set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.security)
}

// .google.protobuf.Timestamp start = 2 [json_name = "start"];
inline bool Bar::has_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Bar::_internal_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.start_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Bar::start() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.start)
  return _internal_start();
}
inline void Bar::unsafe_arena_set_allocated_start(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }
  _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.start)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Timestamp* released = _impl_.start_;
  _impl_.start_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::unsafe_arena_release_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.start)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Timestamp* temp = _impl_.start_;
  _impl_.start_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::_internal_mutable_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.start_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::mutable_start()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.start)
  return _msg;
}
inline void Bar::set_allocated_start(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.start)
}

// .google.protobuf.Timestamp end = 3 [json_name = "end"];
inline bool Bar::has_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Bar::_internal_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Bar::end() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.end)
  return _internal_end();
}
inline void Bar::unsafe_arena_set_allocated_end(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }
  _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.end)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::google::protobuf::Timestamp* released = _impl_.end_;
  _impl_.end_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::unsafe_arena_release_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.end)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::google::protobuf::Timestamp* temp = _impl_.end_;
  _impl_.end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::_internal_mutable_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.end_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::mutable_end()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.end)
  return _msg;
}
inline void Bar::set_allocated_end(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.end)
}

// .ampy.common.v1.Decimal open = 4 [json_name = "open"];
inline bool Bar::has_open() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.open_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& Bar::_internal_open() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.open_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Bar::open() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.open)
  return _internal_open();
}
inline void Bar::unsafe_arena_set_allocated_open(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_);
  }
  _impl_.open_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.open)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::release_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::Decimal* released = _impl_.open_;
  _impl_.open_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::unsafe_arena_release_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.open)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::Decimal* temp = _impl_.open_;
  _impl_.open_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::_internal_mutable_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.open_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.open_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::mutable_open()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_open();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.open)
  return _msg;
}
inline void Bar::set_allocated_open(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.open_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.open)
}

// .ampy.common.v1.Decimal high = 5 [json_name = "high"];
inline bool Bar::has_high() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.high_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& Bar::_internal_high() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.high_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Bar::high() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.high)
  return _internal_high();
}
inline void Bar::unsafe_arena_set_allocated_high(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_);
  }
  _impl_.high_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.high)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::release_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Decimal* released = _impl_.high_;
  _impl_.high_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::unsafe_arena_release_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.high)

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Decimal* temp = _impl_.high_;
  _impl_.high_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::_internal_mutable_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.high_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.high_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::mutable_high()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_high();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.high)
  return _msg;
}
inline void Bar::set_allocated_high(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }

  _impl_.high_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.high)
}

// .ampy.common.v1.Decimal low = 6 [json_name = "low"];
inline bool Bar::has_low() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.low_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& Bar::_internal_low() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.low_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Bar::low() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.low)
  return _internal_low();
}
inline void Bar::unsafe_arena_set_allocated_low(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_);
  }
  _impl_.low_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.low)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::release_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::ampy::common::v1::Decimal* released = _impl_.low_;
  _impl_.low_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::unsafe_arena_release_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.low)

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::ampy::common::v1::Decimal* temp = _impl_.low_;
  _impl_.low_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::_internal_mutable_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.low_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.low_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.low_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::mutable_low()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_low();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.low)
  return _msg;
}
inline void Bar::set_allocated_low(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }

  _impl_.low_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.low)
}

// .ampy.common.v1.Decimal close = 7 [json_name = "close"];
inline bool Bar::has_close() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.close_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& Bar::_internal_close() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.close_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Bar::close() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.close)
  return _internal_close();
}
inline void Bar::unsafe_arena_set_allocated_close(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.close_);
  }
  _impl_.close_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.close)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::release_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::ampy::common::v1::Decimal* released = _impl_.close_;
  _impl_.close_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::unsafe_arena_release_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.close)

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::ampy::common::v1::Decimal* temp = _impl_.close_;
  _impl_.close_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::_internal_mutable_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.close_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.close_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.close_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::mutable_close()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_close();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.close)
  return _msg;
}
inline void Bar::set_allocated_close(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.close_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }

  _impl_.close_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.close)
}

// .ampy.common.v1.Decimal vwap = 8 [json_name = "vwap"];
inline bool Bar::has_vwap() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vwap_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& Bar::_internal_vwap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.vwap_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Bar::vwap() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.vwap)
  return _internal_vwap();
}
inline void Bar::unsafe_arena_set_allocated_vwap(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_);
  }
  _impl_.vwap_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.vwap)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::release_vwap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100U;
  ::ampy::common::v1::Decimal* released = _impl_.vwap_;
  _impl_.vwap_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Bar::unsafe_arena_release_vwap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.vwap)

  _impl_._has_bits_[0] &= ~0x00000100U;
  ::ampy::common::v1::Decimal* temp = _impl_.vwap_;
  _impl_.vwap_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::_internal_mutable_vwap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vwap_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.vwap_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.vwap_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Bar::mutable_vwap()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_vwap();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.vwap)
  return _msg;
}
inline void Bar::set_allocated_vwap(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100U;
  }

  _impl_.vwap_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.vwap)
}

// int64 volume = 9 [json_name = "volume"];
inline void Bar::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00002000U;
}
inline ::int64_t Bar::volume() const {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.volume)
  return _internal_volume();
}
inline void Bar::set_volume(::int64_t value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00002000U;
  // @@protoc_insertion_point(field_set:ampy.bars.v1.Bar.volume)
}
inline ::int64_t Bar::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void Bar::_internal_set_volume(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// int64 trade_count = 10 [json_name = "tradeCount"];
inline void Bar::clear_trade_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_count_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00004000U;
}
inline ::int64_t Bar::trade_count() const {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.trade_count)
  return _internal_trade_count();
}
inline void Bar::set_trade_count(::int64_t value) {
  _internal_set_trade_count(value);
  _impl_._has_bits_[0] |= 0x00004000U;
  // @@protoc_insertion_point(field_set:ampy.bars.v1.Bar.trade_count)
}
inline ::int64_t Bar::_internal_trade_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_count_;
}
inline void Bar::_internal_set_trade_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_count_ = value;
}

// bool adjusted = 11 [json_name = "adjusted"];
inline void Bar::clear_adjusted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adjusted_ = false;
  _impl_._has_bits_[0] &= ~0x00008000U;
}
inline bool Bar::adjusted() const {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.adjusted)
  return _internal_adjusted();
}
inline void Bar::set_adjusted(bool value) {
  _internal_set_adjusted(value);
  _impl_._has_bits_[0] |= 0x00008000U;
  // @@protoc_insertion_point(field_set:ampy.bars.v1.Bar.adjusted)
}
inline bool Bar::_internal_adjusted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adjusted_;
}
inline void Bar::_internal_set_adjusted(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adjusted_ = value;
}

// string adjustment_policy_id = 12 [json_name = "adjustmentPolicyId"];
inline void Bar::clear_adjustment_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.adjustment_policy_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Bar::adjustment_policy_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.adjustment_policy_id)
  return _internal_adjustment_policy_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Bar::set_adjustment_policy_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.adjustment_policy_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.bars.v1.Bar.adjustment_policy_id)
}
inline ::std::string* PROTOBUF_NONNULL Bar::mutable_adjustment_policy_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_adjustment_policy_id();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.adjustment_policy_id)
  return _s;
}
inline const ::std::string& Bar::_internal_adjustment_policy_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.adjustment_policy_id_.Get();
}
inline void Bar::_internal_set_adjustment_policy_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.adjustment_policy_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Bar::_internal_mutable_adjustment_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.adjustment_policy_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Bar::release_adjustment_policy_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.adjustment_policy_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.adjustment_policy_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.adjustment_policy_id_.Set("", GetArena());
  }
  return released;
}
inline void Bar::set_allocated_adjustment_policy_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.adjustment_policy_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.adjustment_policy_id_.IsDefault()) {
    _impl_.adjustment_policy_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.adjustment_policy_id)
}

// .google.protobuf.Timestamp event_time = 13 [json_name = "eventTime"];
inline bool Bar::has_event_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Bar::_internal_event_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.event_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Bar::event_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.event_time)
  return _internal_event_time();
}
inline void Bar::unsafe_arena_set_allocated_event_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_time_);
  }
  _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.event_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::release_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200U;
  ::google::protobuf::Timestamp* released = _impl_.event_time_;
  _impl_.event_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::unsafe_arena_release_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.event_time)

  _impl_._has_bits_[0] &= ~0x00000200U;
  ::google::protobuf::Timestamp* temp = _impl_.event_time_;
  _impl_.event_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::_internal_mutable_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.event_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::mutable_event_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_event_time();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.event_time)
  return _msg;
}
inline void Bar::set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200U;
  }

  _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.event_time)
}

// .google.protobuf.Timestamp ingest_time = 14 [json_name = "ingestTime"];
inline bool Bar::has_ingest_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ingest_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Bar::_internal_ingest_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.ingest_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Bar::ingest_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.ingest_time)
  return _internal_ingest_time();
}
inline void Bar::unsafe_arena_set_allocated_ingest_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ingest_time_);
  }
  _impl_.ingest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.ingest_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::release_ingest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400U;
  ::google::protobuf::Timestamp* released = _impl_.ingest_time_;
  _impl_.ingest_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::unsafe_arena_release_ingest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.ingest_time)

  _impl_._has_bits_[0] &= ~0x00000400U;
  ::google::protobuf::Timestamp* temp = _impl_.ingest_time_;
  _impl_.ingest_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::_internal_mutable_ingest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ingest_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.ingest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.ingest_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::mutable_ingest_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_ingest_time();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.ingest_time)
  return _msg;
}
inline void Bar::set_allocated_ingest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ingest_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400U;
  }

  _impl_.ingest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.ingest_time)
}

// .google.protobuf.Timestamp as_of = 15 [json_name = "asOf"];
inline bool Bar::has_as_of() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_of_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Bar::_internal_as_of() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.as_of_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Bar::as_of() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.as_of)
  return _internal_as_of();
}
inline void Bar::unsafe_arena_set_allocated_as_of(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }
  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.as_of)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800U;
  ::google::protobuf::Timestamp* released = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Bar::unsafe_arena_release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.as_of)

  _impl_._has_bits_[0] &= ~0x00000800U;
  ::google::protobuf::Timestamp* temp = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::_internal_mutable_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.as_of_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Bar::mutable_as_of()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_as_of();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.as_of)
  return _msg;
}
inline void Bar::set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800U;
  }

  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.as_of)
}

// .ampy.common.v1.Meta meta = 16 [json_name = "meta"];
inline bool Bar::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Meta& Bar::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Meta&>(::ampy::common::v1::_Meta_default_instance_);
}
inline const ::ampy::common::v1::Meta& Bar::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.Bar.meta)
  return _internal_meta();
}
inline void Bar::unsafe_arena_set_allocated_meta(
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000U;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.bars.v1.Bar.meta)
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE Bar::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000U;
  ::ampy::common::v1::Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE Bar::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.bars.v1.Bar.meta)

  _impl_._has_bits_[0] &= ~0x00001000U;
  ::ampy::common::v1::Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL Bar::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL Bar::mutable_meta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000U;
  ::ampy::common::v1::Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.Bar.meta)
  return _msg;
}
inline void Bar::set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000U;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000U;
  }

  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.bars.v1.Bar.meta)
}

// -------------------------------------------------------------------

// BarBatch

// repeated .ampy.bars.v1.Bar bars = 1 [json_name = "bars"];
inline int BarBatch::_internal_bars_size() const {
  return _internal_bars().size();
}
inline int BarBatch::bars_size() const {
  return _internal_bars_size();
}
inline void BarBatch::clear_bars() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bars_.Clear();
}
inline ::ampy::bars::v1::Bar* PROTOBUF_NONNULL BarBatch::mutable_bars(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.bars.v1.BarBatch.bars)
  return _internal_mutable_bars()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>* PROTOBUF_NONNULL BarBatch::mutable_bars()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.bars.v1.BarBatch.bars)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bars();
}
inline const ::ampy::bars::v1::Bar& BarBatch::bars(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.bars.v1.BarBatch.bars)
  return _internal_bars().Get(index);
}
inline ::ampy::bars::v1::Bar* PROTOBUF_NONNULL BarBatch::add_bars()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::bars::v1::Bar* _add = _internal_mutable_bars()->Add();
  // @@protoc_insertion_point(field_add:ampy.bars.v1.BarBatch.bars)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>& BarBatch::bars() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.bars.v1.BarBatch.bars)
  return _internal_bars();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>&
BarBatch::_internal_bars() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bars_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::bars::v1::Bar>* PROTOBUF_NONNULL
BarBatch::_internal_mutable_bars() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bars_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace bars
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2fbars_2fv1_2fbars_2eproto_2epb_2eh
