// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/signals/v1/signals.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2fsignals_2fv1_2fsignals_2eproto_2epb_2eh
#define ampy_2fsignals_2fv1_2fsignals_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "ampy/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2fsignals_2fv1_2fsignals_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2fsignals_2fv1_2fsignals_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2fsignals_2fv1_2fsignals_2eproto;
}  // extern "C"
namespace ampy {
namespace signals {
namespace v1 {
class Signal;
struct SignalDefaultTypeInternal;
extern SignalDefaultTypeInternal _Signal_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Signal_class_data_;
class SignalBatch;
struct SignalBatchDefaultTypeInternal;
extern SignalBatchDefaultTypeInternal _SignalBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SignalBatch_class_data_;
}  // namespace v1
}  // namespace signals
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace signals {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Signal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.signals.v1.Signal) */ {
 public:
  inline Signal() : Signal(nullptr) {}
  ~Signal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Signal* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Signal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Signal(::google::protobuf::internal::ConstantInitialized);

  inline Signal(const Signal& from) : Signal(nullptr, from) {}
  inline Signal(Signal&& from) noexcept
      : Signal(nullptr, ::std::move(from)) {}
  inline Signal& operator=(const Signal& from) {
    CopyFrom(from);
    return *this;
  }
  inline Signal& operator=(Signal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Signal& default_instance() {
    return *reinterpret_cast<const Signal*>(
        &_Signal_default_instance_);
  }
  enum ValueCase {
    kScore = 7,
    kAction = 8,
    VALUE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Signal& a, Signal& b) { a.Swap(&b); }
  inline void Swap(Signal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Signal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Signal* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Signal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Signal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Signal& from) { Signal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Signal* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.signals.v1.Signal"; }

 protected:
  explicit Signal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Signal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Signal& from);
  Signal(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Signal&& from) noexcept
      : Signal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelIdFieldNumber = 3,
    kHorizonFieldNumber = 4,
    kSecurityFieldNumber = 1,
    kGeneratedAtFieldNumber = 5,
    kExpiresAtFieldNumber = 6,
    kMetaFieldNumber = 9,
    kTypeFieldNumber = 2,
    kScoreFieldNumber = 7,
    kActionFieldNumber = 8,
  };
  // string model_id = 3 [json_name = "modelId"];
  void clear_model_id() ;
  const ::std::string& model_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_model_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_model_id();
  void set_allocated_model_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_model_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_model_id();

  public:
  // string horizon = 4 [json_name = "horizon"];
  void clear_horizon() ;
  const ::std::string& horizon() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_horizon(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_horizon();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_horizon();
  void set_allocated_horizon(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_horizon() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_horizon(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_horizon();

  public:
  // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
  bool has_security() const;
  void clear_security() ;
  const ::ampy::common::v1::SecurityId& security() const;
  [[nodiscard]] ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE release_security();
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL mutable_security();
  void set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE unsafe_arena_release_security();

  private:
  const ::ampy::common::v1::SecurityId& _internal_security() const;
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL _internal_mutable_security();

  public:
  // .google.protobuf.Timestamp generated_at = 5 [json_name = "generatedAt"];
  bool has_generated_at() const;
  void clear_generated_at() ;
  const ::google::protobuf::Timestamp& generated_at() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_generated_at();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_generated_at();
  void set_allocated_generated_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_generated_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_generated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_generated_at() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_generated_at();

  public:
  // .google.protobuf.Timestamp expires_at = 6 [json_name = "expiresAt"];
  bool has_expires_at() const;
  void clear_expires_at() ;
  const ::google::protobuf::Timestamp& expires_at() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_expires_at();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_expires_at();
  void set_allocated_expires_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_expires_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_expires_at();

  private:
  const ::google::protobuf::Timestamp& _internal_expires_at() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_expires_at();

  public:
  // .ampy.common.v1.Meta meta = 9 [json_name = "meta"];
  bool has_meta() const;
  void clear_meta() ;
  const ::ampy::common::v1::Meta& meta() const;
  [[nodiscard]] ::ampy::common::v1::Meta* PROTOBUF_NULLABLE release_meta();
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL mutable_meta();
  void set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta();

  private:
  const ::ampy::common::v1::Meta& _internal_meta() const;
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL _internal_mutable_meta();

  public:
  // .ampy.common.v1.SignalType type = 2 [json_name = "type"];
  void clear_type() ;
  ::ampy::common::v1::SignalType type() const;
  void set_type(::ampy::common::v1::SignalType value);

  private:
  ::ampy::common::v1::SignalType _internal_type() const;
  void _internal_set_type(::ampy::common::v1::SignalType value);

  public:
  // .ampy.common.v1.Decimal score = 7 [json_name = "score"];
  bool has_score() const;
  private:
  bool _internal_has_score() const;

  public:
  void clear_score() ;
  const ::ampy::common::v1::Decimal& score() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_score();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_score();
  void set_allocated_score(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_score(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_score();

  private:
  const ::ampy::common::v1::Decimal& _internal_score() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_score();

  public:
  // .ampy.common.v1.ActionType action = 8 [json_name = "action"];
  bool has_action() const;
  void clear_action() ;
  ::ampy::common::v1::ActionType action() const;
  void set_action(::ampy::common::v1::ActionType value);

  private:
  ::ampy::common::v1::ActionType _internal_action() const;
  void _internal_set_action(::ampy::common::v1::ActionType value);

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:ampy.signals.v1.Signal)
 private:
  class _Internal;
  void set_has_score();
  void set_has_action();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   5, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Signal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::ArenaStringPtr horizon_;
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE security_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE generated_at_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE expires_at_;
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE meta_;
    int type_;
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE score_;
      int action_;
    } value_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fsignals_2fv1_2fsignals_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Signal_class_data_;
// -------------------------------------------------------------------

class SignalBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.signals.v1.SignalBatch) */ {
 public:
  inline SignalBatch() : SignalBatch(nullptr) {}
  ~SignalBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SignalBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SignalBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignalBatch(::google::protobuf::internal::ConstantInitialized);

  inline SignalBatch(const SignalBatch& from) : SignalBatch(nullptr, from) {}
  inline SignalBatch(SignalBatch&& from) noexcept
      : SignalBatch(nullptr, ::std::move(from)) {}
  inline SignalBatch& operator=(const SignalBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignalBatch& operator=(SignalBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignalBatch& default_instance() {
    return *reinterpret_cast<const SignalBatch*>(
        &_SignalBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SignalBatch& a, SignalBatch& b) { a.Swap(&b); }
  inline void Swap(SignalBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignalBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignalBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SignalBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignalBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignalBatch& from) { SignalBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SignalBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.signals.v1.SignalBatch"; }

 protected:
  explicit SignalBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SignalBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SignalBatch& from);
  SignalBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SignalBatch&& from) noexcept
      : SignalBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignalsFieldNumber = 1,
  };
  // repeated .ampy.signals.v1.Signal signals = 1 [json_name = "signals"];
  int signals_size() const;
  private:
  int _internal_signals_size() const;

  public:
  void clear_signals() ;
  ::ampy::signals::v1::Signal* PROTOBUF_NONNULL mutable_signals(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>* PROTOBUF_NONNULL mutable_signals();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>& _internal_signals() const;
  ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>* PROTOBUF_NONNULL _internal_mutable_signals();
  public:
  const ::ampy::signals::v1::Signal& signals(int index) const;
  ::ampy::signals::v1::Signal* PROTOBUF_NONNULL add_signals();
  const ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>& signals() const;
  // @@protoc_insertion_point(class_scope:ampy.signals.v1.SignalBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SignalBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ampy::signals::v1::Signal > signals_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fsignals_2fv1_2fsignals_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SignalBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Signal

// .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
inline bool Signal::has_security() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.security_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::SecurityId& Signal::_internal_security() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::SecurityId* p = _impl_.security_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::SecurityId&>(::ampy::common::v1::_SecurityId_default_instance_);
}
inline const ::ampy::common::v1::SecurityId& Signal::security() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.security)
  return _internal_security();
}
inline void Signal::unsafe_arena_set_allocated_security(
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }
  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.signals.v1.Signal.security)
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE Signal::release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::ampy::common::v1::SecurityId* released = _impl_.security_;
  _impl_.security_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE Signal::unsafe_arena_release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.security)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::ampy::common::v1::SecurityId* temp = _impl_.security_;
  _impl_.security_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL Signal::_internal_mutable_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::SecurityId>(GetArena());
    _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(p);
  }
  return _impl_.security_;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL Signal::mutable_security()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::ampy::common::v1::SecurityId* _msg = _internal_mutable_security();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.security)
  return _msg;
}
inline void Signal::set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.security)
}

// .ampy.common.v1.SignalType type = 2 [json_name = "type"];
inline void Signal::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::ampy::common::v1::SignalType Signal::type() const {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.type)
  return _internal_type();
}
inline void Signal::set_type(::ampy::common::v1::SignalType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:ampy.signals.v1.Signal.type)
}
inline ::ampy::common::v1::SignalType Signal::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ampy::common::v1::SignalType>(_impl_.type_);
}
inline void Signal::_internal_set_type(::ampy::common::v1::SignalType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string model_id = 3 [json_name = "modelId"];
inline void Signal::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Signal::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Signal::set_model_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.signals.v1.Signal.model_id)
}
inline ::std::string* PROTOBUF_NONNULL Signal::mutable_model_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.model_id)
  return _s;
}
inline const ::std::string& Signal::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void Signal::_internal_set_model_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.model_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Signal::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.model_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Signal::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.model_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.model_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.model_id_.Set("", GetArena());
  }
  return released;
}
inline void Signal::set_allocated_model_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.model_id)
}

// string horizon = 4 [json_name = "horizon"];
inline void Signal::clear_horizon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.horizon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Signal::horizon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.horizon)
  return _internal_horizon();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Signal::set_horizon(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.horizon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.signals.v1.Signal.horizon)
}
inline ::std::string* PROTOBUF_NONNULL Signal::mutable_horizon()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_horizon();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.horizon)
  return _s;
}
inline const ::std::string& Signal::_internal_horizon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.horizon_.Get();
}
inline void Signal::_internal_set_horizon(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.horizon_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Signal::_internal_mutable_horizon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.horizon_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Signal::release_horizon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.horizon)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.horizon_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.horizon_.Set("", GetArena());
  }
  return released;
}
inline void Signal::set_allocated_horizon(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.horizon_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.horizon_.IsDefault()) {
    _impl_.horizon_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.horizon)
}

// .google.protobuf.Timestamp generated_at = 5 [json_name = "generatedAt"];
inline bool Signal::has_generated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.generated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Signal::_internal_generated_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.generated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Signal::generated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.generated_at)
  return _internal_generated_at();
}
inline void Signal::unsafe_arena_set_allocated_generated_at(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generated_at_);
  }
  _impl_.generated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.signals.v1.Signal.generated_at)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Signal::release_generated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::google::protobuf::Timestamp* released = _impl_.generated_at_;
  _impl_.generated_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Signal::unsafe_arena_release_generated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.generated_at)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::google::protobuf::Timestamp* temp = _impl_.generated_at_;
  _impl_.generated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Signal::_internal_mutable_generated_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.generated_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.generated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.generated_at_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Signal::mutable_generated_at()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_generated_at();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.generated_at)
  return _msg;
}
inline void Signal::set_allocated_generated_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.generated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.generated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.generated_at)
}

// .google.protobuf.Timestamp expires_at = 6 [json_name = "expiresAt"];
inline bool Signal::has_expires_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expires_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Signal::_internal_expires_at() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.expires_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Signal::expires_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.expires_at)
  return _internal_expires_at();
}
inline void Signal::unsafe_arena_set_allocated_expires_at(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }
  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.signals.v1.Signal.expires_at)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Signal::release_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::google::protobuf::Timestamp* released = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE Signal::unsafe_arena_release_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.expires_at)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::google::protobuf::Timestamp* temp = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Signal::_internal_mutable_expires_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expires_at_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expires_at_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL Signal::mutable_expires_at()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expires_at();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.expires_at)
  return _msg;
}
inline void Signal::set_allocated_expires_at(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.expires_at)
}

// .ampy.common.v1.Decimal score = 7 [json_name = "score"];
inline bool Signal::has_score() const {
  return value_case() == kScore;
}
inline bool Signal::_internal_has_score() const {
  return value_case() == kScore;
}
inline void Signal::set_has_score() {
  _impl_._oneof_case_[0] = kScore;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Signal::release_score() {
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.score)
  if (value_case() == kScore) {
    clear_has_value();
    auto* temp = _impl_.value_.score_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.score_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ampy::common::v1::Decimal& Signal::_internal_score() const {
  return value_case() == kScore ? *_impl_.value_.score_ : reinterpret_cast<::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Signal::score() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.score)
  return _internal_score();
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Signal::unsafe_arena_release_score() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ampy.signals.v1.Signal.score)
  if (value_case() == kScore) {
    clear_has_value();
    auto* temp = _impl_.value_.score_;
    _impl_.value_.score_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Signal::unsafe_arena_set_allocated_score(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_score();
    _impl_.value_.score_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.signals.v1.Signal.score)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Signal::_internal_mutable_score() {
  if (value_case() != kScore) {
    clear_value();
    set_has_score();
    _impl_.value_.score_ = 
        ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
  }
  return _impl_.value_.score_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Signal::mutable_score()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_score();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.score)
  return _msg;
}

// .ampy.common.v1.ActionType action = 8 [json_name = "action"];
inline bool Signal::has_action() const {
  return value_case() == kAction;
}
inline void Signal::set_has_action() {
  _impl_._oneof_case_[0] = kAction;
}
inline void Signal::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kAction) {
    _impl_.value_.action_ = 0;
    clear_has_value();
  }
}
inline ::ampy::common::v1::ActionType Signal::action() const {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.action)
  return _internal_action();
}
inline void Signal::set_action(::ampy::common::v1::ActionType value) {
  if (value_case() != kAction) {
    clear_value();
    set_has_action();
  }
  _impl_.value_.action_ = value;
  // @@protoc_insertion_point(field_set:ampy.signals.v1.Signal.action)
}
inline ::ampy::common::v1::ActionType Signal::_internal_action() const {
  if (value_case() == kAction) {
    return static_cast<::ampy::common::v1::ActionType>(_impl_.value_.action_);
  }
  return static_cast<::ampy::common::v1::ActionType>(0);
}

// .ampy.common.v1.Meta meta = 9 [json_name = "meta"];
inline bool Signal::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Meta& Signal::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Meta&>(::ampy::common::v1::_Meta_default_instance_);
}
inline const ::ampy::common::v1::Meta& Signal::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.Signal.meta)
  return _internal_meta();
}
inline void Signal::unsafe_arena_set_allocated_meta(
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.signals.v1.Signal.meta)
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE Signal::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE Signal::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.signals.v1.Signal.meta)

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL Signal::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL Signal::mutable_meta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020U;
  ::ampy::common::v1::Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.Signal.meta)
  return _msg;
}
inline void Signal::set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }

  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.signals.v1.Signal.meta)
}

inline bool Signal::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Signal::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline Signal::ValueCase Signal::value_case() const {
  return Signal::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SignalBatch

// repeated .ampy.signals.v1.Signal signals = 1 [json_name = "signals"];
inline int SignalBatch::_internal_signals_size() const {
  return _internal_signals().size();
}
inline int SignalBatch::signals_size() const {
  return _internal_signals_size();
}
inline void SignalBatch::clear_signals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signals_.Clear();
}
inline ::ampy::signals::v1::Signal* PROTOBUF_NONNULL SignalBatch::mutable_signals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.signals.v1.SignalBatch.signals)
  return _internal_mutable_signals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>* PROTOBUF_NONNULL SignalBatch::mutable_signals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.signals.v1.SignalBatch.signals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_signals();
}
inline const ::ampy::signals::v1::Signal& SignalBatch::signals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.signals.v1.SignalBatch.signals)
  return _internal_signals().Get(index);
}
inline ::ampy::signals::v1::Signal* PROTOBUF_NONNULL SignalBatch::add_signals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::signals::v1::Signal* _add = _internal_mutable_signals()->Add();
  // @@protoc_insertion_point(field_add:ampy.signals.v1.SignalBatch.signals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>& SignalBatch::signals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.signals.v1.SignalBatch.signals)
  return _internal_signals();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>&
SignalBatch::_internal_signals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signals_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::signals::v1::Signal>* PROTOBUF_NONNULL
SignalBatch::_internal_mutable_signals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.signals_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace signals
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2fsignals_2fv1_2fsignals_2eproto_2epb_2eh
