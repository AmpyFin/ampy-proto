// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/universe/v1/universe.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2funiverse_2fv1_2funiverse_2eproto_2epb_2eh
#define ampy_2funiverse_2fv1_2funiverse_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "ampy/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2funiverse_2fv1_2funiverse_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto;
}  // extern "C"
namespace ampy {
namespace universe {
namespace v1 {
class Constituent;
struct ConstituentDefaultTypeInternal;
extern ConstituentDefaultTypeInternal _Constituent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Constituent_class_data_;
class UniverseBatch;
struct UniverseBatchDefaultTypeInternal;
extern UniverseBatchDefaultTypeInternal _UniverseBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UniverseBatch_class_data_;
class UniverseSnapshot;
struct UniverseSnapshotDefaultTypeInternal;
extern UniverseSnapshotDefaultTypeInternal _UniverseSnapshot_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UniverseSnapshot_class_data_;
}  // namespace v1
}  // namespace universe
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace universe {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Constituent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.universe.v1.Constituent) */ {
 public:
  inline Constituent() : Constituent(nullptr) {}
  ~Constituent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Constituent* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Constituent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Constituent(::google::protobuf::internal::ConstantInitialized);

  inline Constituent(const Constituent& from) : Constituent(nullptr, from) {}
  inline Constituent(Constituent&& from) noexcept
      : Constituent(nullptr, ::std::move(from)) {}
  inline Constituent& operator=(const Constituent& from) {
    CopyFrom(from);
    return *this;
  }
  inline Constituent& operator=(Constituent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Constituent& default_instance() {
    return *reinterpret_cast<const Constituent*>(
        &_Constituent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Constituent& a, Constituent& b) { a.Swap(&b); }
  inline void Swap(Constituent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Constituent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Constituent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Constituent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Constituent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Constituent& from) { Constituent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Constituent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.universe.v1.Constituent"; }

 protected:
  explicit Constituent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Constituent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Constituent& from);
  Constituent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Constituent&& from) noexcept
      : Constituent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSymbolFieldNumber = 1,
    kMicFieldNumber = 2,
    kFigiFieldNumber = 3,
    kIsinFieldNumber = 4,
  };
  // string symbol = 1 [json_name = "symbol"];
  void clear_symbol() ;
  const ::std::string& symbol() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_symbol(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_symbol();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_symbol();
  void set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_symbol() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_symbol();

  public:
  // string mic = 2 [json_name = "mic"];
  void clear_mic() ;
  const ::std::string& mic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_mic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_mic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_mic();
  void set_allocated_mic(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_mic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_mic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_mic();

  public:
  // string figi = 3 [json_name = "figi"];
  void clear_figi() ;
  const ::std::string& figi() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_figi();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_figi();
  void set_allocated_figi(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_figi() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_figi(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_figi();

  public:
  // string isin = 4 [json_name = "isin"];
  void clear_isin() ;
  const ::std::string& isin() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_isin(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_isin();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_isin();
  void set_allocated_isin(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_isin() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_isin(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_isin();

  public:
  // @@protoc_insertion_point(class_scope:ampy.universe.v1.Constituent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Constituent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::google::protobuf::internal::ArenaStringPtr mic_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr isin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Constituent_class_data_;
// -------------------------------------------------------------------

class UniverseSnapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.universe.v1.UniverseSnapshot) */ {
 public:
  inline UniverseSnapshot() : UniverseSnapshot(nullptr) {}
  ~UniverseSnapshot() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UniverseSnapshot* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UniverseSnapshot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UniverseSnapshot(::google::protobuf::internal::ConstantInitialized);

  inline UniverseSnapshot(const UniverseSnapshot& from) : UniverseSnapshot(nullptr, from) {}
  inline UniverseSnapshot(UniverseSnapshot&& from) noexcept
      : UniverseSnapshot(nullptr, ::std::move(from)) {}
  inline UniverseSnapshot& operator=(const UniverseSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline UniverseSnapshot& operator=(UniverseSnapshot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UniverseSnapshot& default_instance() {
    return *reinterpret_cast<const UniverseSnapshot*>(
        &_UniverseSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(UniverseSnapshot& a, UniverseSnapshot& b) { a.Swap(&b); }
  inline void Swap(UniverseSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UniverseSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UniverseSnapshot* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UniverseSnapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UniverseSnapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UniverseSnapshot& from) { UniverseSnapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UniverseSnapshot* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.universe.v1.UniverseSnapshot"; }

 protected:
  explicit UniverseSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UniverseSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UniverseSnapshot& from);
  UniverseSnapshot(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UniverseSnapshot&& from) noexcept
      : UniverseSnapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstituentsFieldNumber = 2,
    kUniverseIdFieldNumber = 1,
    kRulesetFieldNumber = 4,
    kAsOfFieldNumber = 3,
    kMetaFieldNumber = 5,
  };
  // repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
  int constituents_size() const;
  private:
  int _internal_constituents_size() const;

  public:
  void clear_constituents() ;
  ::ampy::universe::v1::Constituent* PROTOBUF_NONNULL mutable_constituents(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>* PROTOBUF_NONNULL mutable_constituents();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>& _internal_constituents() const;
  ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>* PROTOBUF_NONNULL _internal_mutable_constituents();
  public:
  const ::ampy::universe::v1::Constituent& constituents(int index) const;
  ::ampy::universe::v1::Constituent* PROTOBUF_NONNULL add_constituents();
  const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>& constituents() const;
  // string universe_id = 1 [json_name = "universeId"];
  void clear_universe_id() ;
  const ::std::string& universe_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_universe_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_universe_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_universe_id();
  void set_allocated_universe_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_universe_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_universe_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_universe_id();

  public:
  // string ruleset = 4 [json_name = "ruleset"];
  void clear_ruleset() ;
  const ::std::string& ruleset() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_ruleset(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_ruleset();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_ruleset();
  void set_allocated_ruleset(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_ruleset() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ruleset(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_ruleset();

  public:
  // .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
  bool has_as_of() const;
  void clear_as_of() ;
  const ::google::protobuf::Timestamp& as_of() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_as_of();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_as_of();
  void set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_as_of();

  private:
  const ::google::protobuf::Timestamp& _internal_as_of() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_as_of();

  public:
  // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
  bool has_meta() const;
  void clear_meta() ;
  const ::ampy::common::v1::Meta& meta() const;
  [[nodiscard]] ::ampy::common::v1::Meta* PROTOBUF_NULLABLE release_meta();
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL mutable_meta();
  void set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta();

  private:
  const ::ampy::common::v1::Meta& _internal_meta() const;
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL _internal_mutable_meta();

  public:
  // @@protoc_insertion_point(class_scope:ampy.universe.v1.UniverseSnapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UniverseSnapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ampy::universe::v1::Constituent > constituents_;
    ::google::protobuf::internal::ArenaStringPtr universe_id_;
    ::google::protobuf::internal::ArenaStringPtr ruleset_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE as_of_;
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE meta_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UniverseSnapshot_class_data_;
// -------------------------------------------------------------------

class UniverseBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.universe.v1.UniverseBatch) */ {
 public:
  inline UniverseBatch() : UniverseBatch(nullptr) {}
  ~UniverseBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UniverseBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UniverseBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UniverseBatch(::google::protobuf::internal::ConstantInitialized);

  inline UniverseBatch(const UniverseBatch& from) : UniverseBatch(nullptr, from) {}
  inline UniverseBatch(UniverseBatch&& from) noexcept
      : UniverseBatch(nullptr, ::std::move(from)) {}
  inline UniverseBatch& operator=(const UniverseBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline UniverseBatch& operator=(UniverseBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UniverseBatch& default_instance() {
    return *reinterpret_cast<const UniverseBatch*>(
        &_UniverseBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UniverseBatch& a, UniverseBatch& b) { a.Swap(&b); }
  inline void Swap(UniverseBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UniverseBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UniverseBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UniverseBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UniverseBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UniverseBatch& from) { UniverseBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UniverseBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.universe.v1.UniverseBatch"; }

 protected:
  explicit UniverseBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UniverseBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UniverseBatch& from);
  UniverseBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UniverseBatch&& from) noexcept
      : UniverseBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSnapshotsFieldNumber = 1,
  };
  // repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
  int snapshots_size() const;
  private:
  int _internal_snapshots_size() const;

  public:
  void clear_snapshots() ;
  ::ampy::universe::v1::UniverseSnapshot* PROTOBUF_NONNULL mutable_snapshots(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>* PROTOBUF_NONNULL mutable_snapshots();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>& _internal_snapshots() const;
  ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>* PROTOBUF_NONNULL _internal_mutable_snapshots();
  public:
  const ::ampy::universe::v1::UniverseSnapshot& snapshots(int index) const;
  ::ampy::universe::v1::UniverseSnapshot* PROTOBUF_NONNULL add_snapshots();
  const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>& snapshots() const;
  // @@protoc_insertion_point(class_scope:ampy.universe.v1.UniverseBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UniverseBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ampy::universe::v1::UniverseSnapshot > snapshots_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UniverseBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Constituent

// string symbol = 1 [json_name = "symbol"];
inline void Constituent::clear_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Constituent::symbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.Constituent.symbol)
  return _internal_symbol();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constituent::set_symbol(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.symbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.Constituent.symbol)
}
inline ::std::string* PROTOBUF_NONNULL Constituent::mutable_symbol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.Constituent.symbol)
  return _s;
}
inline const ::std::string& Constituent::_internal_symbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_.Get();
}
inline void Constituent::_internal_set_symbol(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.symbol_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constituent::_internal_mutable_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.symbol_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constituent::release_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.Constituent.symbol)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.symbol_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.symbol_.Set("", GetArena());
  }
  return released;
}
inline void Constituent::set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.symbol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.symbol_.IsDefault()) {
    _impl_.symbol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.Constituent.symbol)
}

// string mic = 2 [json_name = "mic"];
inline void Constituent::clear_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Constituent::mic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.Constituent.mic)
  return _internal_mic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constituent::set_mic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.mic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.Constituent.mic)
}
inline ::std::string* PROTOBUF_NONNULL Constituent::mutable_mic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_mic();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.Constituent.mic)
  return _s;
}
inline const ::std::string& Constituent::_internal_mic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mic_.Get();
}
inline void Constituent::_internal_set_mic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.mic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constituent::_internal_mutable_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.mic_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constituent::release_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.Constituent.mic)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.mic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mic_.Set("", GetArena());
  }
  return released;
}
inline void Constituent::set_allocated_mic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.mic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mic_.IsDefault()) {
    _impl_.mic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.Constituent.mic)
}

// string figi = 3 [json_name = "figi"];
inline void Constituent::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& Constituent::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.Constituent.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constituent::set_figi(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.Constituent.figi)
}
inline ::std::string* PROTOBUF_NONNULL Constituent::mutable_figi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.Constituent.figi)
  return _s;
}
inline const ::std::string& Constituent::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void Constituent::_internal_set_figi(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.figi_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constituent::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.figi_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constituent::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.Constituent.figi)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.figi_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.figi_.Set("", GetArena());
  }
  return released;
}
inline void Constituent::set_allocated_figi(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.Constituent.figi)
}

// string isin = 4 [json_name = "isin"];
inline void Constituent::clear_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& Constituent::isin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.Constituent.isin)
  return _internal_isin();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Constituent::set_isin(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.isin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.Constituent.isin)
}
inline ::std::string* PROTOBUF_NONNULL Constituent::mutable_isin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_isin();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.Constituent.isin)
  return _s;
}
inline const ::std::string& Constituent::_internal_isin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isin_.Get();
}
inline void Constituent::_internal_set_isin(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.isin_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Constituent::_internal_mutable_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.isin_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Constituent::release_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.Constituent.isin)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.isin_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.isin_.Set("", GetArena());
  }
  return released;
}
inline void Constituent::set_allocated_isin(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.isin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.isin_.IsDefault()) {
    _impl_.isin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.Constituent.isin)
}

// -------------------------------------------------------------------

// UniverseSnapshot

// string universe_id = 1 [json_name = "universeId"];
inline void UniverseSnapshot::clear_universe_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.universe_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& UniverseSnapshot::universe_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseSnapshot.universe_id)
  return _internal_universe_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UniverseSnapshot::set_universe_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.universe_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.UniverseSnapshot.universe_id)
}
inline ::std::string* PROTOBUF_NONNULL UniverseSnapshot::mutable_universe_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_universe_id();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseSnapshot.universe_id)
  return _s;
}
inline const ::std::string& UniverseSnapshot::_internal_universe_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.universe_id_.Get();
}
inline void UniverseSnapshot::_internal_set_universe_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.universe_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UniverseSnapshot::_internal_mutable_universe_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.universe_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UniverseSnapshot::release_universe_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.UniverseSnapshot.universe_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.universe_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.universe_id_.Set("", GetArena());
  }
  return released;
}
inline void UniverseSnapshot::set_allocated_universe_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.universe_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.universe_id_.IsDefault()) {
    _impl_.universe_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.UniverseSnapshot.universe_id)
}

// repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
inline int UniverseSnapshot::_internal_constituents_size() const {
  return _internal_constituents().size();
}
inline int UniverseSnapshot::constituents_size() const {
  return _internal_constituents_size();
}
inline void UniverseSnapshot::clear_constituents() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constituents_.Clear();
}
inline ::ampy::universe::v1::Constituent* PROTOBUF_NONNULL UniverseSnapshot::mutable_constituents(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseSnapshot.constituents)
  return _internal_mutable_constituents()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>* PROTOBUF_NONNULL UniverseSnapshot::mutable_constituents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.universe.v1.UniverseSnapshot.constituents)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constituents();
}
inline const ::ampy::universe::v1::Constituent& UniverseSnapshot::constituents(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseSnapshot.constituents)
  return _internal_constituents().Get(index);
}
inline ::ampy::universe::v1::Constituent* PROTOBUF_NONNULL UniverseSnapshot::add_constituents()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::universe::v1::Constituent* _add = _internal_mutable_constituents()->Add();
  // @@protoc_insertion_point(field_add:ampy.universe.v1.UniverseSnapshot.constituents)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>& UniverseSnapshot::constituents() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.universe.v1.UniverseSnapshot.constituents)
  return _internal_constituents();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>&
UniverseSnapshot::_internal_constituents() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constituents_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::Constituent>* PROTOBUF_NONNULL
UniverseSnapshot::_internal_mutable_constituents() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constituents_;
}

// .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
inline bool UniverseSnapshot::has_as_of() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_of_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UniverseSnapshot::_internal_as_of() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.as_of_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UniverseSnapshot::as_of() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseSnapshot.as_of)
  return _internal_as_of();
}
inline void UniverseSnapshot::unsafe_arena_set_allocated_as_of(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }
  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.universe.v1.UniverseSnapshot.as_of)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE UniverseSnapshot::release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Timestamp* released = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE UniverseSnapshot::unsafe_arena_release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.UniverseSnapshot.as_of)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::google::protobuf::Timestamp* temp = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL UniverseSnapshot::_internal_mutable_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.as_of_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL UniverseSnapshot::mutable_as_of()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_as_of();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseSnapshot.as_of)
  return _msg;
}
inline void UniverseSnapshot::set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.UniverseSnapshot.as_of)
}

// string ruleset = 4 [json_name = "ruleset"];
inline void UniverseSnapshot::clear_ruleset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ruleset_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& UniverseSnapshot::ruleset() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseSnapshot.ruleset)
  return _internal_ruleset();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UniverseSnapshot::set_ruleset(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.ruleset_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.universe.v1.UniverseSnapshot.ruleset)
}
inline ::std::string* PROTOBUF_NONNULL UniverseSnapshot::mutable_ruleset()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_ruleset();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseSnapshot.ruleset)
  return _s;
}
inline const ::std::string& UniverseSnapshot::_internal_ruleset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ruleset_.Get();
}
inline void UniverseSnapshot::_internal_set_ruleset(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.ruleset_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UniverseSnapshot::_internal_mutable_ruleset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.ruleset_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UniverseSnapshot::release_ruleset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.UniverseSnapshot.ruleset)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.ruleset_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ruleset_.Set("", GetArena());
  }
  return released;
}
inline void UniverseSnapshot::set_allocated_ruleset(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.ruleset_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ruleset_.IsDefault()) {
    _impl_.ruleset_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.UniverseSnapshot.ruleset)
}

// .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
inline bool UniverseSnapshot::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Meta& UniverseSnapshot::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Meta&>(::ampy::common::v1::_Meta_default_instance_);
}
inline const ::ampy::common::v1::Meta& UniverseSnapshot::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseSnapshot.meta)
  return _internal_meta();
}
inline void UniverseSnapshot::unsafe_arena_set_allocated_meta(
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.universe.v1.UniverseSnapshot.meta)
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE UniverseSnapshot::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::ampy::common::v1::Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE UniverseSnapshot::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.universe.v1.UniverseSnapshot.meta)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::ampy::common::v1::Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL UniverseSnapshot::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL UniverseSnapshot::mutable_meta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::ampy::common::v1::Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseSnapshot.meta)
  return _msg;
}
inline void UniverseSnapshot::set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.universe.v1.UniverseSnapshot.meta)
}

// -------------------------------------------------------------------

// UniverseBatch

// repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
inline int UniverseBatch::_internal_snapshots_size() const {
  return _internal_snapshots().size();
}
inline int UniverseBatch::snapshots_size() const {
  return _internal_snapshots_size();
}
inline void UniverseBatch::clear_snapshots() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.snapshots_.Clear();
}
inline ::ampy::universe::v1::UniverseSnapshot* PROTOBUF_NONNULL UniverseBatch::mutable_snapshots(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.universe.v1.UniverseBatch.snapshots)
  return _internal_mutable_snapshots()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>* PROTOBUF_NONNULL UniverseBatch::mutable_snapshots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.universe.v1.UniverseBatch.snapshots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_snapshots();
}
inline const ::ampy::universe::v1::UniverseSnapshot& UniverseBatch::snapshots(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.universe.v1.UniverseBatch.snapshots)
  return _internal_snapshots().Get(index);
}
inline ::ampy::universe::v1::UniverseSnapshot* PROTOBUF_NONNULL UniverseBatch::add_snapshots()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::universe::v1::UniverseSnapshot* _add = _internal_mutable_snapshots()->Add();
  // @@protoc_insertion_point(field_add:ampy.universe.v1.UniverseBatch.snapshots)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>& UniverseBatch::snapshots() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.universe.v1.UniverseBatch.snapshots)
  return _internal_snapshots();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>&
UniverseBatch::_internal_snapshots() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.snapshots_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::universe::v1::UniverseSnapshot>* PROTOBUF_NONNULL
UniverseBatch::_internal_mutable_snapshots() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.snapshots_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace universe
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2funiverse_2fv1_2funiverse_2eproto_2epb_2eh
