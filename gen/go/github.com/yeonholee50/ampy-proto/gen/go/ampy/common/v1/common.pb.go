// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ampy/common/v1/common.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Decimal uses scaled integer semantics to avoid float rounding errors.
// Example: scaled=123456, scale=4 => 12.3456
type Decimal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Signed to support negative values (e.g., PnL).
	Scaled        int64 `protobuf:"zigzag64,1,opt,name=scaled,proto3" json:"scaled,omitempty"`
	Scale         int32 `protobuf:"varint,2,opt,name=scale,proto3" json:"scale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decimal) Reset() {
	*x = Decimal{}
	mi := &file_ampy_common_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decimal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decimal) ProtoMessage() {}

func (x *Decimal) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_common_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decimal.ProtoReflect.Descriptor instead.
func (*Decimal) Descriptor() ([]byte, []int) {
	return file_ampy_common_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *Decimal) GetScaled() int64 {
	if x != nil {
		return x.Scaled
	}
	return 0
}

func (x *Decimal) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

// Money value with ISO-4217 currency code (e.g., "USD", "EUR", "JPY", "KRW").
type Money struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        *Decimal               `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	CurrencyCode  string                 `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Money) Reset() {
	*x = Money{}
	mi := &file_ampy_common_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_common_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_ampy_common_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *Money) GetAmount() *Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Money) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

// Security identity â€” avoid relying on ticker alone.
// "mic" is the ISO 10383 market identifier code (e.g., "XNAS", "XNYS").
type SecurityId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Mic           string                 `protobuf:"bytes,2,opt,name=mic,proto3" json:"mic,omitempty"`
	Figi          string                 `protobuf:"bytes,3,opt,name=figi,proto3" json:"figi,omitempty"` // optional
	Isin          string                 `protobuf:"bytes,4,opt,name=isin,proto3" json:"isin,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecurityId) Reset() {
	*x = SecurityId{}
	mi := &file_ampy_common_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecurityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityId) ProtoMessage() {}

func (x *SecurityId) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_common_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityId.ProtoReflect.Descriptor instead.
func (*SecurityId) Descriptor() ([]byte, []int) {
	return file_ampy_common_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *SecurityId) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *SecurityId) GetMic() string {
	if x != nil {
		return x.Mic
	}
	return ""
}

func (x *SecurityId) GetFigi() string {
	if x != nil {
		return x.Figi
	}
	return ""
}

func (x *SecurityId) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

// Meta lineage fields for traceability and reproducibility.
type Meta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`                         // workflow/run identifier
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                                    // e.g., "yfinance-go", "databento-cpp"
	Producer      string                 `protobuf:"bytes,3,opt,name=producer,proto3" json:"producer,omitempty"`                                // instance name/id
	SchemaVersion string                 `protobuf:"bytes,4,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"` // e.g., "ampy.bars.v1:1.0.0"
	Checksum      string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`                                // optional payload checksum/hash
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meta) Reset() {
	*x = Meta{}
	mi := &file_ampy_common_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_common_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_ampy_common_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *Meta) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *Meta) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Meta) GetProducer() string {
	if x != nil {
		return x.Producer
	}
	return ""
}

func (x *Meta) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

func (x *Meta) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

var File_ampy_common_v1_common_proto protoreflect.FileDescriptor

const file_ampy_common_v1_common_proto_rawDesc = "" +
	"\n" +
	"\x1bampy/common/v1/common.proto\x12\x0eampy.common.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"7\n" +
	"\aDecimal\x12\x16\n" +
	"\x06scaled\x18\x01 \x01(\x12R\x06scaled\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\x05R\x05scale\"]\n" +
	"\x05Money\x12/\n" +
	"\x06amount\x18\x01 \x01(\v2\x17.ampy.common.v1.DecimalR\x06amount\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\"^\n" +
	"\n" +
	"SecurityId\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x10\n" +
	"\x03mic\x18\x02 \x01(\tR\x03mic\x12\x12\n" +
	"\x04figi\x18\x03 \x01(\tR\x04figi\x12\x12\n" +
	"\x04isin\x18\x04 \x01(\tR\x04isin\"\x94\x01\n" +
	"\x04Meta\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1a\n" +
	"\bproducer\x18\x03 \x01(\tR\bproducer\x12%\n" +
	"\x0eschema_version\x18\x04 \x01(\tR\rschemaVersion\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksumB\xbd\x01\n" +
	"\x12com.ampy.common.v1B\vCommonProtoP\x01Z@github.com/yeonholee50/ampy-proto/gen/go/ampy/common/v1;commonv1\xa2\x02\x03ACX\xaa\x02\x0eAmpy.Common.V1\xca\x02\x0eAmpy\\Common\\V1\xe2\x02\x1aAmpy\\Common\\V1\\GPBMetadata\xea\x02\x10Ampy::Common::V1b\x06proto3"

var (
	file_ampy_common_v1_common_proto_rawDescOnce sync.Once
	file_ampy_common_v1_common_proto_rawDescData []byte
)

func file_ampy_common_v1_common_proto_rawDescGZIP() []byte {
	file_ampy_common_v1_common_proto_rawDescOnce.Do(func() {
		file_ampy_common_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ampy_common_v1_common_proto_rawDesc), len(file_ampy_common_v1_common_proto_rawDesc)))
	})
	return file_ampy_common_v1_common_proto_rawDescData
}

var file_ampy_common_v1_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ampy_common_v1_common_proto_goTypes = []any{
	(*Decimal)(nil),    // 0: ampy.common.v1.Decimal
	(*Money)(nil),      // 1: ampy.common.v1.Money
	(*SecurityId)(nil), // 2: ampy.common.v1.SecurityId
	(*Meta)(nil),       // 3: ampy.common.v1.Meta
}
var file_ampy_common_v1_common_proto_depIdxs = []int32{
	0, // 0: ampy.common.v1.Money.amount:type_name -> ampy.common.v1.Decimal
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ampy_common_v1_common_proto_init() }
func file_ampy_common_v1_common_proto_init() {
	if File_ampy_common_v1_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ampy_common_v1_common_proto_rawDesc), len(file_ampy_common_v1_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_common_v1_common_proto_goTypes,
		DependencyIndexes: file_ampy_common_v1_common_proto_depIdxs,
		MessageInfos:      file_ampy_common_v1_common_proto_msgTypes,
	}.Build()
	File_ampy_common_v1_common_proto = out.File
	file_ampy_common_v1_common_proto_goTypes = nil
	file_ampy_common_v1_common_proto_depIdxs = nil
}
