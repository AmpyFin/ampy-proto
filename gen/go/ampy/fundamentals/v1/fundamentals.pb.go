// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: ampy/fundamentals/v1/fundamentals.proto

package fundamentalsv1

import (
	v1 "github.com/AmpyFin/ampy-proto/v2/gen/go/ampy/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key          string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // e.g., "revenue", "net_income", "eps_basic"
	Value        *v1.Decimal            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	CurrencyCode string                 `protobuf:"bytes,3,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"` // ISO-4217; required for monetary lines
	PeriodStart  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	PeriodEnd    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_ampy_fundamentals_v1_fundamentals_proto_rawDescGZIP(), []int{0}
}

func (x *LineItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LineItem) GetValue() *v1.Decimal {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *LineItem) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *LineItem) GetPeriodStart() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *LineItem) GetPeriodEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.PeriodEnd
	}
	return nil
}

type FundamentalsSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Security *v1.SecurityId         `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	Lines    []*LineItem            `protobuf:"bytes,2,rep,name=lines,proto3" json:"lines,omitempty"`
	Source   string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"` // e.g., tiingo, yfinance
	AsOf     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Meta     *v1.Meta               `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *FundamentalsSnapshot) Reset() {
	*x = FundamentalsSnapshot{}
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundamentalsSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundamentalsSnapshot) ProtoMessage() {}

func (x *FundamentalsSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundamentalsSnapshot.ProtoReflect.Descriptor instead.
func (*FundamentalsSnapshot) Descriptor() ([]byte, []int) {
	return file_ampy_fundamentals_v1_fundamentals_proto_rawDescGZIP(), []int{1}
}

func (x *FundamentalsSnapshot) GetSecurity() *v1.SecurityId {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *FundamentalsSnapshot) GetLines() []*LineItem {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *FundamentalsSnapshot) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *FundamentalsSnapshot) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *FundamentalsSnapshot) GetMeta() *v1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FundamentalsBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*FundamentalsSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
}

func (x *FundamentalsBatch) Reset() {
	*x = FundamentalsBatch{}
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundamentalsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundamentalsBatch) ProtoMessage() {}

func (x *FundamentalsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fundamentals_v1_fundamentals_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundamentalsBatch.ProtoReflect.Descriptor instead.
func (*FundamentalsBatch) Descriptor() ([]byte, []int) {
	return file_ampy_fundamentals_v1_fundamentals_proto_rawDescGZIP(), []int{2}
}

func (x *FundamentalsBatch) GetSnapshots() []*FundamentalsSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_ampy_fundamentals_v1_fundamentals_proto protoreflect.FileDescriptor

var file_ampy_fundamentals_v1_fundamentals_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x6d, 0x70, 0x79, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x6d, 0x70, 0x79, 0x2e,
	0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x61, 0x6d, 0x70, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x01,
	0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x6d,
	0x70, 0x79, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x45, 0x6e, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x14, 0x46,
	0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6d, 0x70, 0x79, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6d, 0x70,
	0x79, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x61, 0x73, 0x5f,
	0x6f, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x61, 0x73, 0x4f, 0x66, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x6d, 0x70, 0x79, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0x5d, 0x0a, 0x11, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x48, 0x0a, 0x09, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x6d, 0x70, 0x79, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x73, 0x42, 0xec, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6d, 0x70, 0x79,
	0x2e, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2e, 0x76, 0x31,
	0x42, 0x11, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x41, 0x6d, 0x70, 0x79, 0x46, 0x69, 0x6e, 0x2f, 0x61, 0x6d, 0x70, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x32, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x61,
	0x6d, 0x70, 0x79, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x46, 0x58, 0xaa, 0x02, 0x14, 0x41, 0x6d, 0x70, 0x79, 0x2e,
	0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x2e, 0x56, 0x31, 0xca,
	0x02, 0x14, 0x41, 0x6d, 0x70, 0x79, 0x5c, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x20, 0x41, 0x6d, 0x70, 0x79, 0x5c, 0x46, 0x75,
	0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x41, 0x6d, 0x70, 0x79,
	0x3a, 0x3a, 0x46, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x73, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ampy_fundamentals_v1_fundamentals_proto_rawDescOnce sync.Once
	file_ampy_fundamentals_v1_fundamentals_proto_rawDescData = file_ampy_fundamentals_v1_fundamentals_proto_rawDesc
)

func file_ampy_fundamentals_v1_fundamentals_proto_rawDescGZIP() []byte {
	file_ampy_fundamentals_v1_fundamentals_proto_rawDescOnce.Do(func() {
		file_ampy_fundamentals_v1_fundamentals_proto_rawDescData = protoimpl.X.CompressGZIP(file_ampy_fundamentals_v1_fundamentals_proto_rawDescData)
	})
	return file_ampy_fundamentals_v1_fundamentals_proto_rawDescData
}

var file_ampy_fundamentals_v1_fundamentals_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ampy_fundamentals_v1_fundamentals_proto_goTypes = []any{
	(*LineItem)(nil),              // 0: ampy.fundamentals.v1.LineItem
	(*FundamentalsSnapshot)(nil),  // 1: ampy.fundamentals.v1.FundamentalsSnapshot
	(*FundamentalsBatch)(nil),     // 2: ampy.fundamentals.v1.FundamentalsBatch
	(*v1.Decimal)(nil),            // 3: ampy.common.v1.Decimal
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*v1.SecurityId)(nil),         // 5: ampy.common.v1.SecurityId
	(*v1.Meta)(nil),               // 6: ampy.common.v1.Meta
}
var file_ampy_fundamentals_v1_fundamentals_proto_depIdxs = []int32{
	3, // 0: ampy.fundamentals.v1.LineItem.value:type_name -> ampy.common.v1.Decimal
	4, // 1: ampy.fundamentals.v1.LineItem.period_start:type_name -> google.protobuf.Timestamp
	4, // 2: ampy.fundamentals.v1.LineItem.period_end:type_name -> google.protobuf.Timestamp
	5, // 3: ampy.fundamentals.v1.FundamentalsSnapshot.security:type_name -> ampy.common.v1.SecurityId
	0, // 4: ampy.fundamentals.v1.FundamentalsSnapshot.lines:type_name -> ampy.fundamentals.v1.LineItem
	4, // 5: ampy.fundamentals.v1.FundamentalsSnapshot.as_of:type_name -> google.protobuf.Timestamp
	6, // 6: ampy.fundamentals.v1.FundamentalsSnapshot.meta:type_name -> ampy.common.v1.Meta
	1, // 7: ampy.fundamentals.v1.FundamentalsBatch.snapshots:type_name -> ampy.fundamentals.v1.FundamentalsSnapshot
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ampy_fundamentals_v1_fundamentals_proto_init() }
func file_ampy_fundamentals_v1_fundamentals_proto_init() {
	if File_ampy_fundamentals_v1_fundamentals_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ampy_fundamentals_v1_fundamentals_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_fundamentals_v1_fundamentals_proto_goTypes,
		DependencyIndexes: file_ampy_fundamentals_v1_fundamentals_proto_depIdxs,
		MessageInfos:      file_ampy_fundamentals_v1_fundamentals_proto_msgTypes,
	}.Build()
	File_ampy_fundamentals_v1_fundamentals_proto = out.File
	file_ampy_fundamentals_v1_fundamentals_proto_rawDesc = nil
	file_ampy_fundamentals_v1_fundamentals_proto_goTypes = nil
	file_ampy_fundamentals_v1_fundamentals_proto_depIdxs = nil
}
