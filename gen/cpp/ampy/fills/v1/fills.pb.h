// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/fills/v1/fills.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2ffills_2fv1_2ffills_2eproto_2epb_2eh
#define ampy_2ffills_2fv1_2ffills_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "ampy/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2ffills_2fv1_2ffills_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2ffills_2fv1_2ffills_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2ffills_2fv1_2ffills_2eproto;
}  // extern "C"
namespace ampy {
namespace fills {
namespace v1 {
class FillBatch;
struct FillBatchDefaultTypeInternal;
extern FillBatchDefaultTypeInternal _FillBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FillBatch_class_data_;
class FillEvent;
struct FillEventDefaultTypeInternal;
extern FillEventDefaultTypeInternal _FillEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FillEvent_class_data_;
}  // namespace v1
}  // namespace fills
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace fills {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class FillEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.fills.v1.FillEvent) */ {
 public:
  inline FillEvent() : FillEvent(nullptr) {}
  ~FillEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FillEvent* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FillEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FillEvent(::google::protobuf::internal::ConstantInitialized);

  inline FillEvent(const FillEvent& from) : FillEvent(nullptr, from) {}
  inline FillEvent(FillEvent&& from) noexcept
      : FillEvent(nullptr, ::std::move(from)) {}
  inline FillEvent& operator=(const FillEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline FillEvent& operator=(FillEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FillEvent& default_instance() {
    return *reinterpret_cast<const FillEvent*>(
        &_FillEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(FillEvent& a, FillEvent& b) { a.Swap(&b); }
  inline void Swap(FillEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FillEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FillEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FillEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FillEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FillEvent& from) { FillEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FillEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.fills.v1.FillEvent"; }

 protected:
  explicit FillEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FillEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FillEvent& from);
  FillEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FillEvent&& from) noexcept
      : FillEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kClientOrderIdFieldNumber = 2,
    kBrokerOrderIdFieldNumber = 3,
    kVenueFieldNumber = 7,
    kSecurityFieldNumber = 4,
    kPriceFieldNumber = 5,
    kQuantityFieldNumber = 6,
    kEventTimeFieldNumber = 8,
    kMetaFieldNumber = 9,
  };
  // string account_id = 1 [json_name = "accountId"];
  void clear_account_id() ;
  const ::std::string& account_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_account_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_account_id();
  void set_allocated_account_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_account_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_account_id();

  public:
  // string client_order_id = 2 [json_name = "clientOrderId"];
  void clear_client_order_id() ;
  const ::std::string& client_order_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_client_order_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_client_order_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_client_order_id();
  void set_allocated_client_order_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_client_order_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_client_order_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_client_order_id();

  public:
  // string broker_order_id = 3 [json_name = "brokerOrderId"];
  void clear_broker_order_id() ;
  const ::std::string& broker_order_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_broker_order_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_broker_order_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_broker_order_id();
  void set_allocated_broker_order_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_broker_order_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_broker_order_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_broker_order_id();

  public:
  // string venue = 7 [json_name = "venue"];
  void clear_venue() ;
  const ::std::string& venue() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_venue(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_venue();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_venue();
  void set_allocated_venue(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_venue() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_venue(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_venue();

  public:
  // .ampy.common.v1.SecurityId security = 4 [json_name = "security"];
  bool has_security() const;
  void clear_security() ;
  const ::ampy::common::v1::SecurityId& security() const;
  [[nodiscard]] ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE release_security();
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL mutable_security();
  void set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE unsafe_arena_release_security();

  private:
  const ::ampy::common::v1::SecurityId& _internal_security() const;
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL _internal_mutable_security();

  public:
  // .ampy.common.v1.Decimal price = 5 [json_name = "price"];
  bool has_price() const;
  void clear_price() ;
  const ::ampy::common::v1::Decimal& price() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_price();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_price();
  void set_allocated_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_price();

  private:
  const ::ampy::common::v1::Decimal& _internal_price() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // .ampy.common.v1.Decimal quantity = 6 [json_name = "quantity"];
  bool has_quantity() const;
  void clear_quantity() ;
  const ::ampy::common::v1::Decimal& quantity() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_quantity();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_quantity();
  void set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_quantity();

  private:
  const ::ampy::common::v1::Decimal& _internal_quantity() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_quantity();

  public:
  // .google.protobuf.Timestamp event_time = 8 [json_name = "eventTime"];
  bool has_event_time() const;
  void clear_event_time() ;
  const ::google::protobuf::Timestamp& event_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_event_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_event_time();
  void set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_event_time();

  private:
  const ::google::protobuf::Timestamp& _internal_event_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_event_time();

  public:
  // .ampy.common.v1.Meta meta = 9 [json_name = "meta"];
  bool has_meta() const;
  void clear_meta() ;
  const ::ampy::common::v1::Meta& meta() const;
  [[nodiscard]] ::ampy::common::v1::Meta* PROTOBUF_NULLABLE release_meta();
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL mutable_meta();
  void set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta();

  private:
  const ::ampy::common::v1::Meta& _internal_meta() const;
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL _internal_mutable_meta();

  public:
  // @@protoc_insertion_point(class_scope:ampy.fills.v1.FillEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   5, 85,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FillEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::google::protobuf::internal::ArenaStringPtr client_order_id_;
    ::google::protobuf::internal::ArenaStringPtr broker_order_id_;
    ::google::protobuf::internal::ArenaStringPtr venue_;
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE security_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE price_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE quantity_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE event_time_;
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE meta_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2ffills_2fv1_2ffills_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FillEvent_class_data_;
// -------------------------------------------------------------------

class FillBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.fills.v1.FillBatch) */ {
 public:
  inline FillBatch() : FillBatch(nullptr) {}
  ~FillBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FillBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FillBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FillBatch(::google::protobuf::internal::ConstantInitialized);

  inline FillBatch(const FillBatch& from) : FillBatch(nullptr, from) {}
  inline FillBatch(FillBatch&& from) noexcept
      : FillBatch(nullptr, ::std::move(from)) {}
  inline FillBatch& operator=(const FillBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline FillBatch& operator=(FillBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FillBatch& default_instance() {
    return *reinterpret_cast<const FillBatch*>(
        &_FillBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(FillBatch& a, FillBatch& b) { a.Swap(&b); }
  inline void Swap(FillBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FillBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FillBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FillBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FillBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FillBatch& from) { FillBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FillBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.fills.v1.FillBatch"; }

 protected:
  explicit FillBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FillBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FillBatch& from);
  FillBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FillBatch&& from) noexcept
      : FillBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFillsFieldNumber = 1,
  };
  // repeated .ampy.fills.v1.FillEvent fills = 1 [json_name = "fills"];
  int fills_size() const;
  private:
  int _internal_fills_size() const;

  public:
  void clear_fills() ;
  ::ampy::fills::v1::FillEvent* PROTOBUF_NONNULL mutable_fills(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>* PROTOBUF_NONNULL mutable_fills();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>& _internal_fills() const;
  ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>* PROTOBUF_NONNULL _internal_mutable_fills();
  public:
  const ::ampy::fills::v1::FillEvent& fills(int index) const;
  ::ampy::fills::v1::FillEvent* PROTOBUF_NONNULL add_fills();
  const ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>& fills() const;
  // @@protoc_insertion_point(class_scope:ampy.fills.v1.FillBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FillBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ampy::fills::v1::FillEvent > fills_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2ffills_2fv1_2ffills_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FillBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// FillEvent

// string account_id = 1 [json_name = "accountId"];
inline void FillEvent::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& FillEvent::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FillEvent::set_account_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.fills.v1.FillEvent.account_id)
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::mutable_account_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.account_id)
  return _s;
}
inline const ::std::string& FillEvent::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void FillEvent::_internal_set_account_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.account_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.account_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FillEvent::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.account_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.account_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.account_id_.Set("", GetArena());
  }
  return released;
}
inline void FillEvent::set_allocated_account_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.account_id)
}

// string client_order_id = 2 [json_name = "clientOrderId"];
inline void FillEvent::clear_client_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_order_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& FillEvent::client_order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.client_order_id)
  return _internal_client_order_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FillEvent::set_client_order_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.client_order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.fills.v1.FillEvent.client_order_id)
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::mutable_client_order_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_client_order_id();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.client_order_id)
  return _s;
}
inline const ::std::string& FillEvent::_internal_client_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_order_id_.Get();
}
inline void FillEvent::_internal_set_client_order_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.client_order_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::_internal_mutable_client_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.client_order_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FillEvent::release_client_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.client_order_id)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.client_order_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.client_order_id_.Set("", GetArena());
  }
  return released;
}
inline void FillEvent::set_allocated_client_order_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.client_order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_order_id_.IsDefault()) {
    _impl_.client_order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.client_order_id)
}

// string broker_order_id = 3 [json_name = "brokerOrderId"];
inline void FillEvent::clear_broker_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.broker_order_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& FillEvent::broker_order_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.broker_order_id)
  return _internal_broker_order_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FillEvent::set_broker_order_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.broker_order_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.fills.v1.FillEvent.broker_order_id)
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::mutable_broker_order_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_broker_order_id();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.broker_order_id)
  return _s;
}
inline const ::std::string& FillEvent::_internal_broker_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.broker_order_id_.Get();
}
inline void FillEvent::_internal_set_broker_order_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.broker_order_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::_internal_mutable_broker_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.broker_order_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FillEvent::release_broker_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.broker_order_id)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.broker_order_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.broker_order_id_.Set("", GetArena());
  }
  return released;
}
inline void FillEvent::set_allocated_broker_order_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.broker_order_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.broker_order_id_.IsDefault()) {
    _impl_.broker_order_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.broker_order_id)
}

// .ampy.common.v1.SecurityId security = 4 [json_name = "security"];
inline bool FillEvent::has_security() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.security_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::SecurityId& FillEvent::_internal_security() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::SecurityId* p = _impl_.security_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::SecurityId&>(::ampy::common::v1::_SecurityId_default_instance_);
}
inline const ::ampy::common::v1::SecurityId& FillEvent::security() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.security)
  return _internal_security();
}
inline void FillEvent::unsafe_arena_set_allocated_security(
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }
  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.fills.v1.FillEvent.security)
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE FillEvent::release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::SecurityId* released = _impl_.security_;
  _impl_.security_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE FillEvent::unsafe_arena_release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.security)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::SecurityId* temp = _impl_.security_;
  _impl_.security_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL FillEvent::_internal_mutable_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::SecurityId>(GetArena());
    _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(p);
  }
  return _impl_.security_;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL FillEvent::mutable_security()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::ampy::common::v1::SecurityId* _msg = _internal_mutable_security();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.security)
  return _msg;
}
inline void FillEvent::set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.security)
}

// .ampy.common.v1.Decimal price = 5 [json_name = "price"];
inline bool FillEvent::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& FillEvent::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& FillEvent::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.price)
  return _internal_price();
}
inline void FillEvent::unsafe_arena_set_allocated_price(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.fills.v1.FillEvent.price)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE FillEvent::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Decimal* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE FillEvent::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.price)

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Decimal* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL FillEvent::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.price_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL FillEvent::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.price)
  return _msg;
}
inline void FillEvent::set_allocated_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }

  _impl_.price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.price)
}

// .ampy.common.v1.Decimal quantity = 6 [json_name = "quantity"];
inline bool FillEvent::has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quantity_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& FillEvent::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.quantity_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& FillEvent::quantity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.quantity)
  return _internal_quantity();
}
inline void FillEvent::unsafe_arena_set_allocated_quantity(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantity_);
  }
  _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.fills.v1.FillEvent.quantity)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE FillEvent::release_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::ampy::common::v1::Decimal* released = _impl_.quantity_;
  _impl_.quantity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE FillEvent::unsafe_arena_release_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.quantity)

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::ampy::common::v1::Decimal* temp = _impl_.quantity_;
  _impl_.quantity_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL FillEvent::_internal_mutable_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.quantity_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL FillEvent::mutable_quantity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_quantity();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.quantity)
  return _msg;
}
inline void FillEvent::set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }

  _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.quantity)
}

// string venue = 7 [json_name = "venue"];
inline void FillEvent::clear_venue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.venue_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& FillEvent::venue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.venue)
  return _internal_venue();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void FillEvent::set_venue(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.venue_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.fills.v1.FillEvent.venue)
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::mutable_venue()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_venue();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.venue)
  return _s;
}
inline const ::std::string& FillEvent::_internal_venue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.venue_.Get();
}
inline void FillEvent::_internal_set_venue(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.venue_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL FillEvent::_internal_mutable_venue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.venue_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE FillEvent::release_venue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.venue)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.venue_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.venue_.Set("", GetArena());
  }
  return released;
}
inline void FillEvent::set_allocated_venue(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.venue_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.venue_.IsDefault()) {
    _impl_.venue_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.venue)
}

// .google.protobuf.Timestamp event_time = 8 [json_name = "eventTime"];
inline bool FillEvent::has_event_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& FillEvent::_internal_event_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.event_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& FillEvent::event_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.event_time)
  return _internal_event_time();
}
inline void FillEvent::unsafe_arena_set_allocated_event_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_time_);
  }
  _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.fills.v1.FillEvent.event_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE FillEvent::release_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::google::protobuf::Timestamp* released = _impl_.event_time_;
  _impl_.event_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE FillEvent::unsafe_arena_release_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.event_time)

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::google::protobuf::Timestamp* temp = _impl_.event_time_;
  _impl_.event_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL FillEvent::_internal_mutable_event_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.event_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL FillEvent::mutable_event_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_event_time();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.event_time)
  return _msg;
}
inline void FillEvent::set_allocated_event_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }

  _impl_.event_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.event_time)
}

// .ampy.common.v1.Meta meta = 9 [json_name = "meta"];
inline bool FillEvent::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Meta& FillEvent::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Meta&>(::ampy::common::v1::_Meta_default_instance_);
}
inline const ::ampy::common::v1::Meta& FillEvent::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillEvent.meta)
  return _internal_meta();
}
inline void FillEvent::unsafe_arena_set_allocated_meta(
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.fills.v1.FillEvent.meta)
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE FillEvent::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100U;
  ::ampy::common::v1::Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE FillEvent::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.fills.v1.FillEvent.meta)

  _impl_._has_bits_[0] &= ~0x00000100U;
  ::ampy::common::v1::Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL FillEvent::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL FillEvent::mutable_meta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100U;
  ::ampy::common::v1::Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillEvent.meta)
  return _msg;
}
inline void FillEvent::set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100U;
  }

  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.fills.v1.FillEvent.meta)
}

// -------------------------------------------------------------------

// FillBatch

// repeated .ampy.fills.v1.FillEvent fills = 1 [json_name = "fills"];
inline int FillBatch::_internal_fills_size() const {
  return _internal_fills().size();
}
inline int FillBatch::fills_size() const {
  return _internal_fills_size();
}
inline void FillBatch::clear_fills() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fills_.Clear();
}
inline ::ampy::fills::v1::FillEvent* PROTOBUF_NONNULL FillBatch::mutable_fills(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.fills.v1.FillBatch.fills)
  return _internal_mutable_fills()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>* PROTOBUF_NONNULL FillBatch::mutable_fills()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.fills.v1.FillBatch.fills)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fills();
}
inline const ::ampy::fills::v1::FillEvent& FillBatch::fills(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.fills.v1.FillBatch.fills)
  return _internal_fills().Get(index);
}
inline ::ampy::fills::v1::FillEvent* PROTOBUF_NONNULL FillBatch::add_fills()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::fills::v1::FillEvent* _add = _internal_mutable_fills()->Add();
  // @@protoc_insertion_point(field_add:ampy.fills.v1.FillBatch.fills)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>& FillBatch::fills() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.fills.v1.FillBatch.fills)
  return _internal_fills();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>&
FillBatch::_internal_fills() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fills_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::fills::v1::FillEvent>* PROTOBUF_NONNULL
FillBatch::_internal_mutable_fills() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fills_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace fills
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2ffills_2fv1_2ffills_2eproto_2epb_2eh
