// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ampy/universe/v1/universe.proto

package universev1

import (
	v1 "github.com/AmpyFin/ampy-proto/v2/gen/go/ampy/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Constituent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Mic           string                 `protobuf:"bytes,2,opt,name=mic,proto3" json:"mic,omitempty"`
	Figi          string                 `protobuf:"bytes,3,opt,name=figi,proto3" json:"figi,omitempty"`
	Isin          string                 `protobuf:"bytes,4,opt,name=isin,proto3" json:"isin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Constituent) Reset() {
	*x = Constituent{}
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Constituent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constituent) ProtoMessage() {}

func (x *Constituent) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constituent.ProtoReflect.Descriptor instead.
func (*Constituent) Descriptor() ([]byte, []int) {
	return file_ampy_universe_v1_universe_proto_rawDescGZIP(), []int{0}
}

func (x *Constituent) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Constituent) GetMic() string {
	if x != nil {
		return x.Mic
	}
	return ""
}

func (x *Constituent) GetFigi() string {
	if x != nil {
		return x.Figi
	}
	return ""
}

func (x *Constituent) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

type UniverseSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UniverseId    string                 `protobuf:"bytes,1,opt,name=universe_id,json=universeId,proto3" json:"universe_id,omitempty"` // e.g., "nasdaq100_2025w36"
	Constituents  []*Constituent         `protobuf:"bytes,2,rep,name=constituents,proto3" json:"constituents,omitempty"`
	AsOf          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Ruleset       string                 `protobuf:"bytes,4,opt,name=ruleset,proto3" json:"ruleset,omitempty"`
	Meta          *v1.Meta               `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniverseSnapshot) Reset() {
	*x = UniverseSnapshot{}
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniverseSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseSnapshot) ProtoMessage() {}

func (x *UniverseSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseSnapshot.ProtoReflect.Descriptor instead.
func (*UniverseSnapshot) Descriptor() ([]byte, []int) {
	return file_ampy_universe_v1_universe_proto_rawDescGZIP(), []int{1}
}

func (x *UniverseSnapshot) GetUniverseId() string {
	if x != nil {
		return x.UniverseId
	}
	return ""
}

func (x *UniverseSnapshot) GetConstituents() []*Constituent {
	if x != nil {
		return x.Constituents
	}
	return nil
}

func (x *UniverseSnapshot) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *UniverseSnapshot) GetRuleset() string {
	if x != nil {
		return x.Ruleset
	}
	return ""
}

func (x *UniverseSnapshot) GetMeta() *v1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type UniverseBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Snapshots     []*UniverseSnapshot    `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniverseBatch) Reset() {
	*x = UniverseBatch{}
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniverseBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniverseBatch) ProtoMessage() {}

func (x *UniverseBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_universe_v1_universe_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniverseBatch.ProtoReflect.Descriptor instead.
func (*UniverseBatch) Descriptor() ([]byte, []int) {
	return file_ampy_universe_v1_universe_proto_rawDescGZIP(), []int{2}
}

func (x *UniverseBatch) GetSnapshots() []*UniverseSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

var File_ampy_universe_v1_universe_proto protoreflect.FileDescriptor

const file_ampy_universe_v1_universe_proto_rawDesc = "" +
	"\n" +
	"\x1fampy/universe/v1/universe.proto\x12\x10ampy.universe.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bampy/common/v1/common.proto\"_\n" +
	"\vConstituent\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x10\n" +
	"\x03mic\x18\x02 \x01(\tR\x03mic\x12\x12\n" +
	"\x04figi\x18\x03 \x01(\tR\x04figi\x12\x12\n" +
	"\x04isin\x18\x04 \x01(\tR\x04isin\"\xeb\x01\n" +
	"\x10UniverseSnapshot\x12\x1f\n" +
	"\vuniverse_id\x18\x01 \x01(\tR\n" +
	"universeId\x12A\n" +
	"\fconstituents\x18\x02 \x03(\v2\x1d.ampy.universe.v1.ConstituentR\fconstituents\x12/\n" +
	"\x05as_of\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04asOf\x12\x18\n" +
	"\aruleset\x18\x04 \x01(\tR\aruleset\x12(\n" +
	"\x04meta\x18\x05 \x01(\v2\x14.ampy.common.v1.MetaR\x04meta\"Q\n" +
	"\rUniverseBatch\x12@\n" +
	"\tsnapshots\x18\x01 \x03(\v2\".ampy.universe.v1.UniverseSnapshotR\tsnapshotsB\xcc\x01\n" +
	"\x14com.ampy.universe.v1B\rUniverseProtoP\x01ZCgithub.com/AmpyFin/ampy-proto/v2/gen/go/ampy/universe/v1;universev1\xa2\x02\x03AUX\xaa\x02\x10Ampy.Universe.V1\xca\x02\x10Ampy\\Universe\\V1\xe2\x02\x1cAmpy\\Universe\\V1\\GPBMetadata\xea\x02\x12Ampy::Universe::V1b\x06proto3"

var (
	file_ampy_universe_v1_universe_proto_rawDescOnce sync.Once
	file_ampy_universe_v1_universe_proto_rawDescData []byte
)

func file_ampy_universe_v1_universe_proto_rawDescGZIP() []byte {
	file_ampy_universe_v1_universe_proto_rawDescOnce.Do(func() {
		file_ampy_universe_v1_universe_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ampy_universe_v1_universe_proto_rawDesc), len(file_ampy_universe_v1_universe_proto_rawDesc)))
	})
	return file_ampy_universe_v1_universe_proto_rawDescData
}

var file_ampy_universe_v1_universe_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ampy_universe_v1_universe_proto_goTypes = []any{
	(*Constituent)(nil),           // 0: ampy.universe.v1.Constituent
	(*UniverseSnapshot)(nil),      // 1: ampy.universe.v1.UniverseSnapshot
	(*UniverseBatch)(nil),         // 2: ampy.universe.v1.UniverseBatch
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*v1.Meta)(nil),               // 4: ampy.common.v1.Meta
}
var file_ampy_universe_v1_universe_proto_depIdxs = []int32{
	0, // 0: ampy.universe.v1.UniverseSnapshot.constituents:type_name -> ampy.universe.v1.Constituent
	3, // 1: ampy.universe.v1.UniverseSnapshot.as_of:type_name -> google.protobuf.Timestamp
	4, // 2: ampy.universe.v1.UniverseSnapshot.meta:type_name -> ampy.common.v1.Meta
	1, // 3: ampy.universe.v1.UniverseBatch.snapshots:type_name -> ampy.universe.v1.UniverseSnapshot
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ampy_universe_v1_universe_proto_init() }
func file_ampy_universe_v1_universe_proto_init() {
	if File_ampy_universe_v1_universe_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ampy_universe_v1_universe_proto_rawDesc), len(file_ampy_universe_v1_universe_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_universe_v1_universe_proto_goTypes,
		DependencyIndexes: file_ampy_universe_v1_universe_proto_depIdxs,
		MessageInfos:      file_ampy_universe_v1_universe_proto_msgTypes,
	}.Build()
	File_ampy_universe_v1_universe_proto = out.File
	file_ampy_universe_v1_universe_proto_goTypes = nil
	file_ampy_universe_v1_universe_proto_depIdxs = nil
}
