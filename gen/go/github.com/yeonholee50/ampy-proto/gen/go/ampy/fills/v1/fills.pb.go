// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ampy/fills/v1/fills.proto

package fillsv1

import (
	v1 "github.com/yeonholee50/ampy-proto/gen/go/ampy/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FillEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     string                 `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	ClientOrderId string                 `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	BrokerOrderId string                 `protobuf:"bytes,3,opt,name=broker_order_id,json=brokerOrderId,proto3" json:"broker_order_id,omitempty"`
	Security      *v1.SecurityId         `protobuf:"bytes,4,opt,name=security,proto3" json:"security,omitempty"`
	Price         *v1.Decimal            `protobuf:"bytes,5,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      *v1.Decimal            `protobuf:"bytes,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Venue         string                 `protobuf:"bytes,7,opt,name=venue,proto3" json:"venue,omitempty"`
	EventTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	Meta          *v1.Meta               `protobuf:"bytes,9,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FillEvent) Reset() {
	*x = FillEvent{}
	mi := &file_ampy_fills_v1_fills_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillEvent) ProtoMessage() {}

func (x *FillEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fills_v1_fills_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillEvent.ProtoReflect.Descriptor instead.
func (*FillEvent) Descriptor() ([]byte, []int) {
	return file_ampy_fills_v1_fills_proto_rawDescGZIP(), []int{0}
}

func (x *FillEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *FillEvent) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *FillEvent) GetBrokerOrderId() string {
	if x != nil {
		return x.BrokerOrderId
	}
	return ""
}

func (x *FillEvent) GetSecurity() *v1.SecurityId {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *FillEvent) GetPrice() *v1.Decimal {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *FillEvent) GetQuantity() *v1.Decimal {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *FillEvent) GetVenue() string {
	if x != nil {
		return x.Venue
	}
	return ""
}

func (x *FillEvent) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *FillEvent) GetMeta() *v1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FillBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fills         []*FillEvent           `protobuf:"bytes,1,rep,name=fills,proto3" json:"fills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FillBatch) Reset() {
	*x = FillBatch{}
	mi := &file_ampy_fills_v1_fills_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FillBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FillBatch) ProtoMessage() {}

func (x *FillBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fills_v1_fills_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FillBatch.ProtoReflect.Descriptor instead.
func (*FillBatch) Descriptor() ([]byte, []int) {
	return file_ampy_fills_v1_fills_proto_rawDescGZIP(), []int{1}
}

func (x *FillBatch) GetFills() []*FillEvent {
	if x != nil {
		return x.Fills
	}
	return nil
}

var File_ampy_fills_v1_fills_proto protoreflect.FileDescriptor

const file_ampy_fills_v1_fills_proto_rawDesc = "" +
	"\n" +
	"\x19ampy/fills/v1/fills.proto\x12\rampy.fills.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bampy/common/v1/common.proto\"\x91\x03\n" +
	"\tFillEvent\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12&\n" +
	"\x0fclient_order_id\x18\x02 \x01(\tR\rclientOrderId\x12&\n" +
	"\x0fbroker_order_id\x18\x03 \x01(\tR\rbrokerOrderId\x126\n" +
	"\bsecurity\x18\x04 \x01(\v2\x1a.ampy.common.v1.SecurityIdR\bsecurity\x12-\n" +
	"\x05price\x18\x05 \x01(\v2\x17.ampy.common.v1.DecimalR\x05price\x123\n" +
	"\bquantity\x18\x06 \x01(\v2\x17.ampy.common.v1.DecimalR\bquantity\x12\x14\n" +
	"\x05venue\x18\a \x01(\tR\x05venue\x129\n" +
	"\n" +
	"event_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\teventTime\x12(\n" +
	"\x04meta\x18\t \x01(\v2\x14.ampy.common.v1.MetaR\x04meta\";\n" +
	"\tFillBatch\x12.\n" +
	"\x05fills\x18\x01 \x03(\v2\x18.ampy.fills.v1.FillEventR\x05fillsB\xb5\x01\n" +
	"\x11com.ampy.fills.v1B\n" +
	"FillsProtoP\x01Z>github.com/yeonholee50/ampy-proto/gen/go/ampy/fills/v1;fillsv1\xa2\x02\x03AFX\xaa\x02\rAmpy.Fills.V1\xca\x02\rAmpy\\Fills\\V1\xe2\x02\x19Ampy\\Fills\\V1\\GPBMetadata\xea\x02\x0fAmpy::Fills::V1b\x06proto3"

var (
	file_ampy_fills_v1_fills_proto_rawDescOnce sync.Once
	file_ampy_fills_v1_fills_proto_rawDescData []byte
)

func file_ampy_fills_v1_fills_proto_rawDescGZIP() []byte {
	file_ampy_fills_v1_fills_proto_rawDescOnce.Do(func() {
		file_ampy_fills_v1_fills_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ampy_fills_v1_fills_proto_rawDesc), len(file_ampy_fills_v1_fills_proto_rawDesc)))
	})
	return file_ampy_fills_v1_fills_proto_rawDescData
}

var file_ampy_fills_v1_fills_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ampy_fills_v1_fills_proto_goTypes = []any{
	(*FillEvent)(nil),             // 0: ampy.fills.v1.FillEvent
	(*FillBatch)(nil),             // 1: ampy.fills.v1.FillBatch
	(*v1.SecurityId)(nil),         // 2: ampy.common.v1.SecurityId
	(*v1.Decimal)(nil),            // 3: ampy.common.v1.Decimal
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*v1.Meta)(nil),               // 5: ampy.common.v1.Meta
}
var file_ampy_fills_v1_fills_proto_depIdxs = []int32{
	2, // 0: ampy.fills.v1.FillEvent.security:type_name -> ampy.common.v1.SecurityId
	3, // 1: ampy.fills.v1.FillEvent.price:type_name -> ampy.common.v1.Decimal
	3, // 2: ampy.fills.v1.FillEvent.quantity:type_name -> ampy.common.v1.Decimal
	4, // 3: ampy.fills.v1.FillEvent.event_time:type_name -> google.protobuf.Timestamp
	5, // 4: ampy.fills.v1.FillEvent.meta:type_name -> ampy.common.v1.Meta
	0, // 5: ampy.fills.v1.FillBatch.fills:type_name -> ampy.fills.v1.FillEvent
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ampy_fills_v1_fills_proto_init() }
func file_ampy_fills_v1_fills_proto_init() {
	if File_ampy_fills_v1_fills_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ampy_fills_v1_fills_proto_rawDesc), len(file_ampy_fills_v1_fills_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_fills_v1_fills_proto_goTypes,
		DependencyIndexes: file_ampy_fills_v1_fills_proto_depIdxs,
		MessageInfos:      file_ampy_fills_v1_fills_proto_msgTypes,
	}.Build()
	File_ampy_fills_v1_fills_proto = out.File
	file_ampy_fills_v1_fills_proto_goTypes = nil
	file_ampy_fills_v1_fills_proto_depIdxs = nil
}
