// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ampy/fx/v1/fx.proto

package fxv1

import (
	v1 "github.com/AmpyFin/ampy-proto/v2/gen/go/ampy/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          string                 `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`   // e.g., "USD"
	Quote         string                 `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"` // e.g., "JPY"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pair) Reset() {
	*x = Pair{}
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pair) ProtoMessage() {}

func (x *Pair) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pair.ProtoReflect.Descriptor instead.
func (*Pair) Descriptor() ([]byte, []int) {
	return file_ampy_fx_v1_fx_proto_rawDescGZIP(), []int{0}
}

func (x *Pair) GetBase() string {
	if x != nil {
		return x.Base
	}
	return ""
}

func (x *Pair) GetQuote() string {
	if x != nil {
		return x.Quote
	}
	return ""
}

type FxRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pair          *Pair                  `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Bid           *v1.Decimal            `protobuf:"bytes,2,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask           *v1.Decimal            `protobuf:"bytes,3,opt,name=ask,proto3" json:"ask,omitempty"`
	Mid           *v1.Decimal            `protobuf:"bytes,4,opt,name=mid,proto3" json:"mid,omitempty"`
	AsOf          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Meta          *v1.Meta               `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FxRate) Reset() {
	*x = FxRate{}
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FxRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FxRate) ProtoMessage() {}

func (x *FxRate) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FxRate.ProtoReflect.Descriptor instead.
func (*FxRate) Descriptor() ([]byte, []int) {
	return file_ampy_fx_v1_fx_proto_rawDescGZIP(), []int{1}
}

func (x *FxRate) GetPair() *Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

func (x *FxRate) GetBid() *v1.Decimal {
	if x != nil {
		return x.Bid
	}
	return nil
}

func (x *FxRate) GetAsk() *v1.Decimal {
	if x != nil {
		return x.Ask
	}
	return nil
}

func (x *FxRate) GetMid() *v1.Decimal {
	if x != nil {
		return x.Mid
	}
	return nil
}

func (x *FxRate) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *FxRate) GetMeta() *v1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FxRateBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rates         []*FxRate              `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FxRateBatch) Reset() {
	*x = FxRateBatch{}
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FxRateBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FxRateBatch) ProtoMessage() {}

func (x *FxRateBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_fx_v1_fx_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FxRateBatch.ProtoReflect.Descriptor instead.
func (*FxRateBatch) Descriptor() ([]byte, []int) {
	return file_ampy_fx_v1_fx_proto_rawDescGZIP(), []int{2}
}

func (x *FxRateBatch) GetRates() []*FxRate {
	if x != nil {
		return x.Rates
	}
	return nil
}

var File_ampy_fx_v1_fx_proto protoreflect.FileDescriptor

const file_ampy_fx_v1_fx_proto_rawDesc = "" +
	"\n" +
	"\x13ampy/fx/v1/fx.proto\x12\n" +
	"ampy.fx.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bampy/common/v1/common.proto\"0\n" +
	"\x04Pair\x12\x12\n" +
	"\x04base\x18\x01 \x01(\tR\x04base\x12\x14\n" +
	"\x05quote\x18\x02 \x01(\tR\x05quote\"\x8a\x02\n" +
	"\x06FxRate\x12$\n" +
	"\x04pair\x18\x01 \x01(\v2\x10.ampy.fx.v1.PairR\x04pair\x12)\n" +
	"\x03bid\x18\x02 \x01(\v2\x17.ampy.common.v1.DecimalR\x03bid\x12)\n" +
	"\x03ask\x18\x03 \x01(\v2\x17.ampy.common.v1.DecimalR\x03ask\x12)\n" +
	"\x03mid\x18\x04 \x01(\v2\x17.ampy.common.v1.DecimalR\x03mid\x12/\n" +
	"\x05as_of\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04asOf\x12(\n" +
	"\x04meta\x18\x06 \x01(\v2\x14.ampy.common.v1.MetaR\x04meta\"7\n" +
	"\vFxRateBatch\x12(\n" +
	"\x05rates\x18\x01 \x03(\v2\x12.ampy.fx.v1.FxRateR\x05ratesB\x99\x01\n" +
	"\x0ecom.ampy.fx.v1B\aFxProtoP\x01Z4github.com/AmpyFin/ampy-proto/v2/gen/go/ampy/fx/v1;fxv1\xa2\x02\x03AFX\xaa\x02\n" +
	"Ampy.Fx.V1\xca\x02\n" +
	"Ampy\\Fx\\V1\xe2\x02\x16Ampy\\Fx\\V1\\GPBMetadata\xea\x02\fAmpy::Fx::V1b\x06proto3"

var (
	file_ampy_fx_v1_fx_proto_rawDescOnce sync.Once
	file_ampy_fx_v1_fx_proto_rawDescData []byte
)

func file_ampy_fx_v1_fx_proto_rawDescGZIP() []byte {
	file_ampy_fx_v1_fx_proto_rawDescOnce.Do(func() {
		file_ampy_fx_v1_fx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ampy_fx_v1_fx_proto_rawDesc), len(file_ampy_fx_v1_fx_proto_rawDesc)))
	})
	return file_ampy_fx_v1_fx_proto_rawDescData
}

var file_ampy_fx_v1_fx_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ampy_fx_v1_fx_proto_goTypes = []any{
	(*Pair)(nil),                  // 0: ampy.fx.v1.Pair
	(*FxRate)(nil),                // 1: ampy.fx.v1.FxRate
	(*FxRateBatch)(nil),           // 2: ampy.fx.v1.FxRateBatch
	(*v1.Decimal)(nil),            // 3: ampy.common.v1.Decimal
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*v1.Meta)(nil),               // 5: ampy.common.v1.Meta
}
var file_ampy_fx_v1_fx_proto_depIdxs = []int32{
	0, // 0: ampy.fx.v1.FxRate.pair:type_name -> ampy.fx.v1.Pair
	3, // 1: ampy.fx.v1.FxRate.bid:type_name -> ampy.common.v1.Decimal
	3, // 2: ampy.fx.v1.FxRate.ask:type_name -> ampy.common.v1.Decimal
	3, // 3: ampy.fx.v1.FxRate.mid:type_name -> ampy.common.v1.Decimal
	4, // 4: ampy.fx.v1.FxRate.as_of:type_name -> google.protobuf.Timestamp
	5, // 5: ampy.fx.v1.FxRate.meta:type_name -> ampy.common.v1.Meta
	1, // 6: ampy.fx.v1.FxRateBatch.rates:type_name -> ampy.fx.v1.FxRate
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ampy_fx_v1_fx_proto_init() }
func file_ampy_fx_v1_fx_proto_init() {
	if File_ampy_fx_v1_fx_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ampy_fx_v1_fx_proto_rawDesc), len(file_ampy_fx_v1_fx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_fx_v1_fx_proto_goTypes,
		DependencyIndexes: file_ampy_fx_v1_fx_proto_depIdxs,
		MessageInfos:      file_ampy_fx_v1_fx_proto_msgTypes,
	}.Build()
	File_ampy_fx_v1_fx_proto = out.File
	file_ampy_fx_v1_fx_proto_goTypes = nil
	file_ampy_fx_v1_fx_proto_depIdxs = nil
}
