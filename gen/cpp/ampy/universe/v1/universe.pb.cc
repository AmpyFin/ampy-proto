// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/universe/v1/universe.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/universe/v1/universe.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace universe {
namespace v1 {

inline constexpr Constituent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Constituent::Constituent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Constituent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConstituentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConstituentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConstituentDefaultTypeInternal() {}
  union {
    Constituent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConstituentDefaultTypeInternal _Constituent_default_instance_;

inline constexpr UniverseSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        constituents_{},
        universe_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ruleset_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        as_of_{nullptr},
        meta_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UniverseSnapshot::UniverseSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UniverseSnapshot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UniverseSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UniverseSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UniverseSnapshotDefaultTypeInternal() {}
  union {
    UniverseSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UniverseSnapshotDefaultTypeInternal _UniverseSnapshot_default_instance_;

inline constexpr UniverseBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshots_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UniverseBatch::UniverseBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UniverseBatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UniverseBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UniverseBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UniverseBatchDefaultTypeInternal() {}
  union {
    UniverseBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UniverseBatchDefaultTypeInternal _UniverseBatch_default_instance_;
}  // namespace v1
}  // namespace universe
}  // namespace ampy
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ampy_2funiverse_2fv1_2funiverse_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2funiverse_2fv1_2funiverse_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::Constituent, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::Constituent, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::Constituent, _impl_.mic_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::Constituent, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::Constituent, _impl_.isin_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_.universe_id_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_.constituents_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_.as_of_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_.ruleset_),
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseSnapshot, _impl_.meta_),
        0,
        ~0u,
        2,
        1,
        3,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::universe::v1::UniverseBatch, _impl_.snapshots_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::universe::v1::Constituent)},
        {11, sizeof(::ampy::universe::v1::UniverseSnapshot)},
        {24, sizeof(::ampy::universe::v1::UniverseBatch)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::universe::v1::_Constituent_default_instance_._instance,
    &::ampy::universe::v1::_UniverseSnapshot_default_instance_._instance,
    &::ampy::universe::v1::_UniverseBatch_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2funiverse_2fv1_2funiverse_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037ampy/universe/v1/universe.proto\022\020ampy."
    "universe.v1\032\037google/protobuf/timestamp.p"
    "roto\032\033ampy/common/v1/common.proto\"_\n\013Con"
    "stituent\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\020\n\003mic\030"
    "\002 \001(\tR\003mic\022\022\n\004figi\030\003 \001(\tR\004figi\022\022\n\004isin\030\004"
    " \001(\tR\004isin\"\353\001\n\020UniverseSnapshot\022\037\n\013unive"
    "rse_id\030\001 \001(\tR\nuniverseId\022A\n\014constituents"
    "\030\002 \003(\0132\035.ampy.universe.v1.ConstituentR\014c"
    "onstituents\022/\n\005as_of\030\003 \001(\0132\032.google.prot"
    "obuf.TimestampR\004asOf\022\030\n\007ruleset\030\004 \001(\tR\007r"
    "uleset\022(\n\004meta\030\005 \001(\0132\024.ampy.common.v1.Me"
    "taR\004meta\"Q\n\rUniverseBatch\022@\n\tsnapshots\030\001"
    " \003(\0132\".ampy.universe.v1.UniverseSnapshot"
    "R\tsnapshotsB\311\001\n\024com.ampy.universe.v1B\rUn"
    "iverseProtoP\001Z@github.com/AmpyFin/ampy-p"
    "roto/gen/go/ampy/universe/v1;universev1\242"
    "\002\003AUX\252\002\020Ampy.Universe.V1\312\002\020Ampy\\Universe"
    "\\V1\342\002\034Ampy\\Universe\\V1\\GPBMetadata\352\002\022Amp"
    "y::Universe::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto_deps[2] = {
        &::descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto = {
    false,
    false,
    743,
    descriptor_table_protodef_ampy_2funiverse_2fv1_2funiverse_2eproto,
    "ampy/universe/v1/universe.proto",
    &descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto_once,
    descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_ampy_2funiverse_2fv1_2funiverse_2eproto::offsets,
    file_level_enum_descriptors_ampy_2funiverse_2fv1_2funiverse_2eproto,
    file_level_service_descriptors_ampy_2funiverse_2fv1_2funiverse_2eproto,
};
namespace ampy {
namespace universe {
namespace v1 {
// ===================================================================

class Constituent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Constituent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Constituent, _impl_._has_bits_);
};

Constituent::Constituent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Constituent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.universe.v1.Constituent)
}
PROTOBUF_NDEBUG_INLINE Constituent::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::universe::v1::Constituent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        mic_(arena, from.mic_),
        figi_(arena, from.figi_),
        isin_(arena, from.isin_) {}

Constituent::Constituent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Constituent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Constituent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Constituent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.universe.v1.Constituent)
}
PROTOBUF_NDEBUG_INLINE Constituent::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        symbol_(arena),
        mic_(arena),
        figi_(arena),
        isin_(arena) {}

inline void Constituent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Constituent::~Constituent() {
  // @@protoc_insertion_point(destructor:ampy.universe.v1.Constituent)
  SharedDtor(*this);
}
inline void Constituent::SharedDtor(MessageLite& self) {
  Constituent& this_ = static_cast<Constituent&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.mic_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.isin_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Constituent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Constituent(arena);
}
constexpr auto Constituent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Constituent),
                                            alignof(Constituent));
}
constexpr auto Constituent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Constituent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Constituent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Constituent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Constituent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Constituent>(), &Constituent::ByteSizeLong,
              &Constituent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Constituent, _impl_._cached_size_),
          false,
      },
      &Constituent::kDescriptorMethods,
      &descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Constituent_class_data_ =
        Constituent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Constituent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Constituent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Constituent_class_data_.tc_table);
  return Constituent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2>
Constituent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Constituent, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Constituent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::universe::v1::Constituent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string isin = 4 [json_name = "isin"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Constituent, _impl_.isin_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Constituent, _impl_.symbol_)}},
    // string mic = 2 [json_name = "mic"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Constituent, _impl_.mic_)}},
    // string figi = 3 [json_name = "figi"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Constituent, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(Constituent, _impl_.symbol_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mic = 2 [json_name = "mic"];
    {PROTOBUF_FIELD_OFFSET(Constituent, _impl_.mic_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3 [json_name = "figi"];
    {PROTOBUF_FIELD_OFFSET(Constituent, _impl_.figi_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isin = 4 [json_name = "isin"];
    {PROTOBUF_FIELD_OFFSET(Constituent, _impl_.isin_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\6\3\4\4\0\0\0"
    "ampy.universe.v1.Constituent"
    "symbol"
    "mic"
    "figi"
    "isin"
  }},
};
PROTOBUF_NOINLINE void Constituent::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.universe.v1.Constituent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.mic_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.isin_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Constituent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Constituent& this_ = static_cast<const Constituent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Constituent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Constituent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.universe.v1.Constituent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.Constituent.symbol");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string mic = 2 [json_name = "mic"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_mic().empty()) {
      const ::std::string& _s = this_._internal_mic();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.Constituent.mic");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string figi = 3 [json_name = "figi"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_figi().empty()) {
      const ::std::string& _s = this_._internal_figi();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.Constituent.figi");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string isin = 4 [json_name = "isin"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_isin().empty()) {
      const ::std::string& _s = this_._internal_isin();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.Constituent.isin");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.universe.v1.Constituent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Constituent::ByteSizeLong(const MessageLite& base) {
  const Constituent& this_ = static_cast<const Constituent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Constituent::ByteSizeLong() const {
  const Constituent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.universe.v1.Constituent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string symbol = 1 [json_name = "symbol"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // string mic = 2 [json_name = "mic"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_mic().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_mic());
      }
    }
    // string figi = 3 [json_name = "figi"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_figi().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_figi());
      }
    }
    // string isin = 4 [json_name = "isin"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_isin().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_isin());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Constituent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Constituent*>(&to_msg);
  auto& from = static_cast<const Constituent&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.universe.v1.Constituent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_mic().empty()) {
        _this->_internal_set_mic(from._internal_mic());
      } else {
        if (_this->_impl_.mic_.IsDefault()) {
          _this->_internal_set_mic("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_figi().empty()) {
        _this->_internal_set_figi(from._internal_figi());
      } else {
        if (_this->_impl_.figi_.IsDefault()) {
          _this->_internal_set_figi("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_isin().empty()) {
        _this->_internal_set_isin(from._internal_isin());
      } else {
        if (_this->_impl_.isin_.IsDefault()) {
          _this->_internal_set_isin("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Constituent::CopyFrom(const Constituent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.universe.v1.Constituent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Constituent::InternalSwap(Constituent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mic_, &other->_impl_.mic_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isin_, &other->_impl_.isin_, arena);
}

::google::protobuf::Metadata Constituent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UniverseSnapshot::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UniverseSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_._has_bits_);
};

void UniverseSnapshot::clear_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ != nullptr) _impl_.as_of_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void UniverseSnapshot::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
UniverseSnapshot::UniverseSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UniverseSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.universe.v1.UniverseSnapshot)
}
PROTOBUF_NDEBUG_INLINE UniverseSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::universe::v1::UniverseSnapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        constituents_{visibility, arena, from.constituents_},
        universe_id_(arena, from.universe_id_),
        ruleset_(arena, from.ruleset_) {}

UniverseSnapshot::UniverseSnapshot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UniverseSnapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UniverseSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UniverseSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.as_of_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_)
                : nullptr;
  _impl_.meta_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ampy.universe.v1.UniverseSnapshot)
}
PROTOBUF_NDEBUG_INLINE UniverseSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        constituents_{visibility, arena},
        universe_id_(arena),
        ruleset_(arena) {}

inline void UniverseSnapshot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, as_of_),
           0,
           offsetof(Impl_, meta_) -
               offsetof(Impl_, as_of_) +
               sizeof(Impl_::meta_));
}
UniverseSnapshot::~UniverseSnapshot() {
  // @@protoc_insertion_point(destructor:ampy.universe.v1.UniverseSnapshot)
  SharedDtor(*this);
}
inline void UniverseSnapshot::SharedDtor(MessageLite& self) {
  UniverseSnapshot& this_ = static_cast<UniverseSnapshot&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.universe_id_.Destroy();
  this_._impl_.ruleset_.Destroy();
  delete this_._impl_.as_of_;
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UniverseSnapshot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UniverseSnapshot(arena);
}
constexpr auto UniverseSnapshot::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.constituents_) +
          decltype(UniverseSnapshot::_impl_.constituents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UniverseSnapshot), alignof(UniverseSnapshot), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UniverseSnapshot::PlacementNew_,
                                 sizeof(UniverseSnapshot),
                                 alignof(UniverseSnapshot));
  }
}
constexpr auto UniverseSnapshot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UniverseSnapshot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UniverseSnapshot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UniverseSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UniverseSnapshot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UniverseSnapshot>(), &UniverseSnapshot::ByteSizeLong,
              &UniverseSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_._cached_size_),
          false,
      },
      &UniverseSnapshot::kDescriptorMethods,
      &descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UniverseSnapshot_class_data_ =
        UniverseSnapshot::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UniverseSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UniverseSnapshot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UniverseSnapshot_class_data_.tc_table);
  return UniverseSnapshot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 60, 2>
UniverseSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UniverseSnapshot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::universe::v1::UniverseSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string universe_id = 1 [json_name = "universeId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.universe_id_)}},
    // repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.constituents_)}},
    // .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.as_of_)}},
    // string ruleset = 4 [json_name = "ruleset"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.ruleset_)}},
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 2, PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.meta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string universe_id = 1 [json_name = "universeId"];
    {PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.universe_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
    {PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.constituents_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
    {PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.as_of_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string ruleset = 4 [json_name = "ruleset"];
    {PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.ruleset_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    {PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.meta_), _Internal::kHasBitsOffset + 3, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::universe::v1::Constituent>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Meta>()},
  }},
  {{
    "\41\13\0\0\7\0\0\0"
    "ampy.universe.v1.UniverseSnapshot"
    "universe_id"
    "ruleset"
  }},
};
PROTOBUF_NOINLINE void UniverseSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.universe.v1.UniverseSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.constituents_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.universe_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.ruleset_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.as_of_ != nullptr);
      _impl_.as_of_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UniverseSnapshot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UniverseSnapshot& this_ = static_cast<const UniverseSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UniverseSnapshot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UniverseSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.universe.v1.UniverseSnapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string universe_id = 1 [json_name = "universeId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_universe_id().empty()) {
      const ::std::string& _s = this_._internal_universe_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.UniverseSnapshot.universe_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_constituents_size());
       i < n; i++) {
    const auto& repfield = this_._internal_constituents().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.as_of_, this_._impl_.as_of_->GetCachedSize(), target,
        stream);
  }

  // string ruleset = 4 [json_name = "ruleset"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_ruleset().empty()) {
      const ::std::string& _s = this_._internal_ruleset();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.universe.v1.UniverseSnapshot.ruleset");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.universe.v1.UniverseSnapshot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UniverseSnapshot::ByteSizeLong(const MessageLite& base) {
  const UniverseSnapshot& this_ = static_cast<const UniverseSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UniverseSnapshot::ByteSizeLong() const {
  const UniverseSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.universe.v1.UniverseSnapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.universe.v1.Constituent constituents = 2 [json_name = "constituents"];
    {
      total_size += 1UL * this_._internal_constituents_size();
      for (const auto& msg : this_._internal_constituents()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string universe_id = 1 [json_name = "universeId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_universe_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_universe_id());
      }
    }
    // string ruleset = 4 [json_name = "ruleset"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_ruleset().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ruleset());
      }
    }
    // .google.protobuf.Timestamp as_of = 3 [json_name = "asOf"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.as_of_);
    }
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UniverseSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UniverseSnapshot*>(&to_msg);
  auto& from = static_cast<const UniverseSnapshot&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.universe.v1.UniverseSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_constituents()->MergeFrom(
      from._internal_constituents());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_universe_id().empty()) {
        _this->_internal_set_universe_id(from._internal_universe_id());
      } else {
        if (_this->_impl_.universe_id_.IsDefault()) {
          _this->_internal_set_universe_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_ruleset().empty()) {
        _this->_internal_set_ruleset(from._internal_ruleset());
      } else {
        if (_this->_impl_.ruleset_.IsDefault()) {
          _this->_internal_set_ruleset("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.as_of_ != nullptr);
      if (_this->_impl_.as_of_ == nullptr) {
        _this->_impl_.as_of_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_);
      } else {
        _this->_impl_.as_of_->MergeFrom(*from._impl_.as_of_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.meta_ != nullptr);
      if (_this->_impl_.meta_ == nullptr) {
        _this->_impl_.meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_);
      } else {
        _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UniverseSnapshot::CopyFrom(const UniverseSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.universe.v1.UniverseSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UniverseSnapshot::InternalSwap(UniverseSnapshot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.constituents_.InternalSwap(&other->_impl_.constituents_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.universe_id_, &other->_impl_.universe_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ruleset_, &other->_impl_.ruleset_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.meta_)
      + sizeof(UniverseSnapshot::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(UniverseSnapshot, _impl_.as_of_)>(
          reinterpret_cast<char*>(&_impl_.as_of_),
          reinterpret_cast<char*>(&other->_impl_.as_of_));
}

::google::protobuf::Metadata UniverseSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UniverseBatch::_Internal {
 public:
};

UniverseBatch::UniverseBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UniverseBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.universe.v1.UniverseBatch)
}
PROTOBUF_NDEBUG_INLINE UniverseBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::universe::v1::UniverseBatch& from_msg)
      : snapshots_{visibility, arena, from.snapshots_},
        _cached_size_{0} {}

UniverseBatch::UniverseBatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UniverseBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UniverseBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UniverseBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.universe.v1.UniverseBatch)
}
PROTOBUF_NDEBUG_INLINE UniverseBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : snapshots_{visibility, arena},
        _cached_size_{0} {}

inline void UniverseBatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UniverseBatch::~UniverseBatch() {
  // @@protoc_insertion_point(destructor:ampy.universe.v1.UniverseBatch)
  SharedDtor(*this);
}
inline void UniverseBatch::SharedDtor(MessageLite& self) {
  UniverseBatch& this_ = static_cast<UniverseBatch&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UniverseBatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UniverseBatch(arena);
}
constexpr auto UniverseBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UniverseBatch, _impl_.snapshots_) +
          decltype(UniverseBatch::_impl_.snapshots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UniverseBatch), alignof(UniverseBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UniverseBatch::PlacementNew_,
                                 sizeof(UniverseBatch),
                                 alignof(UniverseBatch));
  }
}
constexpr auto UniverseBatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UniverseBatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UniverseBatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UniverseBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UniverseBatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UniverseBatch>(), &UniverseBatch::ByteSizeLong,
              &UniverseBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UniverseBatch, _impl_._cached_size_),
          false,
      },
      &UniverseBatch::kDescriptorMethods,
      &descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UniverseBatch_class_data_ =
        UniverseBatch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UniverseBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UniverseBatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UniverseBatch_class_data_.tc_table);
  return UniverseBatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
UniverseBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UniverseBatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::universe::v1::UniverseBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UniverseBatch, _impl_.snapshots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
    {PROTOBUF_FIELD_OFFSET(UniverseBatch, _impl_.snapshots_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::universe::v1::UniverseSnapshot>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UniverseBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.universe.v1.UniverseBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UniverseBatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UniverseBatch& this_ = static_cast<const UniverseBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UniverseBatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UniverseBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.universe.v1.UniverseBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_snapshots_size());
       i < n; i++) {
    const auto& repfield = this_._internal_snapshots().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.universe.v1.UniverseBatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UniverseBatch::ByteSizeLong(const MessageLite& base) {
  const UniverseBatch& this_ = static_cast<const UniverseBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UniverseBatch::ByteSizeLong() const {
  const UniverseBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.universe.v1.UniverseBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.universe.v1.UniverseSnapshot snapshots = 1 [json_name = "snapshots"];
    {
      total_size += 1UL * this_._internal_snapshots_size();
      for (const auto& msg : this_._internal_snapshots()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UniverseBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UniverseBatch*>(&to_msg);
  auto& from = static_cast<const UniverseBatch&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.universe.v1.UniverseBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UniverseBatch::CopyFrom(const UniverseBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.universe.v1.UniverseBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UniverseBatch::InternalSwap(UniverseBatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
}

::google::protobuf::Metadata UniverseBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace universe
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2funiverse_2fv1_2funiverse_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
