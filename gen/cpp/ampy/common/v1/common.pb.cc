// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/common/v1/common.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/common/v1/common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace common {
namespace v1 {

inline constexpr SecurityId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mic_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        figi_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        isin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SecurityId::SecurityId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SecurityId_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SecurityIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityIdDefaultTypeInternal() {}
  union {
    SecurityId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityIdDefaultTypeInternal _SecurityId_default_instance_;

inline constexpr Meta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        run_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        producer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        schema_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        checksum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR Meta::Meta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Meta_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaDefaultTypeInternal() {}
  union {
    Meta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaDefaultTypeInternal _Meta_default_instance_;

inline constexpr Decimal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        scaled_{::int64_t{0}},
        scale_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Decimal::Decimal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Decimal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DecimalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecimalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecimalDefaultTypeInternal() {}
  union {
    Decimal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecimalDefaultTypeInternal _Decimal_default_instance_;

inline constexpr Money::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        currency_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Money::Money(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Money_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MoneyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoneyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoneyDefaultTypeInternal() {}
  union {
    Money _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoneyDefaultTypeInternal _Money_default_instance_;
}  // namespace v1
}  // namespace common
}  // namespace ampy
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Decimal, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Decimal, _impl_.scaled_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Decimal, _impl_.scale_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Money, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Money, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Money, _impl_.currency_code_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::SecurityId, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::SecurityId, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::SecurityId, _impl_.mic_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::SecurityId, _impl_.figi_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::SecurityId, _impl_.isin_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_.run_id_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_.producer_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_.schema_version_),
        PROTOBUF_FIELD_OFFSET(::ampy::common::v1::Meta, _impl_.checksum_),
        0,
        1,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::common::v1::Decimal)},
        {7, sizeof(::ampy::common::v1::Money)},
        {14, sizeof(::ampy::common::v1::SecurityId)},
        {25, sizeof(::ampy::common::v1::Meta)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::common::v1::_Decimal_default_instance_._instance,
    &::ampy::common::v1::_Money_default_instance_._instance,
    &::ampy::common::v1::_SecurityId_default_instance_._instance,
    &::ampy::common::v1::_Meta_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2fcommon_2fv1_2fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033ampy/common/v1/common.proto\022\016ampy.comm"
    "on.v1\"7\n\007Decimal\022\026\n\006scaled\030\001 \001(\022R\006scaled"
    "\022\024\n\005scale\030\002 \001(\005R\005scale\"]\n\005Money\022/\n\006amoun"
    "t\030\001 \001(\0132\027.ampy.common.v1.DecimalR\006amount"
    "\022#\n\rcurrency_code\030\002 \001(\tR\014currencyCode\"^\n"
    "\nSecurityId\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\020\n\003m"
    "ic\030\002 \001(\tR\003mic\022\022\n\004figi\030\003 \001(\tR\004figi\022\022\n\004isi"
    "n\030\004 \001(\tR\004isin\"\224\001\n\004Meta\022\025\n\006run_id\030\001 \001(\tR\005"
    "runId\022\026\n\006source\030\002 \001(\tR\006source\022\032\n\010produce"
    "r\030\003 \001(\tR\010producer\022%\n\016schema_version\030\004 \001("
    "\tR\rschemaVersion\022\032\n\010checksum\030\005 \001(\tR\010chec"
    "ksum*\230\001\n\020AdjustmentPolicy\022!\n\035ADJUSTMENT_"
    "POLICY_UNSPECIFIED\020\000\022\031\n\025ADJUSTMENT_POLIC"
    "Y_RAW\020\001\022 \n\034ADJUSTMENT_POLICY_SPLIT_ONLY\020"
    "\002\022$\n ADJUSTMENT_POLICY_SPLIT_DIVIDEND\020\003*"
    "9\n\004Side\022\024\n\020SIDE_UNSPECIFIED\020\000\022\014\n\010SIDE_BU"
    "Y\020\001\022\r\n\tSIDE_SELL\020\002*\204\001\n\tOrderType\022\032\n\026ORDE"
    "R_TYPE_UNSPECIFIED\020\000\022\025\n\021ORDER_TYPE_MARKE"
    "T\020\001\022\024\n\020ORDER_TYPE_LIMIT\020\002\022\023\n\017ORDER_TYPE_"
    "STOP\020\003\022\031\n\025ORDER_TYPE_STOP_LIMIT\020\004*\237\001\n\013Ti"
    "meInForce\022\035\n\031TIME_IN_FORCE_UNSPECIFIED\020\000"
    "\022\025\n\021TIME_IN_FORCE_DAY\020\001\022\025\n\021TIME_IN_FORCE"
    "_GTC\020\002\022\025\n\021TIME_IN_FORCE_IOC\020\003\022\025\n\021TIME_IN"
    "_FORCE_FOK\020\004\022\025\n\021TIME_IN_FORCE_GTT\020\005*X\n\nS"
    "ignalType\022\033\n\027SIGNAL_TYPE_UNSPECIFIED\020\000\022\025"
    "\n\021SIGNAL_TYPE_ALPHA\020\001\022\026\n\022SIGNAL_TYPE_ACT"
    "ION\020\002*\201\001\n\nActionType\022\033\n\027ACTION_TYPE_UNSP"
    "ECIFIED\020\000\022\023\n\017ACTION_TYPE_BUY\020\001\022\024\n\020ACTION"
    "_TYPE_SELL\020\002\022\024\n\020ACTION_TYPE_HOLD\020\003\022\025\n\021AC"
    "TION_TYPE_CLOSE\020\004B\274\001\n\022com.ampy.common.v1"
    "B\013CommonProtoP\001Z\?github.com/AmpyFin/ampy"
    "-proto/v2/gen/go/ampy/common/v1;commonv1"
    "\242\002\003ACX\252\002\016Ampy.Common.V1\312\002\016Ampy\\Common\\V1"
    "\342\002\032Ampy\\Common\\V1\\GPBMetadata\352\002\020Ampy::Co"
    "mmon::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto = {
    false,
    false,
    1376,
    descriptor_table_protodef_ampy_2fcommon_2fv1_2fcommon_2eproto,
    "ampy/common/v1/common.proto",
    &descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto::offsets,
    file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto,
    file_level_service_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto,
};
namespace ampy {
namespace common {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AdjustmentPolicy_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AdjustmentPolicy_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Side_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Side_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t OrderType_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TimeInForce_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t TimeInForce_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SignalType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t SignalType_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ActionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_ampy_2fcommon_2fv1_2fcommon_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ActionType_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class Decimal::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Decimal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Decimal, _impl_._has_bits_);
};

Decimal::Decimal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Decimal_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.common.v1.Decimal)
}
Decimal::Decimal(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Decimal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Decimal_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Decimal::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Decimal::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, scaled_),
           0,
           offsetof(Impl_, scale_) -
               offsetof(Impl_, scaled_) +
               sizeof(Impl_::scale_));
}
Decimal::~Decimal() {
  // @@protoc_insertion_point(destructor:ampy.common.v1.Decimal)
  SharedDtor(*this);
}
inline void Decimal::SharedDtor(MessageLite& self) {
  Decimal& this_ = static_cast<Decimal&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Decimal::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Decimal(arena);
}
constexpr auto Decimal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Decimal),
                                            alignof(Decimal));
}
constexpr auto Decimal::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Decimal_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Decimal::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Decimal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Decimal::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Decimal>(), &Decimal::ByteSizeLong,
              &Decimal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Decimal, _impl_._cached_size_),
          false,
      },
      &Decimal::kDescriptorMethods,
      &descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Decimal_class_data_ =
        Decimal::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Decimal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Decimal_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Decimal_class_data_.tc_table);
  return Decimal_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Decimal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Decimal, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Decimal_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 scale = 2 [json_name = "scale"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Decimal, _impl_.scale_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scale_)}},
    // sint64 scaled = 1 [json_name = "scaled"];
    {::_pbi::TcParser::FastZ64S1,
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scaled_)}},
  }}, {{
    65535, 65535
  }}, {{
    // sint64 scaled = 1 [json_name = "scaled"];
    {PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scaled_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kSInt64)},
    // int32 scale = 2 [json_name = "scale"];
    {PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scale_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Decimal::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.common.v1.Decimal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.scaled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.scale_) -
        reinterpret_cast<char*>(&_impl_.scaled_)) + sizeof(_impl_.scale_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Decimal::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Decimal& this_ = static_cast<const Decimal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Decimal::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Decimal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.common.v1.Decimal)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // sint64 scaled = 1 [json_name = "scaled"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_scaled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteSInt64ToArray(
          1, this_._internal_scaled(), target);
    }
  }

  // int32 scale = 2 [json_name = "scale"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_scale() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_scale(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.common.v1.Decimal)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Decimal::ByteSizeLong(const MessageLite& base) {
  const Decimal& this_ = static_cast<const Decimal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Decimal::ByteSizeLong() const {
  const Decimal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.common.v1.Decimal)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // sint64 scaled = 1 [json_name = "scaled"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_scaled() != 0) {
        total_size += ::_pbi::WireFormatLite::SInt64SizePlusOne(
            this_._internal_scaled());
      }
    }
    // int32 scale = 2 [json_name = "scale"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_scale() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_scale());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Decimal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Decimal*>(&to_msg);
  auto& from = static_cast<const Decimal&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.common.v1.Decimal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_scaled() != 0) {
        _this->_impl_.scaled_ = from._impl_.scaled_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_scale() != 0) {
        _this->_impl_.scale_ = from._impl_.scale_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Decimal::CopyFrom(const Decimal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.common.v1.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Decimal::InternalSwap(Decimal* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scale_)
      + sizeof(Decimal::_impl_.scale_)
      - PROTOBUF_FIELD_OFFSET(Decimal, _impl_.scaled_)>(
          reinterpret_cast<char*>(&_impl_.scaled_),
          reinterpret_cast<char*>(&other->_impl_.scaled_));
}

::google::protobuf::Metadata Decimal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Money::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Money>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Money, _impl_._has_bits_);
};

Money::Money(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Money_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.common.v1.Money)
}
PROTOBUF_NDEBUG_INLINE Money::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::common::v1::Money& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        currency_code_(arena, from.currency_code_) {}

Money::Money(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Money& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Money_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Money* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.amount_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ampy.common.v1.Money)
}
PROTOBUF_NDEBUG_INLINE Money::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        currency_code_(arena) {}

inline void Money::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
Money::~Money() {
  // @@protoc_insertion_point(destructor:ampy.common.v1.Money)
  SharedDtor(*this);
}
inline void Money::SharedDtor(MessageLite& self) {
  Money& this_ = static_cast<Money&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.currency_code_.Destroy();
  delete this_._impl_.amount_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Money::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Money(arena);
}
constexpr auto Money::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Money),
                                            alignof(Money));
}
constexpr auto Money::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Money_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Money::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Money>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Money::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Money>(), &Money::ByteSizeLong,
              &Money::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Money, _impl_._cached_size_),
          false,
      },
      &Money::kDescriptorMethods,
      &descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Money_class_data_ =
        Money::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Money::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Money_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Money_class_data_.tc_table);
  return Money_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2>
Money::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Money, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Money_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::common::v1::Money>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string currency_code = 2 [json_name = "currencyCode"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Money, _impl_.currency_code_)}},
    // .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(Money, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
    {PROTOBUF_FIELD_OFFSET(Money, _impl_.amount_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency_code = 2 [json_name = "currencyCode"];
    {PROTOBUF_FIELD_OFFSET(Money, _impl_.currency_code_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
  }},
  {{
    "\24\0\15\0\0\0\0\0"
    "ampy.common.v1.Money"
    "currency_code"
  }},
};
PROTOBUF_NOINLINE void Money::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.common.v1.Money)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.currency_code_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.amount_ != nullptr);
      _impl_.amount_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Money::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Money& this_ = static_cast<const Money&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Money::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Money& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.common.v1.Money)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.amount_, this_._impl_.amount_->GetCachedSize(), target,
        stream);
  }

  // string currency_code = 2 [json_name = "currencyCode"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_currency_code().empty()) {
      const ::std::string& _s = this_._internal_currency_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Money.currency_code");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.common.v1.Money)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Money::ByteSizeLong(const MessageLite& base) {
  const Money& this_ = static_cast<const Money&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Money::ByteSizeLong() const {
  const Money& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.common.v1.Money)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string currency_code = 2 [json_name = "currencyCode"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_currency_code().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency_code());
      }
    }
    // .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.amount_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Money::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Money*>(&to_msg);
  auto& from = static_cast<const Money&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.common.v1.Money)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_currency_code().empty()) {
        _this->_internal_set_currency_code(from._internal_currency_code());
      } else {
        if (_this->_impl_.currency_code_.IsDefault()) {
          _this->_internal_set_currency_code("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.amount_ != nullptr);
      if (_this->_impl_.amount_ == nullptr) {
        _this->_impl_.amount_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.amount_);
      } else {
        _this->_impl_.amount_->MergeFrom(*from._impl_.amount_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Money::CopyFrom(const Money& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.common.v1.Money)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Money::InternalSwap(Money* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_code_, &other->_impl_.currency_code_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata Money::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SecurityId::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SecurityId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SecurityId, _impl_._has_bits_);
};

SecurityId::SecurityId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SecurityId_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.common.v1.SecurityId)
}
PROTOBUF_NDEBUG_INLINE SecurityId::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::common::v1::SecurityId& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        mic_(arena, from.mic_),
        figi_(arena, from.figi_),
        isin_(arena, from.isin_) {}

SecurityId::SecurityId(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SecurityId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SecurityId_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SecurityId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.common.v1.SecurityId)
}
PROTOBUF_NDEBUG_INLINE SecurityId::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        symbol_(arena),
        mic_(arena),
        figi_(arena),
        isin_(arena) {}

inline void SecurityId::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SecurityId::~SecurityId() {
  // @@protoc_insertion_point(destructor:ampy.common.v1.SecurityId)
  SharedDtor(*this);
}
inline void SecurityId::SharedDtor(MessageLite& self) {
  SecurityId& this_ = static_cast<SecurityId&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.mic_.Destroy();
  this_._impl_.figi_.Destroy();
  this_._impl_.isin_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SecurityId::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SecurityId(arena);
}
constexpr auto SecurityId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SecurityId),
                                            alignof(SecurityId));
}
constexpr auto SecurityId::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SecurityId_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SecurityId::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SecurityId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SecurityId::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SecurityId>(), &SecurityId::ByteSizeLong,
              &SecurityId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SecurityId, _impl_._cached_size_),
          false,
      },
      &SecurityId::kDescriptorMethods,
      &descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SecurityId_class_data_ =
        SecurityId::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SecurityId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SecurityId_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SecurityId_class_data_.tc_table);
  return SecurityId_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 51, 2>
SecurityId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SecurityId, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SecurityId_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::common::v1::SecurityId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string isin = 4 [json_name = "isin"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.isin_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.symbol_)}},
    // string mic = 2 [json_name = "mic"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.mic_)}},
    // string figi = 3 [json_name = "figi"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.figi_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.symbol_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mic = 2 [json_name = "mic"];
    {PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.mic_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string figi = 3 [json_name = "figi"];
    {PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.figi_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string isin = 4 [json_name = "isin"];
    {PROTOBUF_FIELD_OFFSET(SecurityId, _impl_.isin_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\6\3\4\4\0\0\0"
    "ampy.common.v1.SecurityId"
    "symbol"
    "mic"
    "figi"
    "isin"
  }},
};
PROTOBUF_NOINLINE void SecurityId::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.common.v1.SecurityId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.mic_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.figi_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.isin_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SecurityId::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SecurityId& this_ = static_cast<const SecurityId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SecurityId::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SecurityId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.common.v1.SecurityId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.SecurityId.symbol");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string mic = 2 [json_name = "mic"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_mic().empty()) {
      const ::std::string& _s = this_._internal_mic();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.SecurityId.mic");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string figi = 3 [json_name = "figi"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_figi().empty()) {
      const ::std::string& _s = this_._internal_figi();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.SecurityId.figi");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string isin = 4 [json_name = "isin"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_isin().empty()) {
      const ::std::string& _s = this_._internal_isin();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.SecurityId.isin");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.common.v1.SecurityId)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SecurityId::ByteSizeLong(const MessageLite& base) {
  const SecurityId& this_ = static_cast<const SecurityId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SecurityId::ByteSizeLong() const {
  const SecurityId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.common.v1.SecurityId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string symbol = 1 [json_name = "symbol"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // string mic = 2 [json_name = "mic"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_mic().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_mic());
      }
    }
    // string figi = 3 [json_name = "figi"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_figi().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_figi());
      }
    }
    // string isin = 4 [json_name = "isin"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_isin().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_isin());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SecurityId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SecurityId*>(&to_msg);
  auto& from = static_cast<const SecurityId&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.common.v1.SecurityId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_mic().empty()) {
        _this->_internal_set_mic(from._internal_mic());
      } else {
        if (_this->_impl_.mic_.IsDefault()) {
          _this->_internal_set_mic("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_figi().empty()) {
        _this->_internal_set_figi(from._internal_figi());
      } else {
        if (_this->_impl_.figi_.IsDefault()) {
          _this->_internal_set_figi("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_isin().empty()) {
        _this->_internal_set_isin(from._internal_isin());
      } else {
        if (_this->_impl_.isin_.IsDefault()) {
          _this->_internal_set_isin("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityId::CopyFrom(const SecurityId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.common.v1.SecurityId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SecurityId::InternalSwap(SecurityId* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mic_, &other->_impl_.mic_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.figi_, &other->_impl_.figi_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isin_, &other->_impl_.isin_, arena);
}

::google::protobuf::Metadata SecurityId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Meta::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Meta>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Meta, _impl_._has_bits_);
};

Meta::Meta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Meta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.common.v1.Meta)
}
PROTOBUF_NDEBUG_INLINE Meta::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::common::v1::Meta& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        run_id_(arena, from.run_id_),
        source_(arena, from.source_),
        producer_(arena, from.producer_),
        schema_version_(arena, from.schema_version_),
        checksum_(arena, from.checksum_) {}

Meta::Meta(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Meta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Meta_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Meta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.common.v1.Meta)
}
PROTOBUF_NDEBUG_INLINE Meta::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        run_id_(arena),
        source_(arena),
        producer_(arena),
        schema_version_(arena),
        checksum_(arena) {}

inline void Meta::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Meta::~Meta() {
  // @@protoc_insertion_point(destructor:ampy.common.v1.Meta)
  SharedDtor(*this);
}
inline void Meta::SharedDtor(MessageLite& self) {
  Meta& this_ = static_cast<Meta&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.run_id_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.producer_.Destroy();
  this_._impl_.schema_version_.Destroy();
  this_._impl_.checksum_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Meta::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Meta(arena);
}
constexpr auto Meta::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Meta),
                                            alignof(Meta));
}
constexpr auto Meta::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Meta_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Meta::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Meta>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Meta::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Meta>(), &Meta::ByteSizeLong,
              &Meta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Meta, _impl_._cached_size_),
          false,
      },
      &Meta::kDescriptorMethods,
      &descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Meta_class_data_ =
        Meta::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Meta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Meta_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Meta_class_data_.tc_table);
  return Meta_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 70, 2>
Meta::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Meta, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Meta_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::common::v1::Meta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string run_id = 1 [json_name = "runId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Meta, _impl_.run_id_)}},
    // string source = 2 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Meta, _impl_.source_)}},
    // string producer = 3 [json_name = "producer"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Meta, _impl_.producer_)}},
    // string schema_version = 4 [json_name = "schemaVersion"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Meta, _impl_.schema_version_)}},
    // string checksum = 5 [json_name = "checksum"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(Meta, _impl_.checksum_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string run_id = 1 [json_name = "runId"];
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.run_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source = 2 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.source_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string producer = 3 [json_name = "producer"];
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.producer_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string schema_version = 4 [json_name = "schemaVersion"];
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.schema_version_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string checksum = 5 [json_name = "checksum"];
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.checksum_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\6\6\10\16\10\0\0"
    "ampy.common.v1.Meta"
    "run_id"
    "source"
    "producer"
    "schema_version"
    "checksum"
  }},
};
PROTOBUF_NOINLINE void Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.common.v1.Meta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.run_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.producer_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.schema_version_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.checksum_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Meta::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Meta& this_ = static_cast<const Meta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Meta::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Meta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.common.v1.Meta)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string run_id = 1 [json_name = "runId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_run_id().empty()) {
      const ::std::string& _s = this_._internal_run_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Meta.run_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string source = 2 [json_name = "source"];
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Meta.source");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string producer = 3 [json_name = "producer"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_producer().empty()) {
      const ::std::string& _s = this_._internal_producer();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Meta.producer");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string schema_version = 4 [json_name = "schemaVersion"];
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_schema_version().empty()) {
      const ::std::string& _s = this_._internal_schema_version();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Meta.schema_version");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string checksum = 5 [json_name = "checksum"];
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_checksum().empty()) {
      const ::std::string& _s = this_._internal_checksum();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.common.v1.Meta.checksum");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.common.v1.Meta)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Meta::ByteSizeLong(const MessageLite& base) {
  const Meta& this_ = static_cast<const Meta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Meta::ByteSizeLong() const {
  const Meta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.common.v1.Meta)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string run_id = 1 [json_name = "runId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_run_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_run_id());
      }
    }
    // string source = 2 [json_name = "source"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // string producer = 3 [json_name = "producer"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_producer().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_producer());
      }
    }
    // string schema_version = 4 [json_name = "schemaVersion"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_schema_version().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_schema_version());
      }
    }
    // string checksum = 5 [json_name = "checksum"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_checksum().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_checksum());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Meta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Meta*>(&to_msg);
  auto& from = static_cast<const Meta&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.common.v1.Meta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_run_id().empty()) {
        _this->_internal_set_run_id(from._internal_run_id());
      } else {
        if (_this->_impl_.run_id_.IsDefault()) {
          _this->_internal_set_run_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_producer().empty()) {
        _this->_internal_set_producer(from._internal_producer());
      } else {
        if (_this->_impl_.producer_.IsDefault()) {
          _this->_internal_set_producer("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_schema_version().empty()) {
        _this->_internal_set_schema_version(from._internal_schema_version());
      } else {
        if (_this->_impl_.schema_version_.IsDefault()) {
          _this->_internal_set_schema_version("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_checksum().empty()) {
        _this->_internal_set_checksum(from._internal_checksum());
      } else {
        if (_this->_impl_.checksum_.IsDefault()) {
          _this->_internal_set_checksum("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Meta::CopyFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.common.v1.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Meta::InternalSwap(Meta* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_id_, &other->_impl_.run_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.producer_, &other->_impl_.producer_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.schema_version_, &other->_impl_.schema_version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.checksum_, &other->_impl_.checksum_, arena);
}

::google::protobuf::Metadata Meta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
