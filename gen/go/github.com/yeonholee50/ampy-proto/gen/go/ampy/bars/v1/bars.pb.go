// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ampy/bars/v1/bars.proto

package barsv1

import (
	v1 "github.com/yeonholee50/ampy-proto/gen/go/ampy/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bar struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Security *v1.SecurityId         `protobuf:"bytes,1,opt,name=security,proto3" json:"security,omitempty"`
	// Inclusive start, exclusive end of the bar interval.
	Start *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// Prices as scaled decimals; presence indicates availability.
	Open  *v1.Decimal `protobuf:"bytes,4,opt,name=open,proto3" json:"open,omitempty"`
	High  *v1.Decimal `protobuf:"bytes,5,opt,name=high,proto3" json:"high,omitempty"`
	Low   *v1.Decimal `protobuf:"bytes,6,opt,name=low,proto3" json:"low,omitempty"`
	Close *v1.Decimal `protobuf:"bytes,7,opt,name=close,proto3" json:"close,omitempty"`
	// Optional VWAP; omit if unavailable.
	Vwap *v1.Decimal `protobuf:"bytes,8,opt,name=vwap,proto3" json:"vwap,omitempty"`
	// Non-negative integer; omit (default 0) is allowed for unknown, but prefer explicit absence in storage.
	Volume             int64  `protobuf:"varint,9,opt,name=volume,proto3" json:"volume,omitempty"`
	TradeCount         int64  `protobuf:"varint,10,opt,name=trade_count,json=tradeCount,proto3" json:"trade_count,omitempty"`
	Adjusted           bool   `protobuf:"varint,11,opt,name=adjusted,proto3" json:"adjusted,omitempty"`
	AdjustmentPolicyId string `protobuf:"bytes,12,opt,name=adjustment_policy_id,json=adjustmentPolicyId,proto3" json:"adjustment_policy_id,omitempty"` // legacy string id
	// Preferred enum policy (new additive field, non-breaking).
	AdjustmentPolicy v1.AdjustmentPolicy `protobuf:"varint,17,opt,name=adjustment_policy,json=adjustmentPolicy,proto3,enum=ampy.common.v1.AdjustmentPolicy" json:"adjustment_policy,omitempty"`
	// Timestamps (UTC). event_time should be the bar close timestamp.
	EventTime     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	IngestTime    *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=ingest_time,json=ingestTime,proto3" json:"ingest_time,omitempty"`
	AsOf          *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=as_of,json=asOf,proto3" json:"as_of,omitempty"`
	Meta          *v1.Meta               `protobuf:"bytes,16,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bar) Reset() {
	*x = Bar{}
	mi := &file_ampy_bars_v1_bars_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bar) ProtoMessage() {}

func (x *Bar) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_bars_v1_bars_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bar.ProtoReflect.Descriptor instead.
func (*Bar) Descriptor() ([]byte, []int) {
	return file_ampy_bars_v1_bars_proto_rawDescGZIP(), []int{0}
}

func (x *Bar) GetSecurity() *v1.SecurityId {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *Bar) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Bar) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Bar) GetOpen() *v1.Decimal {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *Bar) GetHigh() *v1.Decimal {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *Bar) GetLow() *v1.Decimal {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *Bar) GetClose() *v1.Decimal {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *Bar) GetVwap() *v1.Decimal {
	if x != nil {
		return x.Vwap
	}
	return nil
}

func (x *Bar) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Bar) GetTradeCount() int64 {
	if x != nil {
		return x.TradeCount
	}
	return 0
}

func (x *Bar) GetAdjusted() bool {
	if x != nil {
		return x.Adjusted
	}
	return false
}

func (x *Bar) GetAdjustmentPolicyId() string {
	if x != nil {
		return x.AdjustmentPolicyId
	}
	return ""
}

func (x *Bar) GetAdjustmentPolicy() v1.AdjustmentPolicy {
	if x != nil {
		return x.AdjustmentPolicy
	}
	return v1.AdjustmentPolicy(0)
}

func (x *Bar) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *Bar) GetIngestTime() *timestamppb.Timestamp {
	if x != nil {
		return x.IngestTime
	}
	return nil
}

func (x *Bar) GetAsOf() *timestamppb.Timestamp {
	if x != nil {
		return x.AsOf
	}
	return nil
}

func (x *Bar) GetMeta() *v1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Batch wrapper for efficient transport.
type BarBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bars          []*Bar                 `protobuf:"bytes,1,rep,name=bars,proto3" json:"bars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BarBatch) Reset() {
	*x = BarBatch{}
	mi := &file_ampy_bars_v1_bars_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BarBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarBatch) ProtoMessage() {}

func (x *BarBatch) ProtoReflect() protoreflect.Message {
	mi := &file_ampy_bars_v1_bars_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarBatch.ProtoReflect.Descriptor instead.
func (*BarBatch) Descriptor() ([]byte, []int) {
	return file_ampy_bars_v1_bars_proto_rawDescGZIP(), []int{1}
}

func (x *BarBatch) GetBars() []*Bar {
	if x != nil {
		return x.Bars
	}
	return nil
}

var File_ampy_bars_v1_bars_proto protoreflect.FileDescriptor

const file_ampy_bars_v1_bars_proto_rawDesc = "" +
	"\n" +
	"\x17ampy/bars/v1/bars.proto\x12\fampy.bars.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bampy/common/v1/common.proto\"\xa7\x06\n" +
	"\x03Bar\x126\n" +
	"\bsecurity\x18\x01 \x01(\v2\x1a.ampy.common.v1.SecurityIdR\bsecurity\x120\n" +
	"\x05start\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x05start\x12,\n" +
	"\x03end\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x03end\x12+\n" +
	"\x04open\x18\x04 \x01(\v2\x17.ampy.common.v1.DecimalR\x04open\x12+\n" +
	"\x04high\x18\x05 \x01(\v2\x17.ampy.common.v1.DecimalR\x04high\x12)\n" +
	"\x03low\x18\x06 \x01(\v2\x17.ampy.common.v1.DecimalR\x03low\x12-\n" +
	"\x05close\x18\a \x01(\v2\x17.ampy.common.v1.DecimalR\x05close\x12+\n" +
	"\x04vwap\x18\b \x01(\v2\x17.ampy.common.v1.DecimalR\x04vwap\x12\x16\n" +
	"\x06volume\x18\t \x01(\x03R\x06volume\x12\x1f\n" +
	"\vtrade_count\x18\n" +
	" \x01(\x03R\n" +
	"tradeCount\x12\x1a\n" +
	"\badjusted\x18\v \x01(\bR\badjusted\x120\n" +
	"\x14adjustment_policy_id\x18\f \x01(\tR\x12adjustmentPolicyId\x12M\n" +
	"\x11adjustment_policy\x18\x11 \x01(\x0e2 .ampy.common.v1.AdjustmentPolicyR\x10adjustmentPolicy\x129\n" +
	"\n" +
	"event_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\teventTime\x12;\n" +
	"\vingest_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ingestTime\x12/\n" +
	"\x05as_of\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\x04asOf\x12(\n" +
	"\x04meta\x18\x10 \x01(\v2\x14.ampy.common.v1.MetaR\x04meta\"1\n" +
	"\bBarBatch\x12%\n" +
	"\x04bars\x18\x01 \x03(\v2\x11.ampy.bars.v1.BarR\x04barsB\xad\x01\n" +
	"\x10com.ampy.bars.v1B\tBarsProtoP\x01Z<github.com/yeonholee50/ampy-proto/gen/go/ampy/bars/v1;barsv1\xa2\x02\x03ABX\xaa\x02\fAmpy.Bars.V1\xca\x02\fAmpy\\Bars\\V1\xe2\x02\x18Ampy\\Bars\\V1\\GPBMetadata\xea\x02\x0eAmpy::Bars::V1b\x06proto3"

var (
	file_ampy_bars_v1_bars_proto_rawDescOnce sync.Once
	file_ampy_bars_v1_bars_proto_rawDescData []byte
)

func file_ampy_bars_v1_bars_proto_rawDescGZIP() []byte {
	file_ampy_bars_v1_bars_proto_rawDescOnce.Do(func() {
		file_ampy_bars_v1_bars_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ampy_bars_v1_bars_proto_rawDesc), len(file_ampy_bars_v1_bars_proto_rawDesc)))
	})
	return file_ampy_bars_v1_bars_proto_rawDescData
}

var file_ampy_bars_v1_bars_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ampy_bars_v1_bars_proto_goTypes = []any{
	(*Bar)(nil),                   // 0: ampy.bars.v1.Bar
	(*BarBatch)(nil),              // 1: ampy.bars.v1.BarBatch
	(*v1.SecurityId)(nil),         // 2: ampy.common.v1.SecurityId
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*v1.Decimal)(nil),            // 4: ampy.common.v1.Decimal
	(v1.AdjustmentPolicy)(0),      // 5: ampy.common.v1.AdjustmentPolicy
	(*v1.Meta)(nil),               // 6: ampy.common.v1.Meta
}
var file_ampy_bars_v1_bars_proto_depIdxs = []int32{
	2,  // 0: ampy.bars.v1.Bar.security:type_name -> ampy.common.v1.SecurityId
	3,  // 1: ampy.bars.v1.Bar.start:type_name -> google.protobuf.Timestamp
	3,  // 2: ampy.bars.v1.Bar.end:type_name -> google.protobuf.Timestamp
	4,  // 3: ampy.bars.v1.Bar.open:type_name -> ampy.common.v1.Decimal
	4,  // 4: ampy.bars.v1.Bar.high:type_name -> ampy.common.v1.Decimal
	4,  // 5: ampy.bars.v1.Bar.low:type_name -> ampy.common.v1.Decimal
	4,  // 6: ampy.bars.v1.Bar.close:type_name -> ampy.common.v1.Decimal
	4,  // 7: ampy.bars.v1.Bar.vwap:type_name -> ampy.common.v1.Decimal
	5,  // 8: ampy.bars.v1.Bar.adjustment_policy:type_name -> ampy.common.v1.AdjustmentPolicy
	3,  // 9: ampy.bars.v1.Bar.event_time:type_name -> google.protobuf.Timestamp
	3,  // 10: ampy.bars.v1.Bar.ingest_time:type_name -> google.protobuf.Timestamp
	3,  // 11: ampy.bars.v1.Bar.as_of:type_name -> google.protobuf.Timestamp
	6,  // 12: ampy.bars.v1.Bar.meta:type_name -> ampy.common.v1.Meta
	0,  // 13: ampy.bars.v1.BarBatch.bars:type_name -> ampy.bars.v1.Bar
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_ampy_bars_v1_bars_proto_init() }
func file_ampy_bars_v1_bars_proto_init() {
	if File_ampy_bars_v1_bars_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ampy_bars_v1_bars_proto_rawDesc), len(file_ampy_bars_v1_bars_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ampy_bars_v1_bars_proto_goTypes,
		DependencyIndexes: file_ampy_bars_v1_bars_proto_depIdxs,
		MessageInfos:      file_ampy_bars_v1_bars_proto_msgTypes,
	}.Build()
	File_ampy_bars_v1_bars_proto = out.File
	file_ampy_bars_v1_bars_proto_goTypes = nil
	file_ampy_bars_v1_bars_proto_depIdxs = nil
}
