// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/positions/v1/positions.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2fpositions_2fv1_2fpositions_2eproto_2epb_2eh
#define ampy_2fpositions_2fv1_2fpositions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "ampy/common/v1/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2fpositions_2fv1_2fpositions_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2fpositions_2fv1_2fpositions_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto;
}  // extern "C"
namespace ampy {
namespace positions {
namespace v1 {
class PositionBatch;
struct PositionBatchDefaultTypeInternal;
extern PositionBatchDefaultTypeInternal _PositionBatch_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PositionBatch_class_data_;
class PositionSnapshot;
struct PositionSnapshotDefaultTypeInternal;
extern PositionSnapshotDefaultTypeInternal _PositionSnapshot_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PositionSnapshot_class_data_;
}  // namespace v1
}  // namespace positions
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace positions {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class PositionSnapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.positions.v1.PositionSnapshot) */ {
 public:
  inline PositionSnapshot() : PositionSnapshot(nullptr) {}
  ~PositionSnapshot() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PositionSnapshot* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PositionSnapshot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PositionSnapshot(::google::protobuf::internal::ConstantInitialized);

  inline PositionSnapshot(const PositionSnapshot& from) : PositionSnapshot(nullptr, from) {}
  inline PositionSnapshot(PositionSnapshot&& from) noexcept
      : PositionSnapshot(nullptr, ::std::move(from)) {}
  inline PositionSnapshot& operator=(const PositionSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionSnapshot& operator=(PositionSnapshot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionSnapshot& default_instance() {
    return *reinterpret_cast<const PositionSnapshot*>(
        &_PositionSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PositionSnapshot& a, PositionSnapshot& b) { a.Swap(&b); }
  inline void Swap(PositionSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionSnapshot* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PositionSnapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PositionSnapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PositionSnapshot& from) { PositionSnapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PositionSnapshot* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.positions.v1.PositionSnapshot"; }

 protected:
  explicit PositionSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PositionSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PositionSnapshot& from);
  PositionSnapshot(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PositionSnapshot&& from) noexcept
      : PositionSnapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountIdFieldNumber = 1,
    kSecurityFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kAvgPriceFieldNumber = 4,
    kUnrealizedPnlFieldNumber = 5,
    kRealizedPnlFieldNumber = 6,
    kAsOfFieldNumber = 7,
    kMetaFieldNumber = 8,
  };
  // string account_id = 1 [json_name = "accountId"];
  void clear_account_id() ;
  const ::std::string& account_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_account_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_account_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_account_id();
  void set_allocated_account_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_account_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_account_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_account_id();

  public:
  // .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
  bool has_security() const;
  void clear_security() ;
  const ::ampy::common::v1::SecurityId& security() const;
  [[nodiscard]] ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE release_security();
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL mutable_security();
  void set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE unsafe_arena_release_security();

  private:
  const ::ampy::common::v1::SecurityId& _internal_security() const;
  ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL _internal_mutable_security();

  public:
  // .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
  bool has_quantity() const;
  void clear_quantity() ;
  const ::ampy::common::v1::Decimal& quantity() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_quantity();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_quantity();
  void set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_quantity();

  private:
  const ::ampy::common::v1::Decimal& _internal_quantity() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_quantity();

  public:
  // .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
  bool has_avg_price() const;
  void clear_avg_price() ;
  const ::ampy::common::v1::Decimal& avg_price() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_avg_price();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_avg_price();
  void set_allocated_avg_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_avg_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_avg_price();

  private:
  const ::ampy::common::v1::Decimal& _internal_avg_price() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_avg_price();

  public:
  // .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
  bool has_unrealized_pnl() const;
  void clear_unrealized_pnl() ;
  const ::ampy::common::v1::Money& unrealized_pnl() const;
  [[nodiscard]] ::ampy::common::v1::Money* PROTOBUF_NULLABLE release_unrealized_pnl();
  ::ampy::common::v1::Money* PROTOBUF_NONNULL mutable_unrealized_pnl();
  void set_allocated_unrealized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_unrealized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Money* PROTOBUF_NULLABLE unsafe_arena_release_unrealized_pnl();

  private:
  const ::ampy::common::v1::Money& _internal_unrealized_pnl() const;
  ::ampy::common::v1::Money* PROTOBUF_NONNULL _internal_mutable_unrealized_pnl();

  public:
  // .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
  bool has_realized_pnl() const;
  void clear_realized_pnl() ;
  const ::ampy::common::v1::Money& realized_pnl() const;
  [[nodiscard]] ::ampy::common::v1::Money* PROTOBUF_NULLABLE release_realized_pnl();
  ::ampy::common::v1::Money* PROTOBUF_NONNULL mutable_realized_pnl();
  void set_allocated_realized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_realized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Money* PROTOBUF_NULLABLE unsafe_arena_release_realized_pnl();

  private:
  const ::ampy::common::v1::Money& _internal_realized_pnl() const;
  ::ampy::common::v1::Money* PROTOBUF_NONNULL _internal_mutable_realized_pnl();

  public:
  // .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
  bool has_as_of() const;
  void clear_as_of() ;
  const ::google::protobuf::Timestamp& as_of() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_as_of();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_as_of();
  void set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_as_of();

  private:
  const ::google::protobuf::Timestamp& _internal_as_of() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_as_of();

  public:
  // .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
  bool has_meta() const;
  void clear_meta() ;
  const ::ampy::common::v1::Meta& meta() const;
  [[nodiscard]] ::ampy::common::v1::Meta* PROTOBUF_NULLABLE release_meta();
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL mutable_meta();
  void set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Meta* PROTOBUF_NULLABLE unsafe_arena_release_meta();

  private:
  const ::ampy::common::v1::Meta& _internal_meta() const;
  ::ampy::common::v1::Meta* PROTOBUF_NONNULL _internal_mutable_meta();

  public:
  // @@protoc_insertion_point(class_scope:ampy.positions.v1.PositionSnapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   7, 61,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PositionSnapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr account_id_;
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE security_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE quantity_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE avg_price_;
    ::ampy::common::v1::Money* PROTOBUF_NULLABLE unrealized_pnl_;
    ::ampy::common::v1::Money* PROTOBUF_NULLABLE realized_pnl_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE as_of_;
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE meta_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fpositions_2fv1_2fpositions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PositionSnapshot_class_data_;
// -------------------------------------------------------------------

class PositionBatch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.positions.v1.PositionBatch) */ {
 public:
  inline PositionBatch() : PositionBatch(nullptr) {}
  ~PositionBatch() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PositionBatch* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PositionBatch));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PositionBatch(::google::protobuf::internal::ConstantInitialized);

  inline PositionBatch(const PositionBatch& from) : PositionBatch(nullptr, from) {}
  inline PositionBatch(PositionBatch&& from) noexcept
      : PositionBatch(nullptr, ::std::move(from)) {}
  inline PositionBatch& operator=(const PositionBatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionBatch& operator=(PositionBatch&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PositionBatch& default_instance() {
    return *reinterpret_cast<const PositionBatch*>(
        &_PositionBatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PositionBatch& a, PositionBatch& b) { a.Swap(&b); }
  inline void Swap(PositionBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionBatch* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PositionBatch* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PositionBatch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PositionBatch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PositionBatch& from) { PositionBatch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PositionBatch* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.positions.v1.PositionBatch"; }

 protected:
  explicit PositionBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PositionBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PositionBatch& from);
  PositionBatch(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PositionBatch&& from) noexcept
      : PositionBatch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionsFieldNumber = 1,
  };
  // repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
  int positions_size() const;
  private:
  int _internal_positions_size() const;

  public:
  void clear_positions() ;
  ::ampy::positions::v1::PositionSnapshot* PROTOBUF_NONNULL mutable_positions(int index);
  ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>* PROTOBUF_NONNULL mutable_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>& _internal_positions() const;
  ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>* PROTOBUF_NONNULL _internal_mutable_positions();
  public:
  const ::ampy::positions::v1::PositionSnapshot& positions(int index) const;
  ::ampy::positions::v1::PositionSnapshot* PROTOBUF_NONNULL add_positions();
  const ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>& positions() const;
  // @@protoc_insertion_point(class_scope:ampy.positions.v1.PositionBatch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PositionBatch& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ampy::positions::v1::PositionSnapshot > positions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fpositions_2fv1_2fpositions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PositionBatch_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PositionSnapshot

// string account_id = 1 [json_name = "accountId"];
inline void PositionSnapshot::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& PositionSnapshot::account_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.account_id)
  return _internal_account_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PositionSnapshot::set_account_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.account_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.positions.v1.PositionSnapshot.account_id)
}
inline ::std::string* PROTOBUF_NONNULL PositionSnapshot::mutable_account_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_account_id();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.account_id)
  return _s;
}
inline const ::std::string& PositionSnapshot::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_.Get();
}
inline void PositionSnapshot::_internal_set_account_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.account_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.account_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PositionSnapshot::release_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.account_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.account_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.account_id_.Set("", GetArena());
  }
  return released;
}
inline void PositionSnapshot::set_allocated_account_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.account_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_id_.IsDefault()) {
    _impl_.account_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.account_id)
}

// .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
inline bool PositionSnapshot::has_security() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.security_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::SecurityId& PositionSnapshot::_internal_security() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::SecurityId* p = _impl_.security_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::SecurityId&>(::ampy::common::v1::_SecurityId_default_instance_);
}
inline const ::ampy::common::v1::SecurityId& PositionSnapshot::security() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.security)
  return _internal_security();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_security(
    ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }
  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.security)
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE PositionSnapshot::release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::SecurityId* released = _impl_.security_;
  _impl_.security_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.security)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::SecurityId* temp = _impl_.security_;
  _impl_.security_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::SecurityId>(GetArena());
    _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(p);
  }
  return _impl_.security_;
}
inline ::ampy::common::v1::SecurityId* PROTOBUF_NONNULL PositionSnapshot::mutable_security()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::ampy::common::v1::SecurityId* _msg = _internal_mutable_security();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.security)
  return _msg;
}
inline void PositionSnapshot::set_allocated_security(::ampy::common::v1::SecurityId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.security_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.security_ = reinterpret_cast<::ampy::common::v1::SecurityId*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.security)
}

// .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
inline bool PositionSnapshot::has_quantity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.quantity_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& PositionSnapshot::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.quantity_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& PositionSnapshot::quantity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.quantity)
  return _internal_quantity();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_quantity(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantity_);
  }
  _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.quantity)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE PositionSnapshot::release_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::ampy::common::v1::Decimal* released = _impl_.quantity_;
  _impl_.quantity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.quantity)

  _impl_._has_bits_[0] &= ~0x00000004U;
  ::ampy::common::v1::Decimal* temp = _impl_.quantity_;
  _impl_.quantity_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.quantity_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL PositionSnapshot::mutable_quantity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_quantity();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.quantity)
  return _msg;
}
inline void PositionSnapshot::set_allocated_quantity(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.quantity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }

  _impl_.quantity_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.quantity)
}

// .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
inline bool PositionSnapshot::has_avg_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.avg_price_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Decimal& PositionSnapshot::_internal_avg_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.avg_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& PositionSnapshot::avg_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.avg_price)
  return _internal_avg_price();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_avg_price(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.avg_price_);
  }
  _impl_.avg_price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.avg_price)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE PositionSnapshot::release_avg_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::ampy::common::v1::Decimal* released = _impl_.avg_price_;
  _impl_.avg_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_avg_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.avg_price)

  _impl_._has_bits_[0] &= ~0x00000008U;
  ::ampy::common::v1::Decimal* temp = _impl_.avg_price_;
  _impl_.avg_price_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_avg_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.avg_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.avg_price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.avg_price_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL PositionSnapshot::mutable_avg_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_avg_price();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.avg_price)
  return _msg;
}
inline void PositionSnapshot::set_allocated_avg_price(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.avg_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }

  _impl_.avg_price_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.avg_price)
}

// .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
inline bool PositionSnapshot::has_unrealized_pnl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unrealized_pnl_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Money& PositionSnapshot::_internal_unrealized_pnl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Money* p = _impl_.unrealized_pnl_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Money&>(::ampy::common::v1::_Money_default_instance_);
}
inline const ::ampy::common::v1::Money& PositionSnapshot::unrealized_pnl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.unrealized_pnl)
  return _internal_unrealized_pnl();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_unrealized_pnl(
    ::ampy::common::v1::Money* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unrealized_pnl_);
  }
  _impl_.unrealized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.unrealized_pnl)
}
inline ::ampy::common::v1::Money* PROTOBUF_NULLABLE PositionSnapshot::release_unrealized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::Money* released = _impl_.unrealized_pnl_;
  _impl_.unrealized_pnl_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Money* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_unrealized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.unrealized_pnl)

  _impl_._has_bits_[0] &= ~0x00000010U;
  ::ampy::common::v1::Money* temp = _impl_.unrealized_pnl_;
  _impl_.unrealized_pnl_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Money* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_unrealized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unrealized_pnl_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Money>(GetArena());
    _impl_.unrealized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(p);
  }
  return _impl_.unrealized_pnl_;
}
inline ::ampy::common::v1::Money* PROTOBUF_NONNULL PositionSnapshot::mutable_unrealized_pnl()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010U;
  ::ampy::common::v1::Money* _msg = _internal_mutable_unrealized_pnl();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.unrealized_pnl)
  return _msg;
}
inline void PositionSnapshot::set_allocated_unrealized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unrealized_pnl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }

  _impl_.unrealized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.unrealized_pnl)
}

// .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
inline bool PositionSnapshot::has_realized_pnl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.realized_pnl_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Money& PositionSnapshot::_internal_realized_pnl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Money* p = _impl_.realized_pnl_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Money&>(::ampy::common::v1::_Money_default_instance_);
}
inline const ::ampy::common::v1::Money& PositionSnapshot::realized_pnl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.realized_pnl)
  return _internal_realized_pnl();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_realized_pnl(
    ::ampy::common::v1::Money* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.realized_pnl_);
  }
  _impl_.realized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.realized_pnl)
}
inline ::ampy::common::v1::Money* PROTOBUF_NULLABLE PositionSnapshot::release_realized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Money* released = _impl_.realized_pnl_;
  _impl_.realized_pnl_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Money* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_realized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.realized_pnl)

  _impl_._has_bits_[0] &= ~0x00000020U;
  ::ampy::common::v1::Money* temp = _impl_.realized_pnl_;
  _impl_.realized_pnl_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Money* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_realized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.realized_pnl_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Money>(GetArena());
    _impl_.realized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(p);
  }
  return _impl_.realized_pnl_;
}
inline ::ampy::common::v1::Money* PROTOBUF_NONNULL PositionSnapshot::mutable_realized_pnl()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020U;
  ::ampy::common::v1::Money* _msg = _internal_mutable_realized_pnl();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.realized_pnl)
  return _msg;
}
inline void PositionSnapshot::set_allocated_realized_pnl(::ampy::common::v1::Money* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.realized_pnl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }

  _impl_.realized_pnl_ = reinterpret_cast<::ampy::common::v1::Money*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.realized_pnl)
}

// .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
inline bool PositionSnapshot::has_as_of() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.as_of_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& PositionSnapshot::_internal_as_of() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.as_of_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& PositionSnapshot::as_of() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.as_of)
  return _internal_as_of();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_as_of(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }
  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.as_of)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionSnapshot::release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::google::protobuf::Timestamp* released = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.as_of)

  _impl_._has_bits_[0] &= ~0x00000040U;
  ::google::protobuf::Timestamp* temp = _impl_.as_of_;
  _impl_.as_of_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.as_of_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL PositionSnapshot::mutable_as_of()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_as_of();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.as_of)
  return _msg;
}
inline void PositionSnapshot::set_allocated_as_of(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.as_of_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }

  _impl_.as_of_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.as_of)
}

// .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
inline bool PositionSnapshot::has_meta() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.meta_ != nullptr);
  return value;
}
inline const ::ampy::common::v1::Meta& PositionSnapshot::_internal_meta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Meta* p = _impl_.meta_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Meta&>(::ampy::common::v1::_Meta_default_instance_);
}
inline const ::ampy::common::v1::Meta& PositionSnapshot::meta() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionSnapshot.meta)
  return _internal_meta();
}
inline void PositionSnapshot::unsafe_arena_set_allocated_meta(
    ::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }
  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.positions.v1.PositionSnapshot.meta)
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE PositionSnapshot::release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::ampy::common::v1::Meta* released = _impl_.meta_;
  _impl_.meta_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NULLABLE PositionSnapshot::unsafe_arena_release_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.positions.v1.PositionSnapshot.meta)

  _impl_._has_bits_[0] &= ~0x00000080U;
  ::ampy::common::v1::Meta* temp = _impl_.meta_;
  _impl_.meta_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL PositionSnapshot::_internal_mutable_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Meta>(GetArena());
    _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(p);
  }
  return _impl_.meta_;
}
inline ::ampy::common::v1::Meta* PROTOBUF_NONNULL PositionSnapshot::mutable_meta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080U;
  ::ampy::common::v1::Meta* _msg = _internal_mutable_meta();
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionSnapshot.meta)
  return _msg;
}
inline void PositionSnapshot::set_allocated_meta(::ampy::common::v1::Meta* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.meta_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080U;
  }

  _impl_.meta_ = reinterpret_cast<::ampy::common::v1::Meta*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.positions.v1.PositionSnapshot.meta)
}

// -------------------------------------------------------------------

// PositionBatch

// repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
inline int PositionBatch::_internal_positions_size() const {
  return _internal_positions().size();
}
inline int PositionBatch::positions_size() const {
  return _internal_positions_size();
}
inline void PositionBatch::clear_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positions_.Clear();
}
inline ::ampy::positions::v1::PositionSnapshot* PROTOBUF_NONNULL PositionBatch::mutable_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ampy.positions.v1.PositionBatch.positions)
  return _internal_mutable_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>* PROTOBUF_NONNULL PositionBatch::mutable_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ampy.positions.v1.PositionBatch.positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_positions();
}
inline const ::ampy::positions::v1::PositionSnapshot& PositionBatch::positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.positions.v1.PositionBatch.positions)
  return _internal_positions().Get(index);
}
inline ::ampy::positions::v1::PositionSnapshot* PROTOBUF_NONNULL PositionBatch::add_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ampy::positions::v1::PositionSnapshot* _add = _internal_mutable_positions()->Add();
  // @@protoc_insertion_point(field_add:ampy.positions.v1.PositionBatch.positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>& PositionBatch::positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ampy.positions.v1.PositionBatch.positions)
  return _internal_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>&
PositionBatch::_internal_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.positions_;
}
inline ::google::protobuf::RepeatedPtrField<::ampy::positions::v1::PositionSnapshot>* PROTOBUF_NONNULL
PositionBatch::_internal_mutable_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.positions_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace positions
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2fpositions_2fv1_2fpositions_2eproto_2epb_2eh
