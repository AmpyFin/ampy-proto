// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/positions/v1/positions.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/positions/v1/positions.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace positions {
namespace v1 {

inline constexpr PositionSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_{nullptr},
        quantity_{nullptr},
        avg_price_{nullptr},
        unrealized_pnl_{nullptr},
        realized_pnl_{nullptr},
        as_of_{nullptr},
        meta_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PositionSnapshot::PositionSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PositionSnapshot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionSnapshotDefaultTypeInternal() {}
  union {
    PositionSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionSnapshotDefaultTypeInternal _PositionSnapshot_default_instance_;

inline constexpr PositionBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : positions_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionBatch::PositionBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PositionBatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionBatchDefaultTypeInternal() {}
  union {
    PositionBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionBatchDefaultTypeInternal _PositionBatch_default_instance_;
}  // namespace v1
}  // namespace positions
}  // namespace ampy
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ampy_2fpositions_2fv1_2fpositions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2fpositions_2fv1_2fpositions_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2fpositions_2fv1_2fpositions_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.security_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.avg_price_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.unrealized_pnl_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.realized_pnl_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.as_of_),
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionSnapshot, _impl_.meta_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::positions::v1::PositionBatch, _impl_.positions_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::positions::v1::PositionSnapshot)},
        {19, sizeof(::ampy::positions::v1::PositionBatch)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::positions::v1::_PositionSnapshot_default_instance_._instance,
    &::ampy::positions::v1::_PositionBatch_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2fpositions_2fv1_2fpositions_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!ampy/positions/v1/positions.proto\022\021amp"
    "y.positions.v1\032\037google/protobuf/timestam"
    "p.proto\032\033ampy/common/v1/common.proto\"\247\003\n"
    "\020PositionSnapshot\022\035\n\naccount_id\030\001 \001(\tR\ta"
    "ccountId\0226\n\010security\030\002 \001(\0132\032.ampy.common"
    ".v1.SecurityIdR\010security\0223\n\010quantity\030\003 \001"
    "(\0132\027.ampy.common.v1.DecimalR\010quantity\0224\n"
    "\tavg_price\030\004 \001(\0132\027.ampy.common.v1.Decima"
    "lR\010avgPrice\022<\n\016unrealized_pnl\030\005 \001(\0132\025.am"
    "py.common.v1.MoneyR\runrealizedPnl\0228\n\014rea"
    "lized_pnl\030\006 \001(\0132\025.ampy.common.v1.MoneyR\013"
    "realizedPnl\022/\n\005as_of\030\007 \001(\0132\032.google.prot"
    "obuf.TimestampR\004asOf\022(\n\004meta\030\010 \001(\0132\024.amp"
    "y.common.v1.MetaR\004meta\"R\n\rPositionBatch\022"
    "A\n\tpositions\030\001 \003(\0132#.ampy.positions.v1.P"
    "ositionSnapshotR\tpositionsB\325\001\n\025com.ampy."
    "positions.v1B\016PositionsProtoP\001ZFgithub.c"
    "om/yeonholee50/ampy-proto/gen/go/ampy/po"
    "sitions/v1;positionsv1\242\002\003APX\252\002\021Ampy.Posi"
    "tions.V1\312\002\021Ampy\\Positions\\V1\342\002\035Ampy\\Posi"
    "tions\\V1\\GPBMetadata\352\002\023Ampy::Positions::"
    "V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto_deps[2] = {
        &::descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto = {
    false,
    false,
    850,
    descriptor_table_protodef_ampy_2fpositions_2fv1_2fpositions_2eproto,
    "ampy/positions/v1/positions.proto",
    &descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto_once,
    descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_ampy_2fpositions_2fv1_2fpositions_2eproto::offsets,
    file_level_enum_descriptors_ampy_2fpositions_2fv1_2fpositions_2eproto,
    file_level_service_descriptors_ampy_2fpositions_2fv1_2fpositions_2eproto,
};
namespace ampy {
namespace positions {
namespace v1 {
// ===================================================================

class PositionSnapshot::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PositionSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_._has_bits_);
};

void PositionSnapshot::clear_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ != nullptr) _impl_.security_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void PositionSnapshot::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.quantity_ != nullptr) _impl_.quantity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void PositionSnapshot::clear_avg_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.avg_price_ != nullptr) _impl_.avg_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void PositionSnapshot::clear_unrealized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unrealized_pnl_ != nullptr) _impl_.unrealized_pnl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
void PositionSnapshot::clear_realized_pnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.realized_pnl_ != nullptr) _impl_.realized_pnl_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
void PositionSnapshot::clear_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ != nullptr) _impl_.as_of_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
void PositionSnapshot::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080U;
}
PositionSnapshot::PositionSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.positions.v1.PositionSnapshot)
}
PROTOBUF_NDEBUG_INLINE PositionSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::positions::v1::PositionSnapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_id_(arena, from.account_id_) {}

PositionSnapshot::PositionSnapshot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PositionSnapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.security_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_)
                : nullptr;
  _impl_.quantity_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_)
                : nullptr;
  _impl_.avg_price_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.avg_price_)
                : nullptr;
  _impl_.unrealized_pnl_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.unrealized_pnl_)
                : nullptr;
  _impl_.realized_pnl_ = ((cached_has_bits & 0x00000020U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.realized_pnl_)
                : nullptr;
  _impl_.as_of_ = ((cached_has_bits & 0x00000040U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_)
                : nullptr;
  _impl_.meta_ = ((cached_has_bits & 0x00000080U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ampy.positions.v1.PositionSnapshot)
}
PROTOBUF_NDEBUG_INLINE PositionSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_id_(arena) {}

inline void PositionSnapshot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, security_),
           0,
           offsetof(Impl_, meta_) -
               offsetof(Impl_, security_) +
               sizeof(Impl_::meta_));
}
PositionSnapshot::~PositionSnapshot() {
  // @@protoc_insertion_point(destructor:ampy.positions.v1.PositionSnapshot)
  SharedDtor(*this);
}
inline void PositionSnapshot::SharedDtor(MessageLite& self) {
  PositionSnapshot& this_ = static_cast<PositionSnapshot&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_id_.Destroy();
  delete this_._impl_.security_;
  delete this_._impl_.quantity_;
  delete this_._impl_.avg_price_;
  delete this_._impl_.unrealized_pnl_;
  delete this_._impl_.realized_pnl_;
  delete this_._impl_.as_of_;
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PositionSnapshot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PositionSnapshot(arena);
}
constexpr auto PositionSnapshot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionSnapshot),
                                            alignof(PositionSnapshot));
}
constexpr auto PositionSnapshot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PositionSnapshot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PositionSnapshot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PositionSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PositionSnapshot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PositionSnapshot>(), &PositionSnapshot::ByteSizeLong,
              &PositionSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_._cached_size_),
          false,
      },
      &PositionSnapshot::kDescriptorMethods,
      &descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PositionSnapshot_class_data_ =
        PositionSnapshot::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PositionSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PositionSnapshot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PositionSnapshot_class_data_.tc_table);
  return PositionSnapshot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 7, 61, 2>
PositionSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PositionSnapshot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::positions::v1::PositionSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
    {::_pbi::TcParser::FastMtS1,
     {66, 7, 6, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.meta_)}},
    // string account_id = 1 [json_name = "accountId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.account_id_)}},
    // .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.security_)}},
    // .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.quantity_)}},
    // .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 2, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.avg_price_)}},
    // .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 3, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.unrealized_pnl_)}},
    // .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 4, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.realized_pnl_)}},
    // .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
    {::_pbi::TcParser::FastMtS1,
     {58, 6, 5, PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.as_of_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account_id = 1 [json_name = "accountId"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.account_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.security_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.quantity_), _Internal::kHasBitsOffset + 2, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.avg_price_), _Internal::kHasBitsOffset + 3, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.unrealized_pnl_), _Internal::kHasBitsOffset + 4, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.realized_pnl_), _Internal::kHasBitsOffset + 5, 4, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.as_of_), _Internal::kHasBitsOffset + 6, 5, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
    {PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.meta_), _Internal::kHasBitsOffset + 7, 6, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::common::v1::SecurityId>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Money>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Money>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Meta>()},
  }},
  {{
    "\42\12\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "ampy.positions.v1.PositionSnapshot"
    "account_id"
  }},
};
PROTOBUF_NOINLINE void PositionSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.positions.v1.PositionSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.security_ != nullptr);
      _impl_.security_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.quantity_ != nullptr);
      _impl_.quantity_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.avg_price_ != nullptr);
      _impl_.avg_price_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.unrealized_pnl_ != nullptr);
      _impl_.unrealized_pnl_->Clear();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(_impl_.realized_pnl_ != nullptr);
      _impl_.realized_pnl_->Clear();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(_impl_.as_of_ != nullptr);
      _impl_.as_of_->Clear();
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PositionSnapshot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PositionSnapshot& this_ = static_cast<const PositionSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PositionSnapshot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PositionSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.positions.v1.PositionSnapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account_id = 1 [json_name = "accountId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.positions.v1.PositionSnapshot.account_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.security_, this_._impl_.security_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.quantity_, this_._impl_.quantity_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.avg_price_, this_._impl_.avg_price_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.unrealized_pnl_, this_._impl_.unrealized_pnl_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.realized_pnl_, this_._impl_.realized_pnl_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.as_of_, this_._impl_.as_of_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
  if ((cached_has_bits & 0x00000080U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.positions.v1.PositionSnapshot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PositionSnapshot::ByteSizeLong(const MessageLite& base) {
  const PositionSnapshot& this_ = static_cast<const PositionSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PositionSnapshot::ByteSizeLong() const {
  const PositionSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.positions.v1.PositionSnapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string account_id = 1 [json_name = "accountId"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // .ampy.common.v1.SecurityId security = 2 [json_name = "security"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.security_);
    }
    // .ampy.common.v1.Decimal quantity = 3 [json_name = "quantity"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.quantity_);
    }
    // .ampy.common.v1.Decimal avg_price = 4 [json_name = "avgPrice"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.avg_price_);
    }
    // .ampy.common.v1.Money unrealized_pnl = 5 [json_name = "unrealizedPnl"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unrealized_pnl_);
    }
    // .ampy.common.v1.Money realized_pnl = 6 [json_name = "realizedPnl"];
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.realized_pnl_);
    }
    // .google.protobuf.Timestamp as_of = 7 [json_name = "asOf"];
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.as_of_);
    }
    // .ampy.common.v1.Meta meta = 8 [json_name = "meta"];
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PositionSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionSnapshot*>(&to_msg);
  auto& from = static_cast<const PositionSnapshot&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.positions.v1.PositionSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.security_ != nullptr);
      if (_this->_impl_.security_ == nullptr) {
        _this->_impl_.security_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_);
      } else {
        _this->_impl_.security_->MergeFrom(*from._impl_.security_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.quantity_ != nullptr);
      if (_this->_impl_.quantity_ == nullptr) {
        _this->_impl_.quantity_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.quantity_);
      } else {
        _this->_impl_.quantity_->MergeFrom(*from._impl_.quantity_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.avg_price_ != nullptr);
      if (_this->_impl_.avg_price_ == nullptr) {
        _this->_impl_.avg_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.avg_price_);
      } else {
        _this->_impl_.avg_price_->MergeFrom(*from._impl_.avg_price_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.unrealized_pnl_ != nullptr);
      if (_this->_impl_.unrealized_pnl_ == nullptr) {
        _this->_impl_.unrealized_pnl_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.unrealized_pnl_);
      } else {
        _this->_impl_.unrealized_pnl_->MergeFrom(*from._impl_.unrealized_pnl_);
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      ABSL_DCHECK(from._impl_.realized_pnl_ != nullptr);
      if (_this->_impl_.realized_pnl_ == nullptr) {
        _this->_impl_.realized_pnl_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.realized_pnl_);
      } else {
        _this->_impl_.realized_pnl_->MergeFrom(*from._impl_.realized_pnl_);
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      ABSL_DCHECK(from._impl_.as_of_ != nullptr);
      if (_this->_impl_.as_of_ == nullptr) {
        _this->_impl_.as_of_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_);
      } else {
        _this->_impl_.as_of_->MergeFrom(*from._impl_.as_of_);
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      ABSL_DCHECK(from._impl_.meta_ != nullptr);
      if (_this->_impl_.meta_ == nullptr) {
        _this->_impl_.meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_);
      } else {
        _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionSnapshot::CopyFrom(const PositionSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.positions.v1.PositionSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionSnapshot::InternalSwap(PositionSnapshot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.meta_)
      + sizeof(PositionSnapshot::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(PositionSnapshot, _impl_.security_)>(
          reinterpret_cast<char*>(&_impl_.security_),
          reinterpret_cast<char*>(&other->_impl_.security_));
}

::google::protobuf::Metadata PositionSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionBatch::_Internal {
 public:
};

PositionBatch::PositionBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.positions.v1.PositionBatch)
}
PROTOBUF_NDEBUG_INLINE PositionBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::positions::v1::PositionBatch& from_msg)
      : positions_{visibility, arena, from.positions_},
        _cached_size_{0} {}

PositionBatch::PositionBatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PositionBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PositionBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.positions.v1.PositionBatch)
}
PROTOBUF_NDEBUG_INLINE PositionBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : positions_{visibility, arena},
        _cached_size_{0} {}

inline void PositionBatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PositionBatch::~PositionBatch() {
  // @@protoc_insertion_point(destructor:ampy.positions.v1.PositionBatch)
  SharedDtor(*this);
}
inline void PositionBatch::SharedDtor(MessageLite& self) {
  PositionBatch& this_ = static_cast<PositionBatch&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PositionBatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PositionBatch(arena);
}
constexpr auto PositionBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PositionBatch, _impl_.positions_) +
          decltype(PositionBatch::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(PositionBatch), alignof(PositionBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PositionBatch::PlacementNew_,
                                 sizeof(PositionBatch),
                                 alignof(PositionBatch));
  }
}
constexpr auto PositionBatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PositionBatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PositionBatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PositionBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PositionBatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PositionBatch>(), &PositionBatch::ByteSizeLong,
              &PositionBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PositionBatch, _impl_._cached_size_),
          false,
      },
      &PositionBatch::kDescriptorMethods,
      &descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PositionBatch_class_data_ =
        PositionBatch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PositionBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PositionBatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PositionBatch_class_data_.tc_table);
  return PositionBatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
PositionBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PositionBatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::positions::v1::PositionBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionBatch, _impl_.positions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
    {PROTOBUF_FIELD_OFFSET(PositionBatch, _impl_.positions_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::positions::v1::PositionSnapshot>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PositionBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.positions.v1.PositionBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.positions_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PositionBatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PositionBatch& this_ = static_cast<const PositionBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PositionBatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PositionBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.positions.v1.PositionBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_positions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_positions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.positions.v1.PositionBatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PositionBatch::ByteSizeLong(const MessageLite& base) {
  const PositionBatch& this_ = static_cast<const PositionBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PositionBatch::ByteSizeLong() const {
  const PositionBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.positions.v1.PositionBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.positions.v1.PositionSnapshot positions = 1 [json_name = "positions"];
    {
      total_size += 1UL * this_._internal_positions_size();
      for (const auto& msg : this_._internal_positions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PositionBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionBatch*>(&to_msg);
  auto& from = static_cast<const PositionBatch&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.positions.v1.PositionBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionBatch::CopyFrom(const PositionBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.positions.v1.PositionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionBatch::InternalSwap(PositionBatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
}

::google::protobuf::Metadata PositionBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace positions
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2fpositions_2fv1_2fpositions_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
