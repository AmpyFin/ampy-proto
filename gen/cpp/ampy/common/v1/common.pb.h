// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/common/v1/common.proto
// Protobuf C++ Version: 6.32.0

#ifndef ampy_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh
#define ampy_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ampy_2fcommon_2fv1_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto;
}  // extern "C"
namespace ampy {
namespace common {
namespace v1 {
class Decimal;
struct DecimalDefaultTypeInternal;
extern DecimalDefaultTypeInternal _Decimal_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Decimal_class_data_;
class Meta;
struct MetaDefaultTypeInternal;
extern MetaDefaultTypeInternal _Meta_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Meta_class_data_;
class Money;
struct MoneyDefaultTypeInternal;
extern MoneyDefaultTypeInternal _Money_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Money_class_data_;
class SecurityId;
struct SecurityIdDefaultTypeInternal;
extern SecurityIdDefaultTypeInternal _SecurityId_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SecurityId_class_data_;
}  // namespace v1
}  // namespace common
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ampy {
namespace common {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SecurityId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.common.v1.SecurityId) */ {
 public:
  inline SecurityId() : SecurityId(nullptr) {}
  ~SecurityId() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SecurityId* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SecurityId));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SecurityId(::google::protobuf::internal::ConstantInitialized);

  inline SecurityId(const SecurityId& from) : SecurityId(nullptr, from) {}
  inline SecurityId(SecurityId&& from) noexcept
      : SecurityId(nullptr, ::std::move(from)) {}
  inline SecurityId& operator=(const SecurityId& from) {
    CopyFrom(from);
    return *this;
  }
  inline SecurityId& operator=(SecurityId&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SecurityId& default_instance() {
    return *reinterpret_cast<const SecurityId*>(
        &_SecurityId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SecurityId& a, SecurityId& b) { a.Swap(&b); }
  inline void Swap(SecurityId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SecurityId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SecurityId* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SecurityId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SecurityId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SecurityId& from) { SecurityId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SecurityId* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.common.v1.SecurityId"; }

 protected:
  explicit SecurityId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SecurityId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SecurityId& from);
  SecurityId(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SecurityId&& from) noexcept
      : SecurityId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSymbolFieldNumber = 1,
    kMicFieldNumber = 2,
    kFigiFieldNumber = 3,
    kIsinFieldNumber = 4,
  };
  // string symbol = 1 [json_name = "symbol"];
  void clear_symbol() ;
  const ::std::string& symbol() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_symbol(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_symbol();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_symbol();
  void set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_symbol() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_symbol();

  public:
  // string mic = 2 [json_name = "mic"];
  void clear_mic() ;
  const ::std::string& mic() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_mic(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_mic();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_mic();
  void set_allocated_mic(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_mic() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_mic(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_mic();

  public:
  // string figi = 3 [json_name = "figi"];
  void clear_figi() ;
  const ::std::string& figi() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_figi(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_figi();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_figi();
  void set_allocated_figi(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_figi() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_figi(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_figi();

  public:
  // string isin = 4 [json_name = "isin"];
  void clear_isin() ;
  const ::std::string& isin() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_isin(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_isin();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_isin();
  void set_allocated_isin(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_isin() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_isin(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_isin();

  public:
  // @@protoc_insertion_point(class_scope:ampy.common.v1.SecurityId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SecurityId& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::google::protobuf::internal::ArenaStringPtr mic_;
    ::google::protobuf::internal::ArenaStringPtr figi_;
    ::google::protobuf::internal::ArenaStringPtr isin_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SecurityId_class_data_;
// -------------------------------------------------------------------

class Meta final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.common.v1.Meta) */ {
 public:
  inline Meta() : Meta(nullptr) {}
  ~Meta() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Meta* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Meta));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Meta(::google::protobuf::internal::ConstantInitialized);

  inline Meta(const Meta& from) : Meta(nullptr, from) {}
  inline Meta(Meta&& from) noexcept
      : Meta(nullptr, ::std::move(from)) {}
  inline Meta& operator=(const Meta& from) {
    CopyFrom(from);
    return *this;
  }
  inline Meta& operator=(Meta&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Meta& default_instance() {
    return *reinterpret_cast<const Meta*>(
        &_Meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Meta& a, Meta& b) { a.Swap(&b); }
  inline void Swap(Meta* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Meta* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Meta* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Meta>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Meta& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Meta& from) { Meta::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Meta* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.common.v1.Meta"; }

 protected:
  explicit Meta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Meta(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Meta& from);
  Meta(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Meta&& from) noexcept
      : Meta(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRunIdFieldNumber = 1,
    kSourceFieldNumber = 2,
    kProducerFieldNumber = 3,
    kSchemaVersionFieldNumber = 4,
    kChecksumFieldNumber = 5,
  };
  // string run_id = 1 [json_name = "runId"];
  void clear_run_id() ;
  const ::std::string& run_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_run_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_run_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_run_id();
  void set_allocated_run_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_run_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_run_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_run_id();

  public:
  // string source = 2 [json_name = "source"];
  void clear_source() ;
  const ::std::string& source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source();
  void set_allocated_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source();

  public:
  // string producer = 3 [json_name = "producer"];
  void clear_producer() ;
  const ::std::string& producer() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_producer(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_producer();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_producer();
  void set_allocated_producer(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_producer() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_producer(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_producer();

  public:
  // string schema_version = 4 [json_name = "schemaVersion"];
  void clear_schema_version() ;
  const ::std::string& schema_version() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_schema_version(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_schema_version();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_schema_version();
  void set_allocated_schema_version(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_schema_version() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_schema_version(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_schema_version();

  public:
  // string checksum = 5 [json_name = "checksum"];
  void clear_checksum() ;
  const ::std::string& checksum() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_checksum();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_checksum();
  void set_allocated_checksum(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_checksum() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_checksum();

  public:
  // @@protoc_insertion_point(class_scope:ampy.common.v1.Meta)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 70,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Meta& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr run_id_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::google::protobuf::internal::ArenaStringPtr producer_;
    ::google::protobuf::internal::ArenaStringPtr schema_version_;
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Meta_class_data_;
// -------------------------------------------------------------------

class Decimal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.common.v1.Decimal) */ {
 public:
  inline Decimal() : Decimal(nullptr) {}
  ~Decimal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Decimal* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Decimal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Decimal(::google::protobuf::internal::ConstantInitialized);

  inline Decimal(const Decimal& from) : Decimal(nullptr, from) {}
  inline Decimal(Decimal&& from) noexcept
      : Decimal(nullptr, ::std::move(from)) {}
  inline Decimal& operator=(const Decimal& from) {
    CopyFrom(from);
    return *this;
  }
  inline Decimal& operator=(Decimal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Decimal& default_instance() {
    return *reinterpret_cast<const Decimal*>(
        &_Decimal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Decimal& a, Decimal& b) { a.Swap(&b); }
  inline void Swap(Decimal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Decimal* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Decimal* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Decimal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Decimal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Decimal& from) { Decimal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Decimal* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.common.v1.Decimal"; }

 protected:
  explicit Decimal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Decimal(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Decimal& from);
  Decimal(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Decimal&& from) noexcept
      : Decimal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScaledFieldNumber = 1,
    kScaleFieldNumber = 2,
  };
  // sint64 scaled = 1 [json_name = "scaled"];
  void clear_scaled() ;
  ::int64_t scaled() const;
  void set_scaled(::int64_t value);

  private:
  ::int64_t _internal_scaled() const;
  void _internal_set_scaled(::int64_t value);

  public:
  // int32 scale = 2 [json_name = "scale"];
  void clear_scale() ;
  ::int32_t scale() const;
  void set_scale(::int32_t value);

  private:
  ::int32_t _internal_scale() const;
  void _internal_set_scale(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ampy.common.v1.Decimal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Decimal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t scaled_;
    ::int32_t scale_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Decimal_class_data_;
// -------------------------------------------------------------------

class Money final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ampy.common.v1.Money) */ {
 public:
  inline Money() : Money(nullptr) {}
  ~Money() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Money* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Money));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Money(::google::protobuf::internal::ConstantInitialized);

  inline Money(const Money& from) : Money(nullptr, from) {}
  inline Money(Money&& from) noexcept
      : Money(nullptr, ::std::move(from)) {}
  inline Money& operator=(const Money& from) {
    CopyFrom(from);
    return *this;
  }
  inline Money& operator=(Money&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Money& default_instance() {
    return *reinterpret_cast<const Money*>(
        &_Money_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Money& a, Money& b) { a.Swap(&b); }
  inline void Swap(Money* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Money* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Money* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Money>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Money& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Money& from) { Money::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Money* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ampy.common.v1.Money"; }

 protected:
  explicit Money(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Money(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Money& from);
  Money(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Money&& from) noexcept
      : Money(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyCodeFieldNumber = 2,
    kAmountFieldNumber = 1,
  };
  // string currency_code = 2 [json_name = "currencyCode"];
  void clear_currency_code() ;
  const ::std::string& currency_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_currency_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_currency_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_currency_code();
  void set_allocated_currency_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_currency_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_currency_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_currency_code();

  public:
  // .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
  bool has_amount() const;
  void clear_amount() ;
  const ::ampy::common::v1::Decimal& amount() const;
  [[nodiscard]] ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE release_amount();
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL mutable_amount();
  void set_allocated_amount(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_amount(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value);
  ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_amount();

  private:
  const ::ampy::common::v1::Decimal& _internal_amount() const;
  ::ampy::common::v1::Decimal* PROTOBUF_NONNULL _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:ampy.common.v1.Money)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 42,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Money& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr currency_code_;
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ampy_2fcommon_2fv1_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Money_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Decimal

// sint64 scaled = 1 [json_name = "scaled"];
inline void Decimal::clear_scaled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scaled_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int64_t Decimal::scaled() const {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Decimal.scaled)
  return _internal_scaled();
}
inline void Decimal::set_scaled(::int64_t value) {
  _internal_set_scaled(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:ampy.common.v1.Decimal.scaled)
}
inline ::int64_t Decimal::_internal_scaled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scaled_;
}
inline void Decimal::_internal_set_scaled(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scaled_ = value;
}

// int32 scale = 2 [json_name = "scale"];
inline void Decimal::clear_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t Decimal::scale() const {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Decimal.scale)
  return _internal_scale();
}
inline void Decimal::set_scale(::int32_t value) {
  _internal_set_scale(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:ampy.common.v1.Decimal.scale)
}
inline ::int32_t Decimal::_internal_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scale_;
}
inline void Decimal::_internal_set_scale(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_ = value;
}

// -------------------------------------------------------------------

// Money

// .ampy.common.v1.Decimal amount = 1 [json_name = "amount"];
inline bool Money::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline void Money::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ != nullptr) _impl_.amount_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::ampy::common::v1::Decimal& Money::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ampy::common::v1::Decimal* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::ampy::common::v1::Decimal&>(::ampy::common::v1::_Decimal_default_instance_);
}
inline const ::ampy::common::v1::Decimal& Money::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Money.amount)
  return _internal_amount();
}
inline void Money::unsafe_arena_set_allocated_amount(
    ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ampy.common.v1.Money.amount)
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Money::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::Decimal* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NULLABLE Money::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Money.amount)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::ampy::common::v1::Decimal* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Money::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ampy::common::v1::Decimal>(GetArena());
    _impl_.amount_ = reinterpret_cast<::ampy::common::v1::Decimal*>(p);
  }
  return _impl_.amount_;
}
inline ::ampy::common::v1::Decimal* PROTOBUF_NONNULL Money::mutable_amount()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::ampy::common::v1::Decimal* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Money.amount)
  return _msg;
}
inline void Money::set_allocated_amount(::ampy::common::v1::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.amount_ = reinterpret_cast<::ampy::common::v1::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Money.amount)
}

// string currency_code = 2 [json_name = "currencyCode"];
inline void Money::clear_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currency_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Money::currency_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Money.currency_code)
  return _internal_currency_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Money::set_currency_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.currency_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Money.currency_code)
}
inline ::std::string* PROTOBUF_NONNULL Money::mutable_currency_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_currency_code();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Money.currency_code)
  return _s;
}
inline const ::std::string& Money::_internal_currency_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currency_code_.Get();
}
inline void Money::_internal_set_currency_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.currency_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Money::_internal_mutable_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.currency_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Money::release_currency_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Money.currency_code)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.currency_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.currency_code_.Set("", GetArena());
  }
  return released;
}
inline void Money::set_allocated_currency_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.currency_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.currency_code_.IsDefault()) {
    _impl_.currency_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Money.currency_code)
}

// -------------------------------------------------------------------

// SecurityId

// string symbol = 1 [json_name = "symbol"];
inline void SecurityId::clear_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& SecurityId::symbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.SecurityId.symbol)
  return _internal_symbol();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SecurityId::set_symbol(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.symbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.SecurityId.symbol)
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::mutable_symbol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.SecurityId.symbol)
  return _s;
}
inline const ::std::string& SecurityId::_internal_symbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_.Get();
}
inline void SecurityId::_internal_set_symbol(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.symbol_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::_internal_mutable_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.symbol_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SecurityId::release_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.SecurityId.symbol)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.symbol_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.symbol_.Set("", GetArena());
  }
  return released;
}
inline void SecurityId::set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.symbol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.symbol_.IsDefault()) {
    _impl_.symbol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.SecurityId.symbol)
}

// string mic = 2 [json_name = "mic"];
inline void SecurityId::clear_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& SecurityId::mic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.SecurityId.mic)
  return _internal_mic();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SecurityId::set_mic(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.mic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.SecurityId.mic)
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::mutable_mic()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_mic();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.SecurityId.mic)
  return _s;
}
inline const ::std::string& SecurityId::_internal_mic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mic_.Get();
}
inline void SecurityId::_internal_set_mic(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.mic_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::_internal_mutable_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.mic_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SecurityId::release_mic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.SecurityId.mic)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.mic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mic_.Set("", GetArena());
  }
  return released;
}
inline void SecurityId::set_allocated_mic(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.mic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mic_.IsDefault()) {
    _impl_.mic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.SecurityId.mic)
}

// string figi = 3 [json_name = "figi"];
inline void SecurityId::clear_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.figi_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& SecurityId::figi() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.SecurityId.figi)
  return _internal_figi();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SecurityId::set_figi(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.figi_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.SecurityId.figi)
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::mutable_figi()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_figi();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.SecurityId.figi)
  return _s;
}
inline const ::std::string& SecurityId::_internal_figi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.figi_.Get();
}
inline void SecurityId::_internal_set_figi(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.figi_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::_internal_mutable_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.figi_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SecurityId::release_figi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.SecurityId.figi)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.figi_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.figi_.Set("", GetArena());
  }
  return released;
}
inline void SecurityId::set_allocated_figi(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.figi_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.figi_.IsDefault()) {
    _impl_.figi_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.SecurityId.figi)
}

// string isin = 4 [json_name = "isin"];
inline void SecurityId::clear_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isin_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& SecurityId::isin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.SecurityId.isin)
  return _internal_isin();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SecurityId::set_isin(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.isin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.SecurityId.isin)
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::mutable_isin()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_isin();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.SecurityId.isin)
  return _s;
}
inline const ::std::string& SecurityId::_internal_isin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isin_.Get();
}
inline void SecurityId::_internal_set_isin(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.isin_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SecurityId::_internal_mutable_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.isin_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SecurityId::release_isin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.SecurityId.isin)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.isin_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.isin_.Set("", GetArena());
  }
  return released;
}
inline void SecurityId::set_allocated_isin(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.isin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.isin_.IsDefault()) {
    _impl_.isin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.SecurityId.isin)
}

// -------------------------------------------------------------------

// Meta

// string run_id = 1 [json_name = "runId"];
inline void Meta::clear_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& Meta::run_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Meta.run_id)
  return _internal_run_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Meta::set_run_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.run_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Meta.run_id)
}
inline ::std::string* PROTOBUF_NONNULL Meta::mutable_run_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_run_id();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Meta.run_id)
  return _s;
}
inline const ::std::string& Meta::_internal_run_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.run_id_.Get();
}
inline void Meta::_internal_set_run_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.run_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Meta::_internal_mutable_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.run_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Meta::release_run_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Meta.run_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.run_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.run_id_.Set("", GetArena());
  }
  return released;
}
inline void Meta::set_allocated_run_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.run_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.run_id_.IsDefault()) {
    _impl_.run_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Meta.run_id)
}

// string source = 2 [json_name = "source"];
inline void Meta::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& Meta::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Meta.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Meta::set_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Meta.source)
}
inline ::std::string* PROTOBUF_NONNULL Meta::mutable_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Meta.source)
  return _s;
}
inline const ::std::string& Meta::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void Meta::_internal_set_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Meta::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Meta::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Meta.source)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void Meta::set_allocated_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Meta.source)
}

// string producer = 3 [json_name = "producer"];
inline void Meta::clear_producer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.producer_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& Meta::producer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Meta.producer)
  return _internal_producer();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Meta::set_producer(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.producer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Meta.producer)
}
inline ::std::string* PROTOBUF_NONNULL Meta::mutable_producer()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_producer();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Meta.producer)
  return _s;
}
inline const ::std::string& Meta::_internal_producer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.producer_.Get();
}
inline void Meta::_internal_set_producer(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.producer_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Meta::_internal_mutable_producer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.producer_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Meta::release_producer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Meta.producer)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.producer_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.producer_.Set("", GetArena());
  }
  return released;
}
inline void Meta::set_allocated_producer(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.producer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.producer_.IsDefault()) {
    _impl_.producer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Meta.producer)
}

// string schema_version = 4 [json_name = "schemaVersion"];
inline void Meta::clear_schema_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_version_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& Meta::schema_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Meta.schema_version)
  return _internal_schema_version();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Meta::set_schema_version(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.schema_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Meta.schema_version)
}
inline ::std::string* PROTOBUF_NONNULL Meta::mutable_schema_version()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_schema_version();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Meta.schema_version)
  return _s;
}
inline const ::std::string& Meta::_internal_schema_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_version_.Get();
}
inline void Meta::_internal_set_schema_version(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.schema_version_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Meta::_internal_mutable_schema_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.schema_version_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Meta::release_schema_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Meta.schema_version)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.schema_version_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.schema_version_.Set("", GetArena());
  }
  return released;
}
inline void Meta::set_allocated_schema_version(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.schema_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.schema_version_.IsDefault()) {
    _impl_.schema_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Meta.schema_version)
}

// string checksum = 5 [json_name = "checksum"];
inline void Meta::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& Meta::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ampy.common.v1.Meta.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Meta::set_checksum(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ampy.common.v1.Meta.checksum)
}
inline ::std::string* PROTOBUF_NONNULL Meta::mutable_checksum()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:ampy.common.v1.Meta.checksum)
  return _s;
}
inline const ::std::string& Meta::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void Meta::_internal_set_checksum(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.checksum_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Meta::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.checksum_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Meta::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ampy.common.v1.Meta.checksum)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.checksum_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.checksum_.Set("", GetArena());
  }
  return released;
}
inline void Meta::set_allocated_checksum(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checksum_.IsDefault()) {
    _impl_.checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ampy.common.v1.Meta.checksum)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace ampy


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ampy_2fcommon_2fv1_2fcommon_2eproto_2epb_2eh
