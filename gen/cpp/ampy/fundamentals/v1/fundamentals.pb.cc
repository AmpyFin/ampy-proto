// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/fundamentals/v1/fundamentals.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/fundamentals/v1/fundamentals.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace fundamentals {
namespace v1 {

inline constexpr LineItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{nullptr},
        period_start_{nullptr},
        period_end_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR LineItem::LineItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LineItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LineItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LineItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LineItemDefaultTypeInternal() {}
  union {
    LineItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LineItemDefaultTypeInternal _LineItem_default_instance_;

inline constexpr FundamentalsSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        lines_{},
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_{nullptr},
        as_of_{nullptr},
        meta_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FundamentalsSnapshot::FundamentalsSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FundamentalsSnapshot_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FundamentalsSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundamentalsSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundamentalsSnapshotDefaultTypeInternal() {}
  union {
    FundamentalsSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundamentalsSnapshotDefaultTypeInternal _FundamentalsSnapshot_default_instance_;

inline constexpr FundamentalsBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshots_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FundamentalsBatch::FundamentalsBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FundamentalsBatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FundamentalsBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FundamentalsBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FundamentalsBatchDefaultTypeInternal() {}
  union {
    FundamentalsBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FundamentalsBatchDefaultTypeInternal _FundamentalsBatch_default_instance_;
}  // namespace v1
}  // namespace fundamentals
}  // namespace ampy
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_.currency_code_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_.period_start_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::LineItem, _impl_.period_end_),
        0,
        2,
        1,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_.security_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_.lines_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_.as_of_),
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsSnapshot, _impl_.meta_),
        1,
        ~0u,
        0,
        2,
        3,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::fundamentals::v1::FundamentalsBatch, _impl_.snapshots_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::fundamentals::v1::LineItem)},
        {13, sizeof(::ampy::fundamentals::v1::FundamentalsSnapshot)},
        {26, sizeof(::ampy::fundamentals::v1::FundamentalsBatch)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::fundamentals::v1::_LineItem_default_instance_._instance,
    &::ampy::fundamentals::v1::_FundamentalsSnapshot_default_instance_._instance,
    &::ampy::fundamentals::v1::_FundamentalsBatch_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\'ampy/fundamentals/v1/fundamentals.prot"
    "o\022\024ampy.fundamentals.v1\032\037google/protobuf"
    "/timestamp.proto\032\033ampy/common/v1/common."
    "proto\"\352\001\n\010LineItem\022\020\n\003key\030\001 \001(\tR\003key\022-\n\005"
    "value\030\002 \001(\0132\027.ampy.common.v1.DecimalR\005va"
    "lue\022#\n\rcurrency_code\030\003 \001(\tR\014currencyCode"
    "\022=\n\014period_start\030\004 \001(\0132\032.google.protobuf"
    ".TimestampR\013periodStart\0229\n\nperiod_end\030\005 "
    "\001(\0132\032.google.protobuf.TimestampR\tperiodE"
    "nd\"\367\001\n\024FundamentalsSnapshot\0226\n\010security\030"
    "\001 \001(\0132\032.ampy.common.v1.SecurityIdR\010secur"
    "ity\0224\n\005lines\030\002 \003(\0132\036.ampy.fundamentals.v"
    "1.LineItemR\005lines\022\026\n\006source\030\003 \001(\tR\006sourc"
    "e\022/\n\005as_of\030\004 \001(\0132\032.google.protobuf.Times"
    "tampR\004asOf\022(\n\004meta\030\005 \001(\0132\024.ampy.common.v"
    "1.MetaR\004meta\"]\n\021FundamentalsBatch\022H\n\tsna"
    "pshots\030\001 \003(\0132*.ampy.fundamentals.v1.Fund"
    "amentalsSnapshotR\tsnapshotsB\355\001\n\030com.ampy"
    ".fundamentals.v1B\021FundamentalsProtoP\001ZLg"
    "ithub.com/yeonholee50/ampy-proto/gen/go/"
    "ampy/fundamentals/v1;fundamentalsv1\242\002\003AF"
    "X\252\002\024Ampy.Fundamentals.V1\312\002\024Ampy\\Fundamen"
    "tals\\V1\342\002 Ampy\\Fundamentals\\V1\\GPBMetada"
    "ta\352\002\026Ampy::Fundamentals::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto_deps[2] = {
        &::descriptor_table_ampy_2fcommon_2fv1_2fcommon_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto = {
    false,
    false,
    955,
    descriptor_table_protodef_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
    "ampy/fundamentals/v1/fundamentals.proto",
    &descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto_once,
    descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto_deps,
    2,
    3,
    schemas,
    file_default_instances,
    TableStruct_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto::offsets,
    file_level_enum_descriptors_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
    file_level_service_descriptors_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
};
namespace ampy {
namespace fundamentals {
namespace v1 {
// ===================================================================

class LineItem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LineItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LineItem, _impl_._has_bits_);
};

void LineItem::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void LineItem::clear_period_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.period_start_ != nullptr) _impl_.period_start_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
void LineItem::clear_period_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.period_end_ != nullptr) _impl_.period_end_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
LineItem::LineItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.fundamentals.v1.LineItem)
}
PROTOBUF_NDEBUG_INLINE LineItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::fundamentals::v1::LineItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        currency_code_(arena, from.currency_code_) {}

LineItem::LineItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LineItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LineItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LineItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.value_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_)
                : nullptr;
  _impl_.period_start_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.period_start_)
                : nullptr;
  _impl_.period_end_ = ((cached_has_bits & 0x00000010U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.period_end_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ampy.fundamentals.v1.LineItem)
}
PROTOBUF_NDEBUG_INLINE LineItem::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        currency_code_(arena) {}

inline void LineItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, period_end_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::period_end_));
}
LineItem::~LineItem() {
  // @@protoc_insertion_point(destructor:ampy.fundamentals.v1.LineItem)
  SharedDtor(*this);
}
inline void LineItem::SharedDtor(MessageLite& self) {
  LineItem& this_ = static_cast<LineItem&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.currency_code_.Destroy();
  delete this_._impl_.value_;
  delete this_._impl_.period_start_;
  delete this_._impl_.period_end_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LineItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LineItem(arena);
}
constexpr auto LineItem::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LineItem),
                                            alignof(LineItem));
}
constexpr auto LineItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LineItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LineItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LineItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LineItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LineItem>(), &LineItem::ByteSizeLong,
              &LineItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LineItem, _impl_._cached_size_),
          false,
      },
      &LineItem::kDescriptorMethods,
      &descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LineItem_class_data_ =
        LineItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LineItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LineItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LineItem_class_data_.tc_table);
  return LineItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 54, 2>
LineItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LineItem, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    LineItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::fundamentals::v1::LineItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LineItem, _impl_.key_)}},
    // .ampy.common.v1.Decimal value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(LineItem, _impl_.value_)}},
    // string currency_code = 3 [json_name = "currencyCode"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(LineItem, _impl_.currency_code_)}},
    // .google.protobuf.Timestamp period_start = 4 [json_name = "periodStart"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 1, PROTOBUF_FIELD_OFFSET(LineItem, _impl_.period_start_)}},
    // .google.protobuf.Timestamp period_end = 5 [json_name = "periodEnd"];
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 2, PROTOBUF_FIELD_OFFSET(LineItem, _impl_.period_end_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(LineItem, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ampy.common.v1.Decimal value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(LineItem, _impl_.value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string currency_code = 3 [json_name = "currencyCode"];
    {PROTOBUF_FIELD_OFFSET(LineItem, _impl_.currency_code_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp period_start = 4 [json_name = "periodStart"];
    {PROTOBUF_FIELD_OFFSET(LineItem, _impl_.period_start_), _Internal::kHasBitsOffset + 3, 1, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp period_end = 5 [json_name = "periodEnd"];
    {PROTOBUF_FIELD_OFFSET(LineItem, _impl_.period_end_), _Internal::kHasBitsOffset + 4, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Decimal>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\35\3\0\15\0\0\0\0"
    "ampy.fundamentals.v1.LineItem"
    "key"
    "currency_code"
  }},
};
PROTOBUF_NOINLINE void LineItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.fundamentals.v1.LineItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.currency_code_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.value_ != nullptr);
      _impl_.value_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.period_start_ != nullptr);
      _impl_.period_start_->Clear();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(_impl_.period_end_ != nullptr);
      _impl_.period_end_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LineItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LineItem& this_ = static_cast<const LineItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LineItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LineItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.fundamentals.v1.LineItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1 [json_name = "key"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.fundamentals.v1.LineItem.key");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ampy.common.v1.Decimal value = 2 [json_name = "value"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.value_, this_._impl_.value_->GetCachedSize(), target,
        stream);
  }

  // string currency_code = 3 [json_name = "currencyCode"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    if (!this_._internal_currency_code().empty()) {
      const ::std::string& _s = this_._internal_currency_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.fundamentals.v1.LineItem.currency_code");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .google.protobuf.Timestamp period_start = 4 [json_name = "periodStart"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.period_start_, this_._impl_.period_start_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp period_end = 5 [json_name = "periodEnd"];
  if ((cached_has_bits & 0x00000010U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.period_end_, this_._impl_.period_end_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.fundamentals.v1.LineItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LineItem::ByteSizeLong(const MessageLite& base) {
  const LineItem& this_ = static_cast<const LineItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LineItem::ByteSizeLong() const {
  const LineItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.fundamentals.v1.LineItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string key = 1 [json_name = "key"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_key());
      }
    }
    // string currency_code = 3 [json_name = "currencyCode"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_currency_code().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency_code());
      }
    }
    // .ampy.common.v1.Decimal value = 2 [json_name = "value"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_);
    }
    // .google.protobuf.Timestamp period_start = 4 [json_name = "periodStart"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.period_start_);
    }
    // .google.protobuf.Timestamp period_end = 5 [json_name = "periodEnd"];
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.period_end_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LineItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LineItem*>(&to_msg);
  auto& from = static_cast<const LineItem&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.fundamentals.v1.LineItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_currency_code().empty()) {
        _this->_internal_set_currency_code(from._internal_currency_code());
      } else {
        if (_this->_impl_.currency_code_.IsDefault()) {
          _this->_internal_set_currency_code("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.value_ != nullptr);
      if (_this->_impl_.value_ == nullptr) {
        _this->_impl_.value_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.value_);
      } else {
        _this->_impl_.value_->MergeFrom(*from._impl_.value_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.period_start_ != nullptr);
      if (_this->_impl_.period_start_ == nullptr) {
        _this->_impl_.period_start_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.period_start_);
      } else {
        _this->_impl_.period_start_->MergeFrom(*from._impl_.period_start_);
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      ABSL_DCHECK(from._impl_.period_end_ != nullptr);
      if (_this->_impl_.period_end_ == nullptr) {
        _this->_impl_.period_end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.period_end_);
      } else {
        _this->_impl_.period_end_->MergeFrom(*from._impl_.period_end_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LineItem::CopyFrom(const LineItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.fundamentals.v1.LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LineItem::InternalSwap(LineItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_code_, &other->_impl_.currency_code_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LineItem, _impl_.period_end_)
      + sizeof(LineItem::_impl_.period_end_)
      - PROTOBUF_FIELD_OFFSET(LineItem, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata LineItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundamentalsSnapshot::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<FundamentalsSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_._has_bits_);
};

void FundamentalsSnapshot::clear_security() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.security_ != nullptr) _impl_.security_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
void FundamentalsSnapshot::clear_as_of() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.as_of_ != nullptr) _impl_.as_of_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
void FundamentalsSnapshot::clear_meta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.meta_ != nullptr) _impl_.meta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
FundamentalsSnapshot::FundamentalsSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FundamentalsSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.fundamentals.v1.FundamentalsSnapshot)
}
PROTOBUF_NDEBUG_INLINE FundamentalsSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::fundamentals::v1::FundamentalsSnapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        lines_{visibility, arena, from.lines_},
        source_(arena, from.source_) {}

FundamentalsSnapshot::FundamentalsSnapshot(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FundamentalsSnapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FundamentalsSnapshot_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FundamentalsSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.security_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_)
                : nullptr;
  _impl_.as_of_ = ((cached_has_bits & 0x00000004U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_)
                : nullptr;
  _impl_.meta_ = ((cached_has_bits & 0x00000008U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ampy.fundamentals.v1.FundamentalsSnapshot)
}
PROTOBUF_NDEBUG_INLINE FundamentalsSnapshot::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        lines_{visibility, arena},
        source_(arena) {}

inline void FundamentalsSnapshot::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, security_),
           0,
           offsetof(Impl_, meta_) -
               offsetof(Impl_, security_) +
               sizeof(Impl_::meta_));
}
FundamentalsSnapshot::~FundamentalsSnapshot() {
  // @@protoc_insertion_point(destructor:ampy.fundamentals.v1.FundamentalsSnapshot)
  SharedDtor(*this);
}
inline void FundamentalsSnapshot::SharedDtor(MessageLite& self) {
  FundamentalsSnapshot& this_ = static_cast<FundamentalsSnapshot&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_.Destroy();
  delete this_._impl_.security_;
  delete this_._impl_.as_of_;
  delete this_._impl_.meta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FundamentalsSnapshot::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FundamentalsSnapshot(arena);
}
constexpr auto FundamentalsSnapshot::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.lines_) +
          decltype(FundamentalsSnapshot::_impl_.lines_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FundamentalsSnapshot), alignof(FundamentalsSnapshot), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FundamentalsSnapshot::PlacementNew_,
                                 sizeof(FundamentalsSnapshot),
                                 alignof(FundamentalsSnapshot));
  }
}
constexpr auto FundamentalsSnapshot::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FundamentalsSnapshot_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FundamentalsSnapshot::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FundamentalsSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FundamentalsSnapshot::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FundamentalsSnapshot>(), &FundamentalsSnapshot::ByteSizeLong,
              &FundamentalsSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_._cached_size_),
          false,
      },
      &FundamentalsSnapshot::kDescriptorMethods,
      &descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FundamentalsSnapshot_class_data_ =
        FundamentalsSnapshot::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FundamentalsSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FundamentalsSnapshot_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FundamentalsSnapshot_class_data_.tc_table);
  return FundamentalsSnapshot_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 56, 2>
FundamentalsSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FundamentalsSnapshot_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::fundamentals::v1::FundamentalsSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.security_)}},
    // repeated .ampy.fundamentals.v1.LineItem lines = 2 [json_name = "lines"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.lines_)}},
    // string source = 3 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.source_)}},
    // .google.protobuf.Timestamp as_of = 4 [json_name = "asOf"];
    {::_pbi::TcParser::FastMtS1,
     {34, 2, 2, PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.as_of_)}},
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    {::_pbi::TcParser::FastMtS1,
     {42, 3, 3, PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.meta_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.security_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ampy.fundamentals.v1.LineItem lines = 2 [json_name = "lines"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.lines_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string source = 3 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.source_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp as_of = 4 [json_name = "asOf"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.as_of_), _Internal::kHasBitsOffset + 2, 2, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.meta_), _Internal::kHasBitsOffset + 3, 3, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::common::v1::SecurityId>()},
      {::_pbi::TcParser::GetTable<::ampy::fundamentals::v1::LineItem>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::ampy::common::v1::Meta>()},
  }},
  {{
    "\51\0\0\6\0\0\0\0"
    "ampy.fundamentals.v1.FundamentalsSnapshot"
    "source"
  }},
};
PROTOBUF_NOINLINE void FundamentalsSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.fundamentals.v1.FundamentalsSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.lines_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.security_ != nullptr);
      _impl_.security_->Clear();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(_impl_.as_of_ != nullptr);
      _impl_.as_of_->Clear();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(_impl_.meta_ != nullptr);
      _impl_.meta_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FundamentalsSnapshot::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FundamentalsSnapshot& this_ = static_cast<const FundamentalsSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FundamentalsSnapshot::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FundamentalsSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.fundamentals.v1.FundamentalsSnapshot)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.security_, this_._impl_.security_->GetCachedSize(), target,
        stream);
  }

  // repeated .ampy.fundamentals.v1.LineItem lines = 2 [json_name = "lines"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_lines_size());
       i < n; i++) {
    const auto& repfield = this_._internal_lines().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string source = 3 [json_name = "source"];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.fundamentals.v1.FundamentalsSnapshot.source");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .google.protobuf.Timestamp as_of = 4 [json_name = "asOf"];
  if ((cached_has_bits & 0x00000004U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.as_of_, this_._impl_.as_of_->GetCachedSize(), target,
        stream);
  }

  // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
  if ((cached_has_bits & 0x00000008U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.fundamentals.v1.FundamentalsSnapshot)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FundamentalsSnapshot::ByteSizeLong(const MessageLite& base) {
  const FundamentalsSnapshot& this_ = static_cast<const FundamentalsSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FundamentalsSnapshot::ByteSizeLong() const {
  const FundamentalsSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.fundamentals.v1.FundamentalsSnapshot)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.fundamentals.v1.LineItem lines = 2 [json_name = "lines"];
    {
      total_size += 1UL * this_._internal_lines_size();
      for (const auto& msg : this_._internal_lines()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string source = 3 [json_name = "source"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // .ampy.common.v1.SecurityId security = 1 [json_name = "security"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.security_);
    }
    // .google.protobuf.Timestamp as_of = 4 [json_name = "asOf"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.as_of_);
    }
    // .ampy.common.v1.Meta meta = 5 [json_name = "meta"];
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FundamentalsSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundamentalsSnapshot*>(&to_msg);
  auto& from = static_cast<const FundamentalsSnapshot&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.fundamentals.v1.FundamentalsSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(
      from._internal_lines());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.security_ != nullptr);
      if (_this->_impl_.security_ == nullptr) {
        _this->_impl_.security_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.security_);
      } else {
        _this->_impl_.security_->MergeFrom(*from._impl_.security_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      ABSL_DCHECK(from._impl_.as_of_ != nullptr);
      if (_this->_impl_.as_of_ == nullptr) {
        _this->_impl_.as_of_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.as_of_);
      } else {
        _this->_impl_.as_of_->MergeFrom(*from._impl_.as_of_);
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      ABSL_DCHECK(from._impl_.meta_ != nullptr);
      if (_this->_impl_.meta_ == nullptr) {
        _this->_impl_.meta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.meta_);
      } else {
        _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundamentalsSnapshot::CopyFrom(const FundamentalsSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.fundamentals.v1.FundamentalsSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundamentalsSnapshot::InternalSwap(FundamentalsSnapshot* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.lines_.InternalSwap(&other->_impl_.lines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.meta_)
      + sizeof(FundamentalsSnapshot::_impl_.meta_)
      - PROTOBUF_FIELD_OFFSET(FundamentalsSnapshot, _impl_.security_)>(
          reinterpret_cast<char*>(&_impl_.security_),
          reinterpret_cast<char*>(&other->_impl_.security_));
}

::google::protobuf::Metadata FundamentalsSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FundamentalsBatch::_Internal {
 public:
};

FundamentalsBatch::FundamentalsBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FundamentalsBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.fundamentals.v1.FundamentalsBatch)
}
PROTOBUF_NDEBUG_INLINE FundamentalsBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::fundamentals::v1::FundamentalsBatch& from_msg)
      : snapshots_{visibility, arena, from.snapshots_},
        _cached_size_{0} {}

FundamentalsBatch::FundamentalsBatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FundamentalsBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FundamentalsBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FundamentalsBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.fundamentals.v1.FundamentalsBatch)
}
PROTOBUF_NDEBUG_INLINE FundamentalsBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : snapshots_{visibility, arena},
        _cached_size_{0} {}

inline void FundamentalsBatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FundamentalsBatch::~FundamentalsBatch() {
  // @@protoc_insertion_point(destructor:ampy.fundamentals.v1.FundamentalsBatch)
  SharedDtor(*this);
}
inline void FundamentalsBatch::SharedDtor(MessageLite& self) {
  FundamentalsBatch& this_ = static_cast<FundamentalsBatch&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL FundamentalsBatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FundamentalsBatch(arena);
}
constexpr auto FundamentalsBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FundamentalsBatch, _impl_.snapshots_) +
          decltype(FundamentalsBatch::_impl_.snapshots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(FundamentalsBatch), alignof(FundamentalsBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FundamentalsBatch::PlacementNew_,
                                 sizeof(FundamentalsBatch),
                                 alignof(FundamentalsBatch));
  }
}
constexpr auto FundamentalsBatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FundamentalsBatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FundamentalsBatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FundamentalsBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FundamentalsBatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FundamentalsBatch>(), &FundamentalsBatch::ByteSizeLong,
              &FundamentalsBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FundamentalsBatch, _impl_._cached_size_),
          false,
      },
      &FundamentalsBatch::kDescriptorMethods,
      &descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FundamentalsBatch_class_data_ =
        FundamentalsBatch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FundamentalsBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FundamentalsBatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FundamentalsBatch_class_data_.tc_table);
  return FundamentalsBatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
FundamentalsBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FundamentalsBatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::fundamentals::v1::FundamentalsBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ampy.fundamentals.v1.FundamentalsSnapshot snapshots = 1 [json_name = "snapshots"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FundamentalsBatch, _impl_.snapshots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ampy.fundamentals.v1.FundamentalsSnapshot snapshots = 1 [json_name = "snapshots"];
    {PROTOBUF_FIELD_OFFSET(FundamentalsBatch, _impl_.snapshots_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::fundamentals::v1::FundamentalsSnapshot>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FundamentalsBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.fundamentals.v1.FundamentalsBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FundamentalsBatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FundamentalsBatch& this_ = static_cast<const FundamentalsBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FundamentalsBatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FundamentalsBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.fundamentals.v1.FundamentalsBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ampy.fundamentals.v1.FundamentalsSnapshot snapshots = 1 [json_name = "snapshots"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_snapshots_size());
       i < n; i++) {
    const auto& repfield = this_._internal_snapshots().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.fundamentals.v1.FundamentalsBatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FundamentalsBatch::ByteSizeLong(const MessageLite& base) {
  const FundamentalsBatch& this_ = static_cast<const FundamentalsBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FundamentalsBatch::ByteSizeLong() const {
  const FundamentalsBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.fundamentals.v1.FundamentalsBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.fundamentals.v1.FundamentalsSnapshot snapshots = 1 [json_name = "snapshots"];
    {
      total_size += 1UL * this_._internal_snapshots_size();
      for (const auto& msg : this_._internal_snapshots()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FundamentalsBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FundamentalsBatch*>(&to_msg);
  auto& from = static_cast<const FundamentalsBatch&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.fundamentals.v1.FundamentalsBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FundamentalsBatch::CopyFrom(const FundamentalsBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.fundamentals.v1.FundamentalsBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FundamentalsBatch::InternalSwap(FundamentalsBatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
}

::google::protobuf::Metadata FundamentalsBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace fundamentals
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2ffundamentals_2fv1_2ffundamentals_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
