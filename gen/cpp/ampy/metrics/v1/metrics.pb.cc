// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ampy/metrics/v1/metrics.proto
// Protobuf C++ Version: 6.32.0

#include "ampy/metrics/v1/metrics.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ampy {
namespace metrics {
namespace v1 {
template <typename>
PROTOBUF_CONSTEXPR Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Metric_LabelsEntry_DoNotUse::MapEntry(Metric_LabelsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Metric_LabelsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Metric_LabelsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Metric_LabelsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Metric_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Metric_LabelsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Metric_LabelsEntry_DoNotUseDefaultTypeInternal _Metric_LabelsEntry_DoNotUse_default_instance_;

inline constexpr Metric::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        labels_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        at_{nullptr},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Metric::Metric(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Metric_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricDefaultTypeInternal() {}
  union {
    Metric _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricDefaultTypeInternal _Metric_default_instance_;

inline constexpr MetricBatch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : metrics_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MetricBatch::MetricBatch(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MetricBatch_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetricBatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricBatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricBatchDefaultTypeInternal() {}
  union {
    MetricBatch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricBatchDefaultTypeInternal _MetricBatch_default_instance_;
}  // namespace v1
}  // namespace metrics
}  // namespace ampy
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ampy_2fmetrics_2fv1_2fmetrics_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ampy_2fmetrics_2fv1_2fmetrics_2eproto = nullptr;
const ::uint32_t
    TableStruct_ampy_2fmetrics_2fv1_2fmetrics_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric_LabelsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric_LabelsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric_LabelsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric, _impl_.labels_),
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::Metric, _impl_.at_),
        0,
        ~0u,
        2,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::ampy::metrics::v1::MetricBatch, _impl_.metrics_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::ampy::metrics::v1::Metric_LabelsEntry_DoNotUse)},
        {7, sizeof(::ampy::metrics::v1::Metric)},
        {18, sizeof(::ampy::metrics::v1::MetricBatch)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::ampy::metrics::v1::_Metric_LabelsEntry_DoNotUse_default_instance_._instance,
    &::ampy::metrics::v1::_Metric_default_instance_._instance,
    &::ampy::metrics::v1::_MetricBatch_default_instance_._instance,
};
const char descriptor_table_protodef_ampy_2fmetrics_2fv1_2fmetrics_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\035ampy/metrics/v1/metrics.proto\022\017ampy.me"
    "trics.v1\032\037google/protobuf/timestamp.prot"
    "o\"\326\001\n\006Metric\022\022\n\004name\030\001 \001(\tR\004name\022;\n\006labe"
    "ls\030\002 \003(\0132#.ampy.metrics.v1.Metric.Labels"
    "EntryR\006labels\022\024\n\005value\030\003 \001(\001R\005value\022*\n\002a"
    "t\030\004 \001(\0132\032.google.protobuf.TimestampR\002at\032"
    "9\n\013LabelsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu"
    "e\030\002 \001(\tR\005value:\0028\001\"@\n\013MetricBatch\0221\n\007met"
    "rics\030\001 \003(\0132\027.ampy.metrics.v1.MetricR\007met"
    "ricsB\305\001\n\023com.ampy.metrics.v1B\014MetricsPro"
    "toP\001ZBgithub.com/yeonholee50/ampy-proto/"
    "gen/go/ampy/metrics/v1;metricsv1\242\002\003AMX\252\002"
    "\017Ampy.Metrics.V1\312\002\017Ampy\\Metrics\\V1\342\002\033Amp"
    "y\\Metrics\\V1\\GPBMetadata\352\002\021Ampy::Metrics"
    "::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto = {
    false,
    false,
    572,
    descriptor_table_protodef_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
    "ampy/metrics/v1/metrics.proto",
    &descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto_once,
    descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_ampy_2fmetrics_2fv1_2fmetrics_2eproto::offsets,
    file_level_enum_descriptors_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
    file_level_service_descriptors_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
};
namespace ampy {
namespace metrics {
namespace v1 {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse()
    : SuperType(Metric_LabelsEntry_DoNotUse_class_data_.base()) {}
Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Metric_LabelsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse() : SuperType() {}
Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Metric_LabelsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Metric_LabelsEntry_DoNotUse(arena);
}
constexpr auto Metric_LabelsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Metric_LabelsEntry_DoNotUse),
                                            alignof(Metric_LabelsEntry_DoNotUse));
}
constexpr auto Metric_LabelsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Metric_LabelsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Metric_LabelsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Metric_LabelsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Metric_LabelsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Metric_LabelsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Metric_LabelsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Metric_LabelsEntry_DoNotUse_class_data_ =
        Metric_LabelsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Metric_LabelsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Metric_LabelsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Metric_LabelsEntry_DoNotUse_class_data_.tc_table);
  return Metric_LabelsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2>
Metric_LabelsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Metric_LabelsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::metrics::v1::Metric_LabelsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Metric_LabelsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\3\5\0\0\0\0\0"
    "ampy.metrics.v1.Metric.LabelsEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Metric::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Metric>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Metric, _impl_._has_bits_);
};

void Metric::clear_at() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.at_ != nullptr) _impl_.at_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
Metric::Metric(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.metrics.v1.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::metrics::v1::Metric& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        labels_{visibility, arena, from.labels_},
        name_(arena, from.name_) {}

Metric::Metric(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Metric& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Metric_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Metric* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.at_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.at_)
                : nullptr;
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:ampy.metrics.v1.Metric)
}
PROTOBUF_NDEBUG_INLINE Metric::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        labels_{visibility, arena},
        name_(arena) {}

inline void Metric::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, at_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, at_) +
               sizeof(Impl_::value_));
}
Metric::~Metric() {
  // @@protoc_insertion_point(destructor:ampy.metrics.v1.Metric)
  SharedDtor(*this);
}
inline void Metric::SharedDtor(MessageLite& self) {
  Metric& this_ = static_cast<Metric&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.at_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Metric::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Metric(arena);
}
constexpr auto Metric::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Metric, _impl_.labels_) +
          decltype(Metric::_impl_.labels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Metric, _impl_.labels_) +
          decltype(Metric::_impl_.labels_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Metric), alignof(Metric), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Metric::PlacementNew_,
                                 sizeof(Metric),
                                 alignof(Metric));
  }
}
constexpr auto Metric::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Metric_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Metric::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Metric>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Metric::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Metric>(), &Metric::ByteSizeLong,
              &Metric::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Metric, _impl_._cached_size_),
          false,
      },
      &Metric::kDescriptorMethods,
      &descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Metric_class_data_ =
        Metric::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Metric::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Metric_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Metric_class_data_.tc_table);
  return Metric_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 41, 2>
Metric::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Metric, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Metric_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::metrics::v1::Metric>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp at = 4 [json_name = "at"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.at_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // double value = 3 [json_name = "value"];
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.name_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> labels = 2 [json_name = "labels"];
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.labels_), -1, 1, (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // double value = 3 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // .google.protobuf.Timestamp at = 4 [json_name = "at"];
    {PROTOBUF_FIELD_OFFSET(Metric, _impl_.at_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\26\4\6\0\0\0\0\0"
    "ampy.metrics.v1.Metric"
    "name"
    "labels"
  }},
};
PROTOBUF_NOINLINE void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.metrics.v1.Metric)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.labels_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.at_ != nullptr);
      _impl_.at_->Clear();
    }
  }
  _impl_.value_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Metric::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.metrics.v1.Metric)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.metrics.v1.Metric.name");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // map<string, string> labels = 2 [json_name = "labels"];
  if (!this_._internal_labels().empty()) {
    using MapType = ::google::protobuf::Map<::std::string, ::std::string>;
    using WireHelper = _pbi::MapEntryFuncs<::std::string, ::std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_labels();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.metrics.v1.Metric.labels");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.metrics.v1.Metric.labels");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.metrics.v1.Metric.labels");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ampy.metrics.v1.Metric.labels");
      }
    }
  }

  // double value = 3 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_value(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp at = 4 [json_name = "at"];
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.at_, this_._impl_.at_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.metrics.v1.Metric)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Metric::ByteSizeLong(const MessageLite& base) {
  const Metric& this_ = static_cast<const Metric&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Metric::ByteSizeLong() const {
  const Metric& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.metrics.v1.Metric)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> labels = 2 [json_name = "labels"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_labels_size());
      for (const auto& entry : this_._internal_labels()) {
        total_size += _pbi::MapEntryFuncs<::std::string, ::std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string name = 1 [json_name = "name"];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // .google.protobuf.Timestamp at = 4 [json_name = "at"];
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.at_);
    }
    // double value = 3 [json_name = "value"];
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_value()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Metric::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Metric*>(&to_msg);
  auto& from = static_cast<const Metric&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.metrics.v1.Metric)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.at_ != nullptr);
      if (_this->_impl_.at_ == nullptr) {
        _this->_impl_.at_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.at_);
      } else {
        _this->_impl_.at_->MergeFrom(*from._impl_.at_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_value()) != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.metrics.v1.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Metric::InternalSwap(Metric* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Metric, _impl_.value_)
      + sizeof(Metric::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(Metric, _impl_.at_)>(
          reinterpret_cast<char*>(&_impl_.at_),
          reinterpret_cast<char*>(&other->_impl_.at_));
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MetricBatch::_Internal {
 public:
};

MetricBatch::MetricBatch(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MetricBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ampy.metrics.v1.MetricBatch)
}
PROTOBUF_NDEBUG_INLINE MetricBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::ampy::metrics::v1::MetricBatch& from_msg)
      : metrics_{visibility, arena, from.metrics_},
        _cached_size_{0} {}

MetricBatch::MetricBatch(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MetricBatch& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MetricBatch_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MetricBatch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ampy.metrics.v1.MetricBatch)
}
PROTOBUF_NDEBUG_INLINE MetricBatch::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : metrics_{visibility, arena},
        _cached_size_{0} {}

inline void MetricBatch::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MetricBatch::~MetricBatch() {
  // @@protoc_insertion_point(destructor:ampy.metrics.v1.MetricBatch)
  SharedDtor(*this);
}
inline void MetricBatch::SharedDtor(MessageLite& self) {
  MetricBatch& this_ = static_cast<MetricBatch&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MetricBatch::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MetricBatch(arena);
}
constexpr auto MetricBatch::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MetricBatch, _impl_.metrics_) +
          decltype(MetricBatch::_impl_.metrics_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MetricBatch), alignof(MetricBatch), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MetricBatch::PlacementNew_,
                                 sizeof(MetricBatch),
                                 alignof(MetricBatch));
  }
}
constexpr auto MetricBatch::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MetricBatch_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MetricBatch::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MetricBatch>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MetricBatch::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MetricBatch>(), &MetricBatch::ByteSizeLong,
              &MetricBatch::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MetricBatch, _impl_._cached_size_),
          false,
      },
      &MetricBatch::kDescriptorMethods,
      &descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MetricBatch_class_data_ =
        MetricBatch::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MetricBatch::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MetricBatch_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MetricBatch_class_data_.tc_table);
  return MetricBatch_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
MetricBatch::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MetricBatch_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ampy::metrics::v1::MetricBatch>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ampy.metrics.v1.Metric metrics = 1 [json_name = "metrics"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MetricBatch, _impl_.metrics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ampy.metrics.v1.Metric metrics = 1 [json_name = "metrics"];
    {PROTOBUF_FIELD_OFFSET(MetricBatch, _impl_.metrics_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::ampy::metrics::v1::Metric>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MetricBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ampy.metrics.v1.MetricBatch)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.metrics_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MetricBatch::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MetricBatch& this_ = static_cast<const MetricBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MetricBatch::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MetricBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:ampy.metrics.v1.MetricBatch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ampy.metrics.v1.Metric metrics = 1 [json_name = "metrics"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_metrics_size());
       i < n; i++) {
    const auto& repfield = this_._internal_metrics().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ampy.metrics.v1.MetricBatch)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MetricBatch::ByteSizeLong(const MessageLite& base) {
  const MetricBatch& this_ = static_cast<const MetricBatch&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MetricBatch::ByteSizeLong() const {
  const MetricBatch& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:ampy.metrics.v1.MetricBatch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .ampy.metrics.v1.Metric metrics = 1 [json_name = "metrics"];
    {
      total_size += 1UL * this_._internal_metrics_size();
      for (const auto& msg : this_._internal_metrics()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MetricBatch::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MetricBatch*>(&to_msg);
  auto& from = static_cast<const MetricBatch&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:ampy.metrics.v1.MetricBatch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_metrics()->MergeFrom(
      from._internal_metrics());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MetricBatch::CopyFrom(const MetricBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ampy.metrics.v1.MetricBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MetricBatch::InternalSwap(MetricBatch* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.metrics_.InternalSwap(&other->_impl_.metrics_);
}

::google::protobuf::Metadata MetricBatch::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace metrics
}  // namespace ampy
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ampy_2fmetrics_2fv1_2fmetrics_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
